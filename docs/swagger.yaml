definitions:
  AcceptInvitationBody:
    description: |-
      This is used for accepting an invitation.
      This is used for operation to accept connection invitation.
    properties:
      invitation:
        $ref: '#/definitions/Invitation'
      my_label:
        type: string
        x-go-name: MyLabel
      public:
        description: Optional Public DID to be used for this request
        type: string
        x-go-name: Public
      reuse_any_connection:
        type: boolean
        x-go-name: ReuseAnyConnection
      reuse_connection:
        type: string
        x-go-name: ReuseConnection
      router_connections:
        description: Optional specifies router connections (comma-separated values)
        type: string
        x-go-name: RouterConnections
    title: AcceptInvitationRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  AcceptInvitationRequest:
    description: This is used for accepting an invitation.
    properties:
      invitation:
        $ref: '#/definitions/Invitation'
      my_label:
        type: string
        x-go-name: MyLabel
      my_router_connections:
        items:
          type: string
        type: array
        x-go-name: MyRouterConnections
      reuse_any_connection:
        type: boolean
        x-go-name: ReuseAnyConnection
      reuse_connection:
        type: string
        x-go-name: ReuseConnection
      router_connections:
        type: string
        x-go-name: RouterConnections
    title: AcceptInvitationRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/services
  AcceptInvitationResponse:
    description: Represents a AcceptInvitation response message.
    properties:
      accept:
        description: Connection invitation accept mode
        type: string
        x-go-name: Accept
      alias:
        description: Alias
        type: string
        x-go-name: Alias
      connection_id:
        description: the connection ID of the connection invitation
        type: string
        x-go-name: ConnectionId
      created_at:
        $ref: '#/definitions/Timestamp'
      error_msg:
        description: Error message
        type: string
        x-go-name: ErrorMsg
      inbound_connection_id:
        description: Inbound Connection ID  of the connection invitation
        type: string
        x-go-name: InboundConnectionId
      initiator:
        description: Connection invitation initiator
        type: string
        x-go-name: Initiator
      invitation_key:
        description: Invitation key
        type: string
        x-go-name: InvitationKey
      invitation_mode:
        description: Invitation mode
        type: string
        x-go-name: InvitationMode
      my_did:
        description: My DID
        type: string
        x-go-name: MyDid
      request_id:
        description: Invitation ID of invitation response
        type: string
        x-go-name: RequestId
      routing_state:
        description: Routing state of connection invitation
        type: string
        x-go-name: RoutingState
      state:
        description: State of the connection invitation
        type: string
        x-go-name: State
      their_did:
        description: Other party's DID
        type: string
        x-go-name: TheirDid
      their_label:
        description: Other party's label
        type: string
        x-go-name: TheirLabel
      their_role:
        description: Other party's role
        type: string
        x-go-name: TheirRole
      updated_at:
        $ref: '#/definitions/Timestamp'
    title: |-
      AcceptInvitationResponse model
      This is used for returning a accept invitation response for single invitation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  AcceptPresentationBody:
    description: This is used for accepting a presentation.
    properties:
      names:
        description: Names represent the names of how presentations will be stored
        items:
          type: string
        type: array
        x-go-name: Names
      redirectURL:
        description: |-
          RedirectURL is optional web redirect URL that can be sent to prover.
          Useful in cases where verifier would want prover to redirect once protocol is over.
        type: string
        x-go-name: RedirectURL
    title: AcceptPresentationBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  AcceptProposePresentationBody:
    description: This is used for accepting a propose presentation.
    properties:
      request_presentation:
        $ref: '#/definitions/RequestPresentationV2'
    title: AcceptProposePresentationBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  AcceptProposePresentationV3Body:
    description: This is used for accepting a propose presentation.
    properties:
      request_presentation:
        $ref: '#/definitions/RequestPresentationV3'
    title: AcceptProposePresentationV3Body model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  Action:
    properties:
      msg:
        additionalProperties:
          $ref: '#/definitions/Any'
        type: object
        x-go-name: Msg
      my_did:
        type: string
        x-go-name: MyDid
      piid:
        description: Protocol instance ID
        type: string
        x-go-name: Piid
      protocol_name:
        type: string
        x-go-name: ProtocolName
      their_did:
        type: string
        x-go-name: TheirDid
    title: Action contains helpful information about action.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  ActionsResponse:
    description: Represents Actions response message.
    properties:
      actions:
        items:
          $ref: '#/definitions/Action'
        type: array
        x-go-name: Actions
    title: ActionsResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/services
  AddContentRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      collectionID:
        description: ID of the wallet collection to which this content should belong.
        type: string
        x-go-name: CollectionID
      content:
        description: content to be added to wallet content store.
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Content
      contentType:
        description: |-
          type of the content to be added to the wallet.
          supported types: collection, credential, didResolutionResponse, metadata, connection, key
        type: string
        x-go-name: ContentType
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: AddContentRequest is request for adding a content to wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  AddContentResponse:
    properties:
      contentID:
        type: string
        x-go-name: ContentID
    title: AddContentResponse is response for adding a content to wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  AddRemoteProviderRequest:
    properties:
      endpoint:
        type: string
        x-go-name: Endpoint
    title: AddRemoteProviderRequest is a request model for adding a new remote context
      provider.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/ld/services
  Any:
    description: |-
      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

      Foo foo = ...;
      Any any;
      any.PackFrom(foo);
      ...
      if (any.UnpackTo(&foo)) {
      ...
      }

      Example 2: Pack and unpack a message in Java.

      Foo foo = ...;
      Any any = Any.pack(foo);
      ...
      if (any.is(Foo.class)) {
      foo = any.unpack(Foo.class);
      }

      Example 3: Pack and unpack a message in Python.

      foo = Foo(...)
      any = Any()
      any.Pack(foo)
      ...
      if any.Is(Foo.DESCRIPTOR):
      any.Unpack(foo)
      ...

      Example 4: Pack and unpack a message in Go

      foo := &pb.Foo{...}
      any, err := anypb.New(foo)
      if err != nil {
      ...
      }
      ...
      foo := &pb.Foo{}
      if err := any.UnmarshalTo(foo); err != nil {
      ...
      }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".


      JSON
      ====
      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

      package google.profile;
      message Person {
      string first_name = 1;
      string last_name = 2;
      }

      {
      "@type": "type.googleapis.com/google.profile.Person",
      "firstName": <string>,
      "lastName": <string>
      }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

      {
      "@type": "type.googleapis.com/google.protobuf.Duration",
      "value": "1.212s"
      }
    properties:
      type_url:
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          If no scheme is provided, `https` is assumed.
          An HTTP GET on the URL must yield a [google.protobuf.Type][]
          value in binary format, or produce an error.
          Applications are allowed to cache lookup results based on the
          URL, or have them precompiled into a binary to avoid any
          lookup. Therefore, binary compatibility needs to be preserved
          on changes to types. (Use versioned type names to manage
          breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
        type: string
        x-go-name: TypeUrl
      value:
        description: Must be a valid serialized protocol buffer of the above specified
          type.
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Value
    title: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.
    type: object
    x-go-package: google.golang.org/protobuf/types/known/anypb
  Attachment:
    description: To find out more please visit https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0017-attachments
    properties:
      byte_count:
        description: |-
          ByteCount is an optional, and mostly relevant when content is included by reference instead of by value.
          Lets the receiver guess how expensive it will be, in time, bandwidth, and storage, to fully fetch the attachment.
        format: int64
        type: integer
        x-go-name: ByteCount
      data:
        $ref: '#/definitions/AttachmentData'
      description:
        description: Description is an optional human-readable description of the
          content.
        type: string
        x-go-name: Description
      expires_time:
        $ref: '#/definitions/Timestamp'
      filename:
        description: |-
          FileName is a hint about the name that might be used if this attachment is persisted as a file.
          It is not required, and need not be unique. If this field is present and mime-type is not,
          the extension on the filename may be used to infer a MIME type.
        type: string
        x-go-name: Filename
      id:
        description: |-
          ID is a JSON-LD construct that uniquely identifies attached content within the scope of a given message.
          Recommended on appended attachment descriptors. Possible but generally unused on embedded attachment descriptors.
          Never required if no references to the attachment exist; if omitted, then there is no way
          to refer to the attachment later in the thread, in error messages, and so forth.
          Because @id is used to compose URIs, it is recommended that this name be brief and avoid spaces
          and other characters that require URI escaping.
        type: string
        x-go-name: Id
      lastmod_time:
        $ref: '#/definitions/Timestamp'
      mime_type:
        description: MimeType describes the MIME type of the attached content. Optional
          but recommended.
        type: string
        x-go-name: MimeType
    title: Attachment is intended to provide the possibility to include files, links
      or even JSON payload to the message.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  AttachmentData:
    properties:
      base64:
        description: Base64 encoded data, when representing arbitrary content inline
          instead of via links. Optional.
        type: string
        x-go-name: Base64
      json:
        $ref: '#/definitions/Any'
      jws:
        $ref: '#/definitions/Any'
      links:
        description: Links is a list of zero or more locations at which the content
          may be fetched.
        items:
          type: string
        type: array
        x-go-name: Links
      sha256:
        description: |-
          Sha256 is a hash of the content. Optional. Used as an integrity check if content is inlined.
          if content is only referenced, then including this field makes the content tamper-evident.
          This may be redundant, if the content is stored in an inherently immutable container like
          content-addressable storage. This may also be undesirable, if dynamic content at a specified
          link is beneficial. Including a hash without including a way to fetch the content via link
          is a form of proof of existence.
        type: string
        x-go-name: Sha256
    title: AttachmentData contains attachment payload.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  AttachmentV2:
    description: To find out more please visit https://identity.foundation/didcomm-messaging/spec/#attachments
    properties:
      byte_count:
        description: |-
          ByteCount is an optional, and mostly relevant when content is included by reference instead of by value.
          Lets the receiver guess how expensive it will be, in time, bandwidth, and storage, to fully fetch the attachment.
        format: int64
        type: integer
        x-go-name: ByteCount
      data:
        $ref: '#/definitions/AttachmentData'
      description:
        description: Description is an optional human-readable description of the
          content.
        type: string
        x-go-name: Description
      filename:
        description: |-
          FileName is a hint about the name that might be used if this attachment is persisted as a file.
          It is not required, and need not be unique. If this field is present and mime-type is not,
          the extension on the filename may be used to infer a MIME type.
        type: string
        x-go-name: Filename
      format:
        description: Format describes the format of the attachment if the media_type
          is not sufficient.
        type: string
        x-go-name: Format
      id:
        description: |-
          ID is a JSON-LD construct that uniquely identifies attached content within the scope of a given message.
          Recommended on appended attachment descriptors. Possible but generally unused on embedded attachment descriptors.
          Never required if no references to the attachment exist; if omitted, then there is no way
          to refer to the attachment later in the thread, in error messages, and so forth.
          Because @id is used to compose URIs, it is recommended that this name be brief and avoid spaces
          and other characters that require URI escaping.
        type: string
        x-go-name: Id
      lastmod_time:
        $ref: '#/definitions/Timestamp'
      media_type:
        description: MediaType describes the MIME type of the attached content. Optional
          but recommended.
        type: string
        x-go-name: MediaType
    title: AttachmentV2 is intended to provide the possibility to include files, links
      or even JSON payload to the message.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  Attribute:
    properties:
      mime_type:
        type: string
        x-go-name: MimeType
      name:
        type: string
        x-go-name: Name
      value:
        type: string
        x-go-name: Value
    title: Attribute describes an attribute for a Preview Credential.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  AwaitReply:
    properties:
      message_type:
        description: ReplyMessageType message message of incoming reply
        type: string
        x-go-name: MessageType
      timeout:
        $ref: '#/definitions/Duration'
    title: AwaitReply contains await for reply parameters.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/msg/services
  BatchPickupRequest:
    properties:
      batch_size:
        description: Size of batch of pending messages to be dispatched.
        format: int64
        type: integer
        x-go-name: BatchSize
      connection_ID:
        description: ConnectionID of connection for which pending messages needs to
          be dispatched.
        type: string
        x-go-name: Connection_ID
    title: BatchPickupRequest is request for dispatching pending messages.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/mediator/services
  BatchPickupResponse:
    properties:
      message_count:
        description: Count of messages dispatched.
        format: int64
        type: integer
        x-go-name: MessageCount
    title: BatchPickupResponse is response for dispatching pending messages.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/mediator/services
  Code:
    format: int32
    title: TODO command types shouldn't be mentioned in common error package, [Issue#1182].
    type: integer
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  Color:
    properties:
      color:
        type: string
        x-go-name: Color
    title: Color represents a single color in RGB hex code format.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  ConnectOpts:
    properties:
      myLabel:
        description: Label to be shared with the other agent during the subsequent
          DID exchange.
        type: string
        x-go-name: MyLabel
      reuseAnyConnection:
        description: To use any recognized DID in the services array for a reusable
          connection.
        type: boolean
        x-go-name: ReuseAnyConnection
      reuseConnection:
        description: DID to be used when reusing a connection.
        type: string
        x-go-name: ReuseConnection
      routerConnections:
        description: router connections to be used to establish connection.
        items:
          type: string
        type: array
        x-go-name: RouterConnections
      timeout:
        $ref: '#/definitions/Duration'
    title: ConnectOpts is option for accepting out-of-band invitation and to perform
      DID exchange.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/types
  ConnectRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      invitation:
        $ref: '#/definitions/Invitation'
      myLabel:
        description: |-
          ConnectOpts
          Label to be shared with the other agent during the subsequent DID exchange.
        type: string
        x-go-name: MyLabel
      reuseAnyConnection:
        description: To use any recognized DID in the services array for a reusable
          connection.
        type: boolean
        x-go-name: ReuseAnyConnection
      reuseConnection:
        description: DID to be used when reusing a connection.
        type: string
        x-go-name: ReuseConnection
      routerConnections:
        description: router connections to be used to establish connection.
        items:
          type: string
        type: array
        x-go-name: RouterConnections
      timeout:
        $ref: '#/definitions/Duration'
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: ConnectRequest is request model for wallet DID connect operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ConnectResponse:
    properties:
      connectionID:
        description: connection ID of the connection established.
        type: string
        x-go-name: ConnectionID
    title: ConnectResponse is response model from wallet DID connection operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ConnectionID:
    description: This is used for querying/removing connection by ID.
    properties:
      id:
        description: Connection ID
        type: string
        x-go-name: Id
    title: ConnectionID model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  ConnectionsResponse:
    properties:
      connections:
        items:
          type: string
        type: array
        x-go-name: Connections
    title: ConnectionsResponse is response for router`s connections.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/mediator/services
  Constraints:
    properties:
      fields:
        items:
          $ref: '#/definitions/Field'
        type: array
        x-go-name: Fields
      is_holder:
        items:
          $ref: '#/definitions/Holder'
        type: array
        x-go-name: IsHolder
      limit_disclosure:
        type: string
        x-go-name: LimitDisclosure
      subject_is_issuer:
        type: string
        x-go-name: SubjectIsIssuer
    title: Constraints describes InputDescriptor`s Constraints field.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  Content:
    properties:
      byte_count:
        format: int64
        type: integer
        x-go-name: ByteCount
      link:
        type: string
        x-go-name: Link
      sha256:
        type: string
        x-go-name: Sha256
    title: Content keeps image data.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/types
  ContentQueryRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      query:
        description: credential query(s) for querying wallet contents.
        items:
          $ref: '#/definitions/QueryParams'
        type: array
        x-go-name: Query
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: ContentQueryRequest is request model for querying wallet contents.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ContentQueryResponse:
    properties:
      results:
        description: response presentation(s) containing query results.
        items:
          $ref: '#/definitions/VerifiablePresentation'
        type: array
        x-go-name: Results
      totalRecords:
        format: int64
        type: integer
        x-go-name: TotalRecords
    title: ContentQueryResponse response for wallet content query.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  CreateConnectionRequest:
    description: |-
      CreateConnectionRequest request to create a didcomm v2 connection.
      This is used for creating connection request.
    properties:
      implicit:
        type: boolean
        x-go-name: Implicit
      invitation_did:
        type: string
        x-go-name: InvitationDid
      invitation_id:
        type: string
        x-go-name: InvitationId
      my_id:
        type: string
        x-go-name: MyId
      parent_thread_id:
        type: string
        x-go-name: ParentThreadId
      their_did:
        $ref: '#/definitions/DIDDocument'
      their_label:
        type: string
        x-go-name: TheirLabel
      thread_id:
        type: string
        x-go-name: ThreadId
    title: CreateConnectionRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  CreateDIDRequest:
    properties:
      did:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Did
      method:
        type: string
        x-go-name: Method
      opts:
        additionalProperties:
          $ref: '#/definitions/Any'
        type: object
        x-go-name: Opts
    title: CreateDIDRequest is model for create did request.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vdr/services
  CreateInvitationRequest:
    description: This is used for creating an invitation.
    properties:
      accept:
        items:
          type: string
        type: array
        x-go-name: Accept
      alias:
        description: The Alias to be used in invitation to be created
        type: string
        x-go-name: Alias
      attachments:
        $ref: '#/definitions/AttachmentV2'
        items:
          $ref: '#/definitions/GenericAttachment'
        type: array
      goal:
        type: string
        x-go-name: Goal
      goal_code:
        type: string
        x-go-name: GoalCode
      label:
        type: string
        x-go-name: Label
      protocols:
        items:
          type: string
        type: array
        x-go-name: Protocols
      public:
        description: Optional public DID to be used in invitation
        type: string
        x-go-name: Public
      router_connection_id:
        type: string
        x-go-name: RouterConnectionId
      service:
        items:
          $ref: '#/definitions/Any'
        type: array
        x-go-name: Service
    required:
    - attachments
    title: CreateInvitationRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  CreateInvitationResponse:
    description: Represents a CreateInvitation response message.
    properties:
      alias:
        type: string
        x-go-name: Alias
      invitation:
        $ref: '#/definitions/Invitation'
      invitation_url:
        type: string
        x-go-name: InvitationUrl
    title: CreateInvitationResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  CreateKeyPairRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      keyType:
        description: type of the key to be created.
        type: string
        x-go-name: KeyType
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: CreateKeyPairRequest is request model for creating key pair from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  CreateKeyPairResponse:
    properties:
      keyID:
        description: |-
          wallet.KeyPair
          base64 encoded key ID of the key created.
        type: string
        x-go-name: KeyID
      publicKey:
        description: base64 encoded public key of the key pair created.
        type: string
        x-go-name: PublicKey
    title: CreateKeyPairResponse is response model for creating key pair from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  CreateOrUpdateProfileRequest:
    description: |-
      CreateOrUpdateProfileRequest is request model for
      creating a new wallet profile or updating an existing wallet profile.
    properties:
      edvConfiguration:
        $ref: '#/definitions/EDVConfiguration'
      keyStoreURL:
        description: |-
          passphrase for web/remote kms for key operations.
          Optional, if this option is provided then wallet for this profile will use web/remote KMS for key operations.
        type: string
        x-go-name: KeyStoreURL
      localKMSPassphrase:
        description: |-
          passphrase for local kms for key operations.
          Optional, if this option is provided then wallet for this profile will use local KMS for key operations.
        type: string
        x-go-name: LocalKMSPassphrase
      userID:
        description: Unique identifier to identify wallet user
        type: string
        x-go-name: UserID
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  CredentialFulfillment:
    description: |-
      CredentialFulfillment represents a Credential Fulfillment object as defined in
      https://identity.foundation/credential-manifest/#credential-fulfillment.
    properties:
      descriptor_map:
        items:
          $ref: '#/definitions/InputDescriptor'
        type: array
        x-go-name: DescriptorMap
      id:
        type: string
        x-go-name: Id
      manifest_id:
        type: string
        x-go-name: ManifestId
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  CredentialManifest:
    description: |-
      CredentialManifest represents a Credential Manifest object as defined in
      https://identity.foundation/credential-manifest/#credential-manifest-2.
    properties:
      format:
        $ref: '#/definitions/Format'
      id:
        type: string
        x-go-name: Id
      issuer:
        $ref: '#/definitions/Issuer'
      output_descriptors:
        items:
          $ref: '#/definitions/OutputDescriptor'
        type: array
        x-go-name: OutputDescriptors
      presentation_definition:
        $ref: '#/definitions/PresentationDefinition'
      version:
        type: string
        x-go-name: Version
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  CredentialProof:
    description: CredentialProof for verifiable credentials
    properties:
      attributes:
        description: 'e.g.     "attributes": "pPYmqDvwwWBDPNykXVrBtKdsJDeZUGFA...tTERiLqsZ5oxCoCSodPQaggkDJy",'
        type: string
        x-go-name: Attributes
      capabilityChain:
        description: CapabilityChain must be an array. Each element is either a string
          or an object.
        items:
          type: string
        type: array
        x-go-name: CapabilityChain
      challenge:
        description: A value chosen by the verifier to mitigate authentication proof
          replay attacks.
        type: string
        x-go-name: Challenge
      created:
        $ref: '#/definitions/Timestamp'
      creator:
        type: string
        x-go-name: Creator
      domain:
        description: The domain of the proof to restrict its use to a particular target.
        type: string
        x-go-name: Domain
      issuerData:
        $ref: '#/definitions/Timestamp'
      jws:
        description: Detached JSON Web Signature
        type: string
        x-go-name: Jws
      nonRevocationProof:
        type: string
        x-go-name: NonRevocationProof
      nonce:
        description: A value chosen by the creator of a proof to randomize proof values
          for privacy purposes.
        type: string
        x-go-name: Nonce
      primaryProof:
        type: string
        x-go-name: PrimaryProof
      proofPurpose:
        description: |-
          The purpose of the proof to be used with verificationMethod
          e.g. assertionMethod
        type: string
        x-go-name: ProofPurpose
      proofValue:
        description: |-
          Value of the Linked Data proof.
          e.g. z2aArNcQKX9aqYK7GRZmV7c9xfGuwB5YAXhkYY9DTvLdTCQEsXaNpz1G
        type: string
        x-go-name: ProofValue
      signature:
        type: string
        x-go-name: Signature
      signatureCorrectnessProof:
        type: string
        x-go-name: SignatureCorrectnessProof
      signatureRepresentation:
        $ref: '#/definitions/SignatureRepresentation'
      type:
        description: |-
          Linked Data Signature Suite used to produce proof.
          e.g. RsaSignature2018 or CLSignature2019
        type: string
        x-go-name: Type
      verificationMethod:
        description: |-
          Verification Method used to verify proof.
          e.g. https://example.edu/issuers/14#key-1 or https://example.edu/issuers/565049#key-1
        type: string
        x-go-name: VerificationMethod
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  CredentialSchema:
    properties:
      id:
        description: |-
          id of schema
          e.g. https://example.org/examples/degree.json
        type: string
        x-go-name: Id
      type:
        description: |-
          type of schema
          e.g. JsonSchemaValidator2018 or ZkpExampleSchema2018
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  CredentialSpec:
    properties:
      credential:
        $ref: '#/definitions/VerifiableCredential'
      options:
        $ref: '#/definitions/CredentialSpecOptions'
    title: CredentialSpec is the attachment payload in messages conforming to the
      RFC0593 format.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  CredentialSpecOptions:
    description: TODO support CredentialStatus.
    properties:
      challenge:
        type: string
        x-go-name: Challenge
      created:
        type: string
        x-go-name: Created
      credentialStatus:
        $ref: '#/definitions/CredentialStatus'
      domain:
        type: string
        x-go-name: Domain
      proofPurpose:
        type: string
        x-go-name: ProofPurpose
      proofType:
        type: string
        x-go-name: ProofType
    title: CredentialSpecOptions are the options for issuance of the credential.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  CredentialStatus:
    properties:
      type:
        type: string
        x-go-name: Type
    title: CredentialStatus is the requested status for the credential.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  DIDArgs:
    properties:
      did:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Did
      documentURL:
        type: string
        x-go-name: DocumentURL
      name:
        type: string
        x-go-name: Name
      url:
        type: string
        x-go-name: Url
    title: DIDArgs is model for did doc with fields related to command features.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vdr/types
  DIDCommV2Endpoint:
    properties:
      accept:
        description: Accept contains the MediaType profiles accepted by this endpoint.
        items:
          type: string
        type: array
        x-go-name: Accept
      routingKeys:
        description: RoutingKeys contains the list of keys trusted as routing keys
          for the mediators/routers of this endpoint.
        items:
          type: string
        type: array
        x-go-name: RoutingKeys
      uri:
        description: URI contains the endpoint URI.
        type: string
        x-go-name: Uri
    title: DIDCommV2Endpoint contains ServiceEndpoint data specifically for DIDcommV2
      and is wrapped in Endpoint as an array.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  DIDDocument:
    properties:
      contents:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Contents
      id:
        type: string
        x-go-name: Id
    title: DIDDocument model.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  DataDisplayDescriptor:
    description: |-
      DataDisplayDescriptor represents a Data Display Descriptor as defined in
      https://identity.foundation/credential-manifest/wallet-rendering/#data-display.
    properties:
      description:
        $ref: '#/definitions/DisplayMappingObject'
      properties:
        items:
          $ref: '#/definitions/LabeledDisplayMappingObject'
        type: array
        x-go-name: Properties
      subtitle:
        $ref: '#/definitions/DisplayMappingObject'
      title:
        $ref: '#/definitions/DisplayMappingObject'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  DeriveCredentialOptions:
    properties:
      nonce:
        description: An encoded nonce provided by the holder of the credential to
          be included into the LinkedDataProof.
        type: string
        x-go-name: Nonce
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  DeriveCredentialRequest:
    properties:
      frame:
        additionalProperties:
          $ref: '#/definitions/Any'
        description: frame - A JSON-LD frame used for selective disclosure (an object)
        type: object
        x-go-name: Frame
      nonce:
        description: Nonce to prove uniqueness or freshness of the proof.
        type: string
        x-go-name: Nonce
      options:
        $ref: '#/definitions/DeriveCredentialOptions'
      skipVerify:
        description: SkipVerify can be used to skip verification of `Credential` provided.
        type: boolean
        x-go-name: SkipVerify
      verifiableCredential:
        $ref: '#/definitions/VerifiableCredential'
    title: DeriveCredentialRequest // Derives a credential and returns it in the response
      body.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/services
  DeriveOptions:
    properties:
      frame:
        $ref: '#/definitions/Any'
      nonce:
        description: Nonce to prove uniqueness or freshness of the proof.
        type: string
        x-go-name: Nonce
    title: DeriveOptions model containing options for deriving a credential.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/types
  DeriveRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      deriveOption:
        $ref: '#/definitions/DeriveOptions'
      rawCredentials:
        $ref: '#/definitions/VerifiableCredential'
      storedCredentialID:
        description: |-
          ID of the credential already saved in wallet content store.
          optional, if provided then this option takes precedence.
        type: string
        x-go-name: StoredCredentialID
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: DeriveRequest is request model for deriving a credential from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  DeriveResponse:
    properties:
      credential:
        $ref: '#/definitions/VerifiableCredential'
    title: DeriveResponse is response for derived credential operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  DisplayMappingObject:
    description: |-
      DisplayMappingObject represents a Display Mapping Object as defined in
      https://identity.foundation/credential-manifest/wallet-rendering/#display-mapping-object
      There are two possibilities here:
      If the text field is used, then schema is not needed.
      If the path field is used, then schema is required.
      TODO (#3045) Support for JSONPath bracket notation.
    properties:
      fallback:
        type: string
        x-go-name: Fallback
      path:
        items:
          type: string
        type: array
        x-go-name: Path
      schema:
        $ref: '#/definitions/Schema'
      text:
        type: string
        x-go-name: Text
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  Doc:
    properties:
      assertionMethod:
        items:
          $ref: '#/definitions/Verification'
        type: array
        x-go-name: AssertionMethod
      authentication:
        items:
          $ref: '#/definitions/Verification'
        type: array
        x-go-name: Authentication
      capabilityDelegation:
        items:
          $ref: '#/definitions/Verification'
        type: array
        x-go-name: CapabilityDelegation
      capabilityInvocation:
        items:
          $ref: '#/definitions/Verification'
        type: array
        x-go-name: CapabilityInvocation
      context:
        items:
          type: string
        type: array
        x-go-name: Context
      created:
        $ref: '#/definitions/Timestamp'
      id:
        type: string
        x-go-name: Id
      keyAgreement:
        items:
          $ref: '#/definitions/Verification'
        type: array
        x-go-name: KeyAgreement
      processingMeta:
        $ref: '#/definitions/ProcessingMeta'
      proof:
        items:
          $ref: '#/definitions/Proof'
        type: array
        x-go-name: Proof
      service:
        items:
          $ref: '#/definitions/Service'
        type: array
        x-go-name: Service
      updated:
        $ref: '#/definitions/Timestamp'
      verificationMethod:
        items:
          $ref: '#/definitions/VerificationMethod'
        type: array
        x-go-name: VerificationMethod
    title: Doc DID Document definition.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  DocResolution:
    properties:
      context:
        items:
          type: string
        type: array
        x-go-name: Context
      didDocument:
        $ref: '#/definitions/Doc'
      documentMetadata:
        $ref: '#/definitions/DocumentMetadata'
    title: DocResolution did resolution.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  Document:
    properties:
      content:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Content
      documentURL:
        type: string
        x-go-name: DocumentURL
      url:
        type: string
        x-go-name: Url
    title: Document is a JSON-LD context document with associated metadata.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/ld/types
  DocumentMetadata:
    properties:
      canonicalId:
        description: CanonicalID is canonical ID key.
        type: string
        x-go-name: CanonicalId
      deactivated:
        description: Deactivated is deactivated flag key.
        type: boolean
        x-go-name: Deactivated
      equivalentId:
        description: EquivalentID is equivalent ID array.
        items:
          type: string
        type: array
        x-go-name: EquivalentId
      method:
        $ref: '#/definitions/MethodMetadata'
      versionId:
        description: VersionID is version ID key.
        type: string
        x-go-name: VersionId
    title: DocumentMetadata document metadata.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  Duration:
    description: |-
      # Examples

      Example 1: Compute Duration from two Timestamps in pseudo code.

      Timestamp start = ...;
      Timestamp end = ...;
      Duration duration = ...;

      duration.seconds = end.seconds - start.seconds;
      duration.nanos = end.nanos - start.nanos;

      if (duration.seconds < 0 && duration.nanos > 0) {
      duration.seconds += 1;
      duration.nanos -= 1000000000;
      } else if (duration.seconds > 0 && duration.nanos < 0) {
      duration.seconds -= 1;
      duration.nanos += 1000000000;
      }

      Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.

      Timestamp start = ...;
      Duration duration = ...;
      Timestamp end = ...;

      end.seconds = start.seconds + duration.seconds;
      end.nanos = start.nanos + duration.nanos;

      if (end.nanos < 0) {
      end.seconds -= 1;
      end.nanos += 1000000000;
      } else if (end.nanos >= 1000000000) {
      end.seconds += 1;
      end.nanos -= 1000000000;
      }

      Example 3: Compute Duration from datetime.timedelta in Python.

      td = datetime.timedelta(days=3, minutes=10)
      duration = Duration()
      duration.FromTimedelta(td)

      # JSON Mapping

      In JSON format, the Duration type is encoded as a string rather than an
      object, where the string ends in the suffix "s" (indicating seconds) and
      is preceded by the number of seconds, with nanoseconds expressed as
      fractional seconds. For example, 3 seconds with 0 nanoseconds should be
      encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should
      be expressed in JSON format as "3.000000001s", and 3 seconds and 1
      microsecond should be expressed in JSON format as "3.000001s".
    properties:
      nanos:
        description: |-
          Signed fractions of a second at nanosecond resolution of the span
          of time. Durations less than one second are represented with a 0
          `seconds` field and a positive or negative `nanos` field. For durations
          of one second or more, a non-zero value for the `nanos` field must be
          of the same sign as the `seconds` field. Must be from -999,999,999
          to +999,999,999 inclusive.
        format: int32
        type: integer
        x-go-name: Nanos
      seconds:
        description: |-
          Signed seconds of the span of time. Must be from -315,576,000,000
          to +315,576,000,000 inclusive. Note: these bounds are computed from:
          60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
        format: int64
        type: integer
        x-go-name: Seconds
    title: |-
      A Duration represents a signed, fixed-length span of time represented
      as a count of seconds and fractions of seconds at nanosecond
      resolution. It is independent of any calendar and concepts like "day"
      or "month". It is related to Timestamp in that the difference between
      two Timestamp values is a Duration and it can be added or subtracted
      from a Timestamp. Range is approximately +-10,000 years.
    type: object
    x-go-package: google.golang.org/protobuf/types/known/durationpb
  EDVConfiguration:
    description: Encrypted Data Vault https://identity.foundation/confidential-storage/#encrypted-data-vault
    properties:
      encryptionKID:
        description: |-
          Encryption key ID of already existing key in wallet profile kms.
          If profile is using localkms then wallet will create this key set for wallet user.
        type: string
        x-go-name: EncryptionKID
      macKID:
        description: |-
          MAC operation key ID of already existing key in wallet profile kms.
          If profile is using localkms then wallet will create this key set for wallet user.
        type: string
        x-go-name: MacKID
      serverURL:
        description: EDV server URL for storing wallet contents.
        type: string
        x-go-name: ServerURL
      vaultID:
        description: EDV vault ID for storing the wallet contents.
        type: string
        x-go-name: VaultID
    title: EDVConfiguration contains configuration for EDV settings for profile creation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/types
  Empty:
    description: Empty model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/common/types
  Encoding:
    description: |-
      These are the encodings specified in the standard, not are all
      These are the encodings specified in the standard, not are all
      supported yet
    format: int32
    type: integer
    x-go-package: github.com/bhatti/GSSI/api/common/types
  Endpoint:
    description: |-
      1- DIDcomm V2
      2- DIDComm V1
      3- DIDCore
      To force lower priority endpoint content, avoid setting higher priority data during Unmarshal() execution.
    properties:
      rawDIDCommV1:
        type: string
        x-go-name: RawDIDCommV1
      rawDIDCommV2:
        items:
          $ref: '#/definitions/DIDCommV2Endpoint'
        type: array
        x-go-name: RawDIDCommV2
      rawObj:
        $ref: '#/definitions/Any'
    title: 'Endpoint contains endpoint specific content. Content of ServiceEndpoint
      api above will be used by priority:'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  ExchangeResponse:
    description: response of accept exchange request.
    properties:
      accept:
        description: Connection invitation accept mode
        type: string
        x-go-name: Accept
      alias:
        description: Alias of connection invitation
        type: string
        x-go-name: Alias
      connection_id:
        description: the connection ID of the connection invitation
        type: string
        x-go-name: ConnectionId
      created_at:
        $ref: '#/definitions/Timestamp'
      error_msg:
        description: Error message
        type: string
        x-go-name: ErrorMsg
      inbound_connection_id:
        description: the connection ID of the connection invitation
        type: string
        x-go-name: InboundConnectionId
      initiator:
        description: Initiator is Connection invitation initiator
        type: string
        x-go-name: Initiator
      invitation_key:
        description: Invitation key
        type: string
        x-go-name: InvitationKey
      invitation_mode:
        description: Invitation mode
        type: string
        x-go-name: InvitationMode
      my_did:
        description: MyDID is DID of the agent
        type: string
        x-go-name: MyDid
      request_id:
        description: Invitation ID of the connection request
        type: string
        x-go-name: RequestId
      routing_state:
        description: Routing state of connection invitation
        type: string
        x-go-name: RoutingState
      state:
        description: State of the connection invitation
        type: string
        x-go-name: State
      their_did:
        description: TheirDID is other party's DID
        type: string
        x-go-name: TheirDid
      their_label:
        description: TheirRole is other party's role
        type: string
        x-go-name: TheirLabel
      their_role:
        description: TheirRole is other party's role
        type: string
        x-go-name: TheirRole
      updated_at:
        $ref: '#/definitions/Timestamp'
    title: ExchangeResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  Field:
    properties:
      filter:
        $ref: '#/definitions/Filter'
      id:
        type: string
        x-go-name: Id
      path:
        items:
          type: string
        type: array
        x-go-name: Path
      predicate:
        type: string
        x-go-name: Predicate
      purpose:
        type: string
        x-go-name: Purpose
    title: Field describes Constraints`s Fields field.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  Filter:
    properties:
      const:
        type: string
        x-go-name: Const
      enum:
        type: string
        x-go-name: Enum
      exclusiveMinimum:
        format: int64
        type: integer
        x-go-name: ExclusiveMinimum
      format:
        type: string
        x-go-name: Format
      maxLength:
        format: int32
        type: integer
        x-go-name: MaxLength
      maximum:
        format: int64
        type: integer
        x-go-name: Maximum
      minLength:
        format: int32
        type: integer
        x-go-name: MinLength
      minimum:
        format: int64
        type: integer
        x-go-name: Minimum
      not:
        additionalProperties:
          $ref: '#/definitions/Any'
        type: object
        x-go-name: Not
      pattern:
        type: string
        x-go-name: Pattern
      type:
        type: string
        x-go-name: Type
    title: Filter describes filter.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  Format:
    properties:
      attach_id:
        type: string
        x-go-name: AttachId
      format:
        type: string
        x-go-name: Format
    title: Format contains the value of the attachment @id and the verifiable credential
      format of the attachment.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  GenericAttachment:
    properties:
      byte_count:
        description: |-
          ByteCount is an optional, and mostly relevant when content is included by reference instead of by value.
          Lets the receiver guess how expensive it will be, in time, bandwidth, and storage, to fully fetch the attachment.
        format: int64
        type: integer
        x-go-name: ByteCount
      data:
        $ref: '#/definitions/AttachmentData'
      description:
        description: Description is an optional human-readable description of the
          content.
        type: string
        x-go-name: Description
      filename:
        description: |-
          FileName is a hint about the name that might be used if this attachment is persisted as a file.
          It is not required, and need not be unique. If this field is present and mime-type is not,
          the extension on the filename may be used to infer a MIME type.
        type: string
        x-go-name: Filename
      format:
        description: Format describes the format of the attachment if the media_type
          is not sufficient, in a DIDComm v2 attachment.
        type: string
        x-go-name: Format
      id:
        description: ID is the attachment ID..
        type: string
        x-go-name: Id
      lastmod_time:
        $ref: '#/definitions/Timestamp'
      media_type:
        description: MediaType describes the MIME type of the attached content in
          a DIDComm v2 attachment. Optional but recommended.
        type: string
        x-go-name: MediaType
      version:
        type: string
        x-go-name: Version
    title: GenericAttachment is used to work with DIDComm attachments that can be
      either DIDComm v1 or DIDComm v2.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  GenericError:
    description: GenericError is aries rest api error response
    properties:
      code:
        $ref: '#/definitions/Code'
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  GenericInvitation:
    properties:
      accept:
        items:
          type: string
        type: array
        x-go-name: Accept
      attachments:
        items:
          $ref: '#/definitions/GenericAttachment'
        type: array
        x-go-name: Attachments
      from:
        type: string
        x-go-name: From
      goal:
        type: string
        x-go-name: Goal
      goal_code:
        type: string
        x-go-name: GoalCode
      handshake_protocols:
        items:
          type: string
        type: array
        x-go-name: HandshakeProtocols
      id:
        type: string
        x-go-name: Id
      label:
        type: string
        x-go-name: Label
      services:
        items:
          $ref: '#/definitions/Any'
        type: array
        x-go-name: Services
      type:
        type: string
        x-go-name: Type
      version:
        type: string
        x-go-name: Version
    title: GenericInvitation holds either a DIDComm V1 or V2 invitation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  GenericPresentation:
    description: Combination of V2 and V3
    properties:
      attachments:
        description: |-
          Attachments is an array of attachments that further define the presentation request being proposed.
          This might be used to clarify which formats or format versions are wanted.
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attachments
      body:
        $ref: '#/definitions/PresentationV3Body'
      comment:
        description: |-
          Comment is a field that provides some human readable information about the proposed presentation.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300].
        type: string
        x-go-name: Comment
      formats:
        description: |-
          Formats contains an entry for each presentations~attach array entry, providing the the value of the attachment
          @id and the verifiable presentation format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      id:
        type: string
        x-go-name: Id
      presentations_attach:
        description: PresentationsAttach an array of attachments containing the presentation
          in the requested format(s).
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: PresentationsAttach
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  GenericProposePresentation:
    description: GenericProposePresentation combination of V2 and V3
    properties:
      attachments:
        description: |-
          Attachments is an array of attachments that further define the presentation request being proposed.
          This might be used to clarify which formats or format versions are wanted.
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attachments
      body:
        $ref: '#/definitions/ProposePresentationV3Body'
      comment:
        description: |-
          Comment is a field that provides some human readable information about the proposed presentation.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300]
        type: string
        x-go-name: Comment
      formats:
        description: |-
          Formats contains an entry for each proposal~attach array entry, including an optional value of the
          attachment @id (if attachments are present) and the verifiable presentation format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      id:
        type: string
        x-go-name: Id
      proposal_attach:
        description: |-
          ProposalsAttach is an array of attachments that further define the presentation request being proposed.
          This might be used to clarify which formats or format versions are wanted.
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: ProposalAttach
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  GetAllContentRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      collectionID:
        description: ID of the collection on which the response contents to be filtered.
        type: string
        x-go-name: CollectionID
      contentType:
        description: |-
          type of the contents to be returned from wallet.
          supported types: collection, credential, didResolutionResponse, metadata, connection
        type: string
        x-go-name: ContentType
      query:
        type: string
        x-go-name: Query
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: GetAllContentRequest is request for getting all contents from wallet for
      given content type.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  GetAllContentResponse:
    properties:
      contents:
        additionalProperties:
          items:
            format: uint8
            type: integer
          type: array
        description: |-
          contents retrieved from wallet content store.
          map of content ID to content.
        type: object
        x-go-name: Contents
      totalRecords:
        format: int64
        type: integer
        x-go-name: TotalRecords
    title: GetAllContentResponse response for get all content by content type wallet
      operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  GetAllRemoteProvidersResponse:
    properties:
      providers:
        items:
          $ref: '#/definitions/RemoteProviderRecord'
        type: array
        x-go-name: Providers
    title: GetAllRemoteProvidersResponse model for getting list of all remote context
      providers from the underlying storage.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/ld/services
  GetContentRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      contentID:
        description: ID of the content to be returned from wallet
        type: string
        x-go-name: ContentID
      contentType:
        description: |-
          type of the content to be returned from wallet.
          supported types: collection, credential, didResolutionResponse, metadata, connection
        type: string
        x-go-name: ContentType
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: GetContentRequest is request for getting a content from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  GetContentResponse:
    properties:
      content:
        description: content retrieved from wallet content store.
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Content
      contentType:
        description: |-
          content retrieved from wallet content store.

          type of the content to be added to the wallet.
        type: string
        x-go-name: ContentType
    title: GetContentResponse response for get content from wallet operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  GetCredentialSpecRequest:
    properties:
      message:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Message
    title: GetCredentialSpecRequest model.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  GetCredentialSpecResponse:
    properties:
      spec:
        $ref: '#/definitions/CredentialSpec'
    title: GetCredentialSpecResponse model.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  Holder:
    properties:
      directive:
        type: string
        x-go-name: Directive
      field_id:
        items:
          type: string
        type: array
        x-go-name: FieldId
    title: Holder describes Constraints`s  holder object.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  IDMessage:
    description: |-
      Used for:
      response from creating a didcomm v2 connection.
      request to set a connection to didcomm v2.
    properties:
      id:
        type: string
        x-go-name: Id
    title: IDMessage is either a request or response message, holding connection ID.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  ImageURIWithAltText:
    properties:
      alt:
        type: string
        x-go-name: Alt
      uri:
        type: string
        x-go-name: Uri
    title: ImageURIWithAltText represents a URI that points to an image along with
      the alt text for it.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  ImgAttach:
    properties:
      content:
        $ref: '#/definitions/Content'
      description:
        type: string
        x-go-name: Description
      filename:
        type: string
        x-go-name: Filename
      mime_type:
        type: string
        x-go-name: MimeType
    title: ImgAttach represent information about the image.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/types
  ImplicitInvitationResponse:
    description: This is used for returning create implicit invitation response.
    properties:
      connection_id:
        description: the connection ID of the connection for implicit invitation
        type: string
        x-go-name: ConnectionId
    title: ImplicitInvitationResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  InputDescriptor:
    properties:
      constraints:
        $ref: '#/definitions/Constraints'
      group:
        items:
          type: string
        type: array
        x-go-name: Group
      id:
        type: string
        x-go-name: Id
      metadata:
        additionalProperties:
          $ref: '#/definitions/Any'
        type: object
        x-go-name: Metadata
      name:
        type: string
        x-go-name: Name
      purpose:
        type: string
        x-go-name: Purpose
      schema:
        items:
          $ref: '#/definitions/Schema'
        type: array
        x-go-name: Schema
    title: InputDescriptor input descriptors.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  IntroduceAcceptProposalWithOOBInvitationRequest_Body:
    description: 'in: body'
    properties:
      invitation:
        $ref: '#/definitions/Invitation'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceAcceptRequestWithPublicOOBInvitation_Body:
    properties:
      invitation:
        $ref: '#/definitions/Invitation'
      to:
        $ref: '#/definitions/To'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceAcceptRequestWithRecipients_Body:
    properties:
      recipient:
        $ref: '#/definitions/Recipient'
      to:
        $ref: '#/definitions/To'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceActionsResponse:
    description: Represents Actions response message.
    properties:
      actions:
        items:
          $ref: '#/definitions/Action'
        type: array
        x-go-name: Actions
    title: IntroduceActionsResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceSendProposalRequest:
    description: This is used for operation to send a proposal.
    properties:
      recipients:
        items:
          $ref: '#/definitions/Recipient'
        type: array
        x-go-name: Recipients
    title: IntroduceSendProposalRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceSendProposalResponse:
    description: Represents a SendProposal response message.
    properties:
      piid:
        type: string
        x-go-name: Piid
    title: IntroduceSendProposalResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceSendProposalWithOOBInvitationRequest:
    description: This is used for operation to send a proposal with OOBInvitation.
    properties:
      invitation:
        $ref: '#/definitions/Invitation'
      recipient:
        $ref: '#/definitions/Recipient'
    required:
    - invitation
    - recipient
    title: IntroduceSendProposalWithOOBInvitationRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceSendProposalWithOOBInvitationResponse:
    description: Represents a SendProposalWithOOBInvitation response message.
    properties:
      piid:
        type: string
        x-go-name: Piid
    title: IntroduceSendProposalWithOOBInvitationResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceSendRequest:
    description: This is used for operation to send a request.
    properties:
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      please_introduce_to:
        $ref: '#/definitions/PleaseIntroduceTo'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    required:
    - my_did
    - their_did
    - please_introduce_to
    title: IntroduceSendRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  IntroduceSendResponse:
    description: Represents a SendRequest response message.
    properties:
      piid:
        description: PIID Protocol instance ID. It can be used as a correlation ID
        type: string
        x-go-name: Piid
    title: IntroduceSendResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/services
  Invitation:
    description: |-
      Invitation defines DID exchange invitation message
      https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange#0-invitation-to-exchange
      to 'Invitation'.
    properties:
      accept:
        items:
          type: string
        type: array
        x-go-name: Accept
      attach:
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attach
      body:
        $ref: '#/definitions/InvitationBody'
      did:
        description: the DID of the connection invitation
        type: string
        x-go-name: Did
      from:
        description: Invitation is this protocol's `invitation` message.
        type: string
        x-go-name: From
      goal:
        type: string
        x-go-name: Goal
      goal_code:
        type: string
        x-go-name: GoalCode
      handshake_protocols:
        items:
          type: string
        type: array
        x-go-name: HandshakeProtocols
      id:
        description: the ID of the connection invitation
        type: string
        x-go-name: Id
      imageUrl:
        description: |-
          https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange#0-invitation-to-exchange
          the Image URL of the connection invitation
        type: string
        x-go-name: ImageUrl
      label:
        description: the Label of the connection invitation
        type: string
        x-go-name: Label
      recipientKeys:
        description: the RecipientKeys for the connection invitation
        items:
          type: string
        type: array
        x-go-name: RecipientKeys
      request_attach:
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: RequestAttach
      routingKeys:
        description: the RoutingKeys of the connection invitation
        items:
          type: string
        type: array
        x-go-name: RoutingKeys
      serviceEndpoint:
        description: the Service endpoint of the connection invitation
        type: string
        x-go-name: ServiceEndpoint
      services:
        items:
          $ref: '#/definitions/Any'
        type: array
        x-go-name: Services
      thread:
        $ref: '#/definitions/Thread'
      type:
        description: the Type of the connection invitation
        type: string
        x-go-name: Type
    title: Invitation is this protocol's `invitation` message.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  InvitationBody:
    properties:
      accept:
        items:
          type: string
        type: array
        x-go-name: Accept
      goal:
        type: string
        x-go-name: Goal
      goal_code:
        type: string
        x-go-name: GoalCode
    title: InvitationBody contains invitation's goal and accept headers.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  IssueCredentialAcceptCredentialBody:
    description: This is used for accepting a credential.
    properties:
      names:
        description: Names represent the names of how credentials will be stored.
        items:
          type: string
        type: array
        x-go-name: Names
      skipStore:
        description: |-
          SkipStore if true then credential will not be saved in agent's verifiable store,
          but protocol state will be updated.
        type: boolean
        x-go-name: SkipStore
    title: IssueCredentialAcceptCredentialBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialAcceptOfferBody:
    description: This is used for accepting an offer.
    properties:
      request_credential:
        $ref: '#/definitions/RequestCredentialV2'
    title: IssueCredentialAcceptOfferBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialAcceptOfferBodyV3:
    description: This is used for accepting an offer.
    properties:
      request_credential:
        $ref: '#/definitions/RequestCredentialV3'
    title: IssueCredentialAcceptOfferBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialAcceptProposalBody:
    description: This is used for operation to accept proposal
    properties:
      offer_credential:
        $ref: '#/definitions/OfferCredentialV2'
    title: IssueCredentialAcceptProposalBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialAcceptProposalBodyV3:
    description: This is used for operation to accept proposal
    properties:
      offer_credential:
        $ref: '#/definitions/OfferCredentialV3'
    title: IssueCredentialAcceptProposalBodyV3 model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialAcceptRequestBody:
    description: This is used for accepting a request.
    properties:
      issue_credential:
        $ref: '#/definitions/IssueCredentialV2'
    title: IssueCredentialAcceptRequestBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialActionsBody:
    description: Represents Actions response message.
    properties:
      actions:
        items:
          $ref: '#/definitions/Action'
        type: array
        x-go-name: Actions
    title: IssueCredentialActionsBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialNegotiateProposalBody:
    description: This is used when the Holder wants to negotiate about an offer he
      received.
    properties:
      propose_credential:
        $ref: '#/definitions/ProposeCredentialV2'
    title: IssueCredentialNegotiateProposalRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialNegotiateProposalBodyV3:
    description: This is used when the Holder wants to negotiate about an offer he
      received.
    properties:
      propose_credential:
        $ref: '#/definitions/ProposeCredentialV3'
    title: IssueCredentialNegotiateProposalBodyV3 model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialRequest:
    properties:
      spec:
        $ref: '#/definitions/CredentialSpec'
    title: IssueCredentialRequest model.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialResponse:
    properties:
      issue_credential:
        $ref: '#/definitions/IssueCredentialV2'
    title: IssueCredentialResponse model.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialSendOfferBodyV3:
    description: This is used for sending an offer.
    properties:
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      offer_credential:
        $ref: '#/definitions/OfferCredentialV2'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: IssueCredentialSendOfferBodyV2 model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialSendProposalBody:
    description: This is used for sending a proposal to initiate the protocol.
    properties:
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      propose_credential:
        $ref: '#/definitions/ProposeCredentialV2'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: IssueCredentialSendProposalBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialSendProposalBodyV3:
    description: This is used for sending a proposal to initiate the protocol.
    properties:
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      propose_credential:
        $ref: '#/definitions/ProposeCredentialV3'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: IssueCredentialSendProposalBodyV3 model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialSendRequestBody:
    description: This is used for sending a request.
    properties:
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      request_credential:
        $ref: '#/definitions/RequestCredentialV2'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: IssueCredentialSendRequestBody model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialSendRequestBodyV3:
    description: This is used for sending a request.
    properties:
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      request_credential:
        $ref: '#/definitions/RequestCredentialV3'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: IssueCredentialSendRequestBodyV3 model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  IssueCredentialV2:
    description: |-
      IssueCredentialV2 contains as attached payload the credentials being issued and is
      sent in response to a valid Invitation Credential message.
      TODO: Need to add ~please-ack decorator [Issue #1299].
    properties:
      comment:
        description: |-
          Comment is an optional field that provides human readable information about this Credential Offer,
          so the offer can be evaluated by human judgment.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300].
        type: string
        x-go-name: Comment
      credentials_attach:
        description: CredentialsAttach is a slice of attachments containing the issued
          credentials.
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: CredentialsAttach
      formats:
        description: |-
          Formats contains an entry for each credentials~attach array entry, providing the value
          of the attachment @id and the verifiable credential format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      type:
        type: string
        x-go-name: Type
      web_redirect:
        $ref: '#/definitions/WebRedirect'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  IssueRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      credential:
        $ref: '#/definitions/VerifiableCredential'
      proofOptions:
        $ref: '#/definitions/ProofOptions'
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: IssueRequest is request model for issuing credential from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  IssueResponse:
    properties:
      credential:
        $ref: '#/definitions/VerifiableCredential'
    title: IssueResponse is response for issue credential interface from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  Issuer:
    description: Issuer represents the issuer object defined in https://identity.foundation/credential-manifest/#general-composition.
    properties:
      customFields:
        additionalProperties:
          $ref: '#/definitions/Any'
        type: object
        x-go-name: CustomFields
      id:
        type: string
        x-go-name: Id
      name:
        type: string
        x-go-name: Name
      styles:
        $ref: '#/definitions/Styles'
    title: Issuer - A JSON-LD Verifiable Credential Issuer.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  JSONWebKey:
    properties:
      CertificatesUrl:
        description: X.509 certificate URL, parsed from `x5u` header.
        type: string
      alg:
        description: Key algorithm, parsed from `alg` header.
        type: string
        x-go-name: Alg
      certificate:
        description: X.509 certificate chain, parsed from `x5c` header.
        items:
          $ref: '#/definitions/Any'
        type: array
        x-go-name: Certificate
      certificateThumbprintSHA1:
        description: X.509 certificate thumbprint (SHA-1), parsed from `x5t` header.
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: CertificateThumbprintSHA1
      certificateThumbprintSHA256:
        description: X.509 certificate thumbprint (SHA-256), parsed from `x5t#S256`
          header.
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: CertificateThumbprintSHA256
      crv:
        type: string
        x-go-name: Crv
      d:
        type: string
        x-go-name: D
      key:
        $ref: '#/definitions/Any'
      kid:
        description: Key identifier, parsed from `kid` header.
        type: string
        x-go-name: Kid
      kty:
        type: string
        x-go-name: Kty
      use:
        description: Key use, parsed from `use` header.
        type: string
        x-go-name: Use
      x:
        type: string
        x-go-name: X
      "y":
        type: string
        x-go-name: "Y"
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/jwk/types
  LabeledDisplayMappingObject:
    description: They are used for the dynamic Properties array in a DataDisplayDescriptor.
    properties:
      fallback:
        type: string
        x-go-name: Fallback
      label:
        type: string
        x-go-name: Label
      path:
        items:
          type: string
        type: array
        x-go-name: Path
      schema:
        $ref: '#/definitions/Schema'
      text:
        type: string
        x-go-name: Text
    title: LabeledDisplayMappingObject is a DisplayMappingObject with an additional
      Label field.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  LockWalletRequest:
    properties:
      userID:
        description: user ID of the wallet to be locked.
        type: string
        x-go-name: UserID
    title: LockWalletRequest contains options for locking wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  MessageState:
    description: |2-

      Example generated code:

      type M struct {
      state protoimpl.MessageState

      Field1 int32
      Field2 string
      Field3 *BarMessage
      ...
      }

      func (m *M) ProtoReflect() protoreflect.Message {
      mi := &file_fizz_buzz_proto_msgInfos[5]
      if protoimpl.UnsafeEnabled && m != nil {
      ms := protoimpl.X.MessageStateOf(Pointer(m))
      if ms.LoadMessageInfo() == nil {
      ms.StoreMessageInfo(mi)
      }
      return ms
      }
      return mi.MessageOf(m)
      }

      The MessageState type holds a *MessageInfo, which must be atomically set to
      the message info associated with a given message instance.
      By unsafely converting a *M into a *MessageState, the MessageState object
      has access to all the information needed to implement protobuf reflection.
      It has access to the message info as its first field, and a pointer to the
      MessageState is identical to a pointer to the concrete message value.


      Requirements:
      • The type M must implement protoreflect.ProtoMessage.
      • The address of m must not be nil.
      • The address of m and the address of m.state must be equal,
      even though they are different Go types.
    title: |-
      MessageState is a data structure that is nested as the first field in a
      concrete message. It provides a way to implement the ProtoReflect method
      in an allocation-free way without needing to have a shadow Go type generated
      for every message type. This technique only works using unsafe.
    type: object
    x-go-package: google.golang.org/protobuf/internal/impl
  MethodMetadata:
    properties:
      anchorOrigin:
        description: AnchorOrigin is anchor origin.
        type: string
        x-go-name: AnchorOrigin
      published:
        description: Published is published key.
        type: boolean
        x-go-name: Published
      publishedOperations:
        description: PublishedOperations published operations
        items:
          $ref: '#/definitions/ProtocolOperation'
        type: array
        x-go-name: PublishedOperations
      recoveryCommitment:
        description: RecoveryCommitment is recovery commitment key.
        type: string
        x-go-name: RecoveryCommitment
      unpublishedOperations:
        description: UnpublishedOperations unpublished operations
        items:
          $ref: '#/definitions/ProtocolOperation'
        type: array
        x-go-name: UnpublishedOperations
      updateCommitment:
        description: UpdateCommitment is update commitment key.
        type: string
        x-go-name: UpdateCommitment
    title: MethodMetadata method metadata.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  NegotiateRequestPresentationV2Body:
    description: This is used by the Prover to counter a presentation request they
      received with a proposal.
    properties:
      propose_presentation:
        $ref: '#/definitions/ProposePresentationV2'
    title: NegotiateRequestPresentationV2Body model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  NegotiateRequestPresentationV3Body:
    description: This is used by the Prover to counter a presentation request they
      received with a proposal.
    properties:
      propose_presentation:
        $ref: '#/definitions/ProposePresentationV3'
    title: NegotiateRequestPresentationV3Body model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  OfferCredentialV2:
    description: |-
      describing the credential they intend to offer and possibly the price they expect to be paid.
      TODO: Need to add ~payment_request and ~timing.expires_time decorators [Issue #1297].
    properties:
      comment:
        description: |-
          Comment is an optional field that provides human readable information about this Credential Offer,
          so the offer can be evaluated by human judgment.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300].
        type: string
        x-go-name: Comment
      credential_preview:
        $ref: '#/definitions/PreviewCredential'
      formats:
        description: |-
          Formats contains an entry for each offers~attach array entry, providing the the value
          of the attachment @id and the verifiable credential format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      offers_attach:
        description: |-
          OffersAttach is a slice of attachments that further define the credential being offered.
          This might be used to clarify which formats or format versions will be issued.
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: OffersAttach
      type:
        type: string
        x-go-name: Type
    title: OfferCredentialV2 is a message sent by the Issuer to the potential Holder,
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  OfferCredentialV3:
    description: describing the credential they intend to offer and possibly the price
      they expect to be paid.
    properties:
      attachments:
        description: |-
          Attachments is an array of attachments containing the presentation in the requested format(s).
          Accepted values for the format attribute of each attachment are provided in the per format Attachment
          registry immediately below.
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attachments
      body:
        $ref: '#/definitions/OfferCredentialV3Body'
      id:
        type: string
        x-go-name: Id
      type:
        type: string
        x-go-name: Type
    title: OfferCredentialV3 is a message sent by the Issuer to the potential Holder,
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  OfferCredentialV3Body:
    properties:
      comment:
        type: string
        x-go-name: Comment
      credential_preview:
        $ref: '#/definitions/Any'
      goal_code:
        type: string
        x-go-name: GoalCode
      replacement_id:
        type: string
        x-go-name: ReplacementId
    title: OfferCredentialV3Body represents body for OfferCredentialV3.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  OutputDescriptor:
    description: |-
      OutputDescriptor represents an Output Descriptor object as defined in
      https://identity.foundation/credential-manifest/#output-descriptor.
    properties:
      description:
        type: string
        x-go-name: Description
      display:
        $ref: '#/definitions/DataDisplayDescriptor'
      id:
        type: string
        x-go-name: Id
      name:
        type: string
        x-go-name: Name
      schema:
        type: string
        x-go-name: Schema
      styles:
        $ref: '#/definitions/Styles'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  PleaseIntroduceTo:
    description: |-
      PleaseIntroduceTo includes all field from To structure
      also it has Discovered the field which should be provided by help-me-discover protocol.
    properties:
      description:
        type: string
        x-go-name: Description
      description_l10n:
        additionalProperties:
          type: string
        type: object
        x-go-name: DescriptionL10N
      img_attach:
        $ref: '#/definitions/ImgAttach'
      name:
        description: 'nolint: staticcheck'
        type: string
        x-go-name: Name
      proposed:
        type: boolean
        x-go-name: Proposed
      where:
        type: string
        x-go-name: Where
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/types
  PresentProofActionsResponse:
    description: Represents a Actions response message.
    properties:
      actions:
        items:
          $ref: '#/definitions/Action'
        type: array
        x-go-name: Actions
    title: presentProofActionsResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  PresentProofRequest:
    description: Supported attachment MIME type "application/ld+json".
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      presentation:
        $ref: '#/definitions/GenericPresentation'
      threadId:
        description: Thread ID from request presentation response
        type: string
        x-go-name: ThreadId
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
      waitForDone:
        description: |-
          If true then wallet will wait for present proof protocol status to be
          done or abandoned till given Timeout.
          Also, will return web redirect info if found in acknowledgment message or problem-report.
        type: boolean
        x-go-name: WaitForDone
      waitForDoneTimeout:
        $ref: '#/definitions/Duration'
    title: PresentProofRequest is request model from wallet present proof operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  PresentProofResponse:
    properties:
      status:
        type: string
        x-go-name: Status
      url:
        description: Optional web redirect URL info sent by verifier.
        type: string
        x-go-name: Url
    title: PresentProofResponse is response model from wallet present proof operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  PresentProofSendProposePresentationRequest:
    description: This is used for sending a propose presentation.
    properties:
      connection_id:
        description: |-
          ConnectionID ID of connection between sender and receiver.
          Optional: if present, is used instead of MyDID + TheirDID.
        type: string
        x-go-name: ConnectionId
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      propose_presentation:
        $ref: '#/definitions/GenericProposePresentation'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: PresentProofSendProposePresentationRequest model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  PresentProofSendProposePresentationV3Request:
    description: This is used for sending a propose presentation.
    properties:
      connection_id:
        description: |-
          ConnectionID ID of connection between sender and receiver.
          Optional: if present, is used instead of MyDID + TheirDID.
        type: string
        x-go-name: ConnectionId
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      propose_presentation:
        $ref: '#/definitions/ProposePresentationV3'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: PresentProofSendProposePresentationV3Request model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  PresentProofSendRequestPresentationResponse:
    description: Represents a SendRequestPresentation response message.
    properties:
      piid:
        description: PIID Protocol instance ID. It can be used as a correlation ID
        type: string
        x-go-name: Piid
    title: PresentProofSendRequestPresentationResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  PresentProofSendRequestPresentationV2Request:
    description: This is used for sending a request presentation.
    properties:
      connection_id:
        description: |-
          ConnectionID ID of connection between sender and receiver.
          Optional: if present, is used instead of MyDID + TheirDID.
        type: string
        x-go-name: ConnectionId
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      request_presentation:
        $ref: '#/definitions/RequestPresentationV2'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: SendRequestPresentationV2Request model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  PresentProofSendRequestPresentationV3Request:
    description: This is used for sending a request presentation.
    properties:
      connection_id:
        description: |-
          ConnectionID ID of connection between sender and receiver.
          Optional: if present, is used instead of MyDID + TheirDID.
        type: string
        x-go-name: ConnectionId
      my_did:
        description: MyDID sender's did
        type: string
        x-go-name: MyDid
      request_presentation:
        $ref: '#/definitions/RequestPresentationV3'
      their_did:
        description: TheirDID receiver's did
        type: string
        x-go-name: TheirDid
    title: SendRequestPresentationV3Request model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/services
  PresentationDefinition:
    properties:
      format:
        $ref: '#/definitions/Format'
      id:
        description: ID unique resource identifier.
        type: string
        x-go-name: Id
      input_descriptors:
        items:
          $ref: '#/definitions/InputDescriptor'
        type: array
        x-go-name: InputDescriptors
      locale:
        type: string
        x-go-name: Locale
      name:
        description: Name human-friendly name that describes what the Presentation
          Definition pertains to.
        type: string
        x-go-name: Name
      purpose:
        description: Purpose describes the purpose for which the Presentation Definition’s
          inputs are being requested.
        type: string
        x-go-name: Purpose
      submission_requirements:
        description: |-
          SubmissionRequirements must conform to the Submission Requirement Format.
          If not present, all inputs listed in the InputDescriptors array are required for submission.
        items:
          $ref: '#/definitions/SubmissionRequirement'
        type: array
        x-go-name: SubmissionRequirements
    title: PresentationDefinition presentation definitions (https://identity.foundation/presentation-exchange/).
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  PresentationRequest:
    properties:
      did:
        type: string
        x-go-name: Did
      options:
        $ref: '#/definitions/ProofOptions'
      presentation:
        $ref: '#/definitions/GenericPresentation'
      skipVerify:
        description: SkipVerify can be used to skip verification of `VerifiableCredentials`
          provided.
        type: boolean
        x-go-name: SkipVerify
      verifiableCredential:
        items:
          $ref: '#/definitions/VerifiableCredential'
        type: array
        x-go-name: VerifiableCredential
    title: PresentationRequest is model for verifiable presentation request.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/services
  PresentationRequestByID:
    description: This is used for querying/removing by ID from input json.
    properties:
      did:
        description: DID ID
        type: string
        x-go-name: Did
      id:
        description: ID
        type: string
        x-go-name: Id
      signatureType:
        description: SignatureType
        type: string
        x-go-name: SignatureType
    title: PresentationRequestByID model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/services
  PresentationV2:
    description: 'TODO: Add ~please_ack decorator support for the protocol [Issue
      #2047].'
    properties:
      comment:
        description: |-
          Comment is a field that provides some human readable information about the proposed presentation.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300].
        type: string
        x-go-name: Comment
      formats:
        description: |-
          Formats contains an entry for each presentations~attach array entry, providing the the value of the attachment
          @id and the verifiable presentation format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      id:
        type: string
        x-go-name: Id
      presentations_attach:
        description: PresentationsAttach an array of attachments containing the presentation
          in the requested format(s).
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: PresentationsAttach
      type:
        type: string
        x-go-name: Type
    title: PresentationV2 is a response to a RequestPresentationV2 message and contains
      signed presentations.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  PresentationV3:
    properties:
      attachments:
        description: |-
          Attachments is an array of attachments that further define the presentation request being proposed.
          This might be used to clarify which formats or format versions are wanted.
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attachments
      body:
        $ref: '#/definitions/PresentationV3Body'
      type:
        type: string
        x-go-name: Type
    title: PresentationV3 is a response to a RequestPresentationV3 message and contains
      signed presentations.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  PresentationV3Body:
    properties:
      comment:
        description: |-
          Comment is a field that provides some human readable information about the proposed presentation.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300]
        type: string
        x-go-name: Comment
      goal_code:
        type: string
        x-go-name: GoalCode
    title: PresentationV3Body represents body for PresentationV3.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  PreviewCredential:
    properties:
      attributes:
        items:
          $ref: '#/definitions/Attribute'
        type: array
        x-go-name: Attributes
      type:
        type: string
        x-go-name: Type
    title: PreviewCredential is used to construct a preview of the data for the credential
      that is to be issued.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  ProcessingMeta:
    properties:
      baseUri:
        type: string
        x-go-name: BaseUri
    title: ProcessingMeta include info how to process the doc.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  Profile:
    properties:
      edvConfiguration:
        $ref: '#/definitions/EDVConfiguration'
      id:
        description: ID unique identifier assigned to this wallet profile.
        type: string
        x-go-name: Id
      keyServerURL:
        description: |-
          KeyServerURL for remotekms.
          passphrase for web/remote kms for key operations.
          Optional, if this option is provided then wallet for this profile will use web/remote KMS for key operations.
        type: string
        x-go-name: KeyServerURL
      localKMSPassphrase:
        description: |-
          Encrypted MasterLock is for localkms.
          passphrase for local kms for key operations.
          Optional, if this option is provided then wallet for this profile will use local KMS for key operations.
        type: string
        x-go-name: LocalKMSPassphrase
      userID:
        description: Unique identifier to identify wallet profile user.
        type: string
        x-go-name: UserID
    title: Profile of VC wallet contains wallet specific settings of wallet user to
      be remembered.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/types
  Prohibition:
    properties:
      actions:
        description: The actions, e.g ["Archival"]
        items:
          type: string
        type: array
        x-go-name: Actions
      assignee:
        description: The assignee, e.g. AllVerifiers
        type: string
        x-go-name: Assignee
      assigner:
        description: The assigner, e.g. https://example.edu/issuers/14
        type: string
        x-go-name: Assigner
      target:
        description: The target, e.g. http://example.edu/credentials/3732
        type: string
        x-go-name: Target
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  Proof:
    properties:
      created:
        $ref: '#/definitions/Timestamp'
      creator:
        type: string
        x-go-name: Creator
      domain:
        type: string
        x-go-name: Domain
      nonce:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Nonce
      proofPurpose:
        type: string
        x-go-name: ProofPurpose
      proofValue:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: ProofValue
      relativeUrl:
        type: boolean
        x-go-name: RelativeUrl
      type:
        type: string
        x-go-name: Type
    title: Proof is cryptographic proof of the integrity of the DID Document.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  ProofOptions:
    description: |-
      Options for adding linked data proofs to a verifiable credential or a verifiable presentation.
      To be used as options for issue/prove wallet features.
    properties:
      challenge:
        description: |-
          Challenge is a random or pseudo-random value option authentication.
          Optional, by default challenge will not be part of proof.
        type: string
        x-go-name: Challenge
      controller:
        description: Controller is a DID to be for signing. This option is required
          for issue/prove wallet features.
        type: string
        x-go-name: Controller
      created:
        $ref: '#/definitions/Timestamp'
      domain:
        description: |-
          Domain is operational domain of a digital proof.
          Optional, by default domain will not be part of proof.
        type: string
        x-go-name: Domain
      kid:
        type: string
        x-go-name: Kid
      proofPurpose:
        description: proofPurpose is purpose of the proof.
        type: string
        x-go-name: ProofPurpose
      proofRepresentation:
        $ref: '#/definitions/SignatureRepresentation'
      proofType:
        description: |-
          ProofType is signature type used for signing.
          Optional, by default proof will be generated in Ed25519Signature2018 format.
        type: string
        x-go-name: ProofType
      signatureType:
        description: SignatureType signature type used for signing
        type: string
        x-go-name: SignatureType
      verificationMethod:
        description: |-
          VerificationMethod is the URI of the verificationMethod used for the proof.
          Optional, by default Controller public key matching 'assertion' for issue or 'authentication' for prove functions.
        type: string
        x-go-name: VerificationMethod
    title: ProofOptions model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  ProposeCredentialRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      connectOptions:
        $ref: '#/definitions/ConnectOpts'
      from:
        description: Optional From DID option to customize sender DID.
        type: string
        x-go-name: From
      invitation:
        $ref: '#/definitions/GenericInvitation'
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
      waitForDoneTimeout:
        $ref: '#/definitions/Duration'
    title: ProposeCredentialRequest is request model for performing propose credential
      operation from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ProposeCredentialResponse:
    properties:
      offerCredential:
        additionalProperties:
          $ref: '#/definitions/Any'
        description: |-
          response offer credential message from issuer.
          response containing offer credential response from issuer.
        type: object
        x-go-name: OfferCredential
    title: ProposeCredentialResponse is response model from wallet propose credential
      operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ProposeCredentialV2:
    description: |-
      ProposeCredentialV2 is an optional message sent by the potential Holder to the Issuer
      to initiate the protocol or in response to a offer-credential message when the Holder
      wants some adjustments made to the credential data offered by Issuer.
    properties:
      comment:
        description: |-
          Comment is an optional field that provides human readable information about this Credential Offer,
          so the offer can be evaluated by human judgment.
          Should follow DIDComm conventions for l10n.
        type: string
        x-go-name: Comment
      credential_proposal:
        $ref: '#/definitions/PreviewCredential'
      filters_attach:
        description: |-
          FiltersAttach is an array of attachments that further define the credential being proposed.
          This might be used to clarify which formats or format versions are wanted.
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: FiltersAttach
      formats:
        description: |-
          Formats contains an entry for each filters~attach array entry, providing the the value of the attachment @id
          and the verifiable credential format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      invitationID:
        description: Optional field containing ID of the invitation which initiated
          this protocol.
        type: string
        x-go-name: InvitationID
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  ProposeCredentialV3:
    description: |-
      ProposeCredentialV3 is an optional message sent by the potential Holder to the Issuer
      to initiate the protocol or in response to a offer-credential message when the Holder
      wants some adjustments made to the credential data offered by Issuer.
    properties:
      attachments:
        description: |-
          Attachments is an array of attachments containing the presentation in the requested format(s).
          Accepted values for the format attribute of each attachment are provided in the per format Attachment
          registry immediately below.
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attachments
      body:
        $ref: '#/definitions/ProposeCredentialV3Body'
      id:
        type: string
        x-go-name: Id
      pthid:
        description: Optional field containing ID of the invitation which initiated
          this protocol.
        type: string
        x-go-name: Pthid
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  ProposeCredentialV3Body:
    properties:
      comment:
        type: string
        x-go-name: Comment
      credential_preview:
        $ref: '#/definitions/Any'
      goal_code:
        type: string
        x-go-name: GoalCode
    title: ProposeCredentialV3Body represents body for ProposeCredentialV3.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  ProposePresentationRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      connectOptions:
        $ref: '#/definitions/ConnectOpts'
      from:
        description: Optional From DID option to customize sender DID.
        type: string
        x-go-name: From
      invitation:
        $ref: '#/definitions/GenericInvitation'
      timeout:
        $ref: '#/definitions/Duration'
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: ProposePresentationRequest is request model for performing propose presentation
      operation from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ProposePresentationResponse:
    properties:
      presentationRequest:
        additionalProperties:
          $ref: '#/definitions/Any'
        description: response request presentation message from  relying party.
        type: object
        x-go-name: PresentationRequest
    title: ProposePresentationResponse is response model from wallet propose presentation
      operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ProposePresentationV2:
    description: |-
      ProposePresentationV2 is an optional message sent by the prover to the verifier to initiate a proof presentation
      process, or in response to a request-presentation message when the prover wants to propose
      using a different presentation format or request.
    properties:
      comment:
        description: |-
          Comment is a field that provides some human readable information about the proposed presentation.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300]
        type: string
        x-go-name: Comment
      formats:
        description: |-
          Formats contains an entry for each proposal~attach array entry, including an optional value of the
          attachment @id (if attachments are present) and the verifiable presentation format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      id:
        type: string
        x-go-name: Id
      proposal_attach:
        description: |-
          ProposalsAttach is an array of attachments that further define the presentation request being proposed.
          This might be used to clarify which formats or format versions are wanted.
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: ProposalAttach
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  ProposePresentationV3:
    description: |-
      ProposePresentationV3 is an optional message sent by the prover to the verifier to initiate a proof presentation
      process, or in response to a request-presentation message when the prover wants to propose
      using a different presentation format or request.
    properties:
      attachments:
        description: |-
          Attachments is an array of attachments that further define the presentation request being proposed.
          This might be used to clarify which formats or format versions are wanted.
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attachments
      body:
        $ref: '#/definitions/ProposePresentationV3Body'
      id:
        type: string
        x-go-name: Id
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  ProposePresentationV3Body:
    properties:
      comment:
        description: |-
          Comment is a field that provides some human readable information about the proposed presentation.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300]
        type: string
        x-go-name: Comment
      goal_code:
        type: string
        x-go-name: GoalCode
    title: ProposePresentationV3Body represents body for ProposePresentationV3.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  ProtocolOperation:
    properties:
      anchorOrigin:
        description: AnchorOrigin is anchor origin.
        type: string
        x-go-name: AnchorOrigin
      canonicalReference:
        description: CanonicalReference is canonical reference
        type: string
        x-go-name: CanonicalReference
      equivalentReferences:
        description: EquivalentReferences is equivalent references
        items:
          type: string
        type: array
        x-go-name: EquivalentReferences
      operation:
        description: Operation is operation request.
        type: string
        x-go-name: Operation
      protocolVersion:
        description: ProtocolVersion is protocol version.
        format: int32
        type: integer
        x-go-name: ProtocolVersion
      transactionNumber:
        description: TransactionNumber is transaction number.
        format: int32
        type: integer
        x-go-name: TransactionNumber
      transactionTime:
        description: TransactionTime is transaction time.
        format: int64
        type: integer
        x-go-name: TransactionTime
      type:
        description: Type is type of operation.
        type: string
        x-go-name: Type
    title: ProtocolOperation info.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  ProveRequest:
    description: Contains options for proofs and credential. Any combination of credential
      option can be mixed.
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      presentation:
        $ref: '#/definitions/VerifiablePresentation'
      proofOptions:
        $ref: '#/definitions/ProofOptions'
      rawCredentials:
        description: List of raw credentials to be presented.
        items:
          $ref: '#/definitions/VerifiableCredential'
        type: array
        x-go-name: RawCredentials
      storedCredentials:
        description: IDs of credentials already saved in wallet content store.
        items:
          type: string
        type: array
        x-go-name: StoredCredentials
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: ProveRequest for producing verifiable presentation from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ProveResponse:
    properties:
      presentation:
        $ref: '#/definitions/VerifiablePresentation'
    title: ProveResponse contains response presentation from prove operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  QueryConnectionResponse:
    description: This is used for returning query connection result for single record
      search.
    properties:
      result:
        $ref: '#/definitions/Record'
    title: QueryConnectionResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  QueryConnectionsResponse:
    description: This is used for returning query connections results.
    properties:
      results:
        items:
          $ref: '#/definitions/Record'
        type: array
        x-go-name: Results
    title: QueryConnectionsResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  QueryParams:
    description: Refer https://w3c-ccg.github.io/vp-request-spec/#format for more
      details.
    properties:
      credentialQuery:
        description: Query can contain one or more credential queries.
        items:
          items:
            format: uint8
            type: integer
          type: array
        type: array
        x-go-name: CredentialQuery
      type:
        description: |-
          Type of the query.
          Allowed values  'QueryByExample', 'QueryByFrame', 'PresentationExchange', 'DIDAuth'
        type: string
        x-go-name: Type
    title: QueryParams contains credential queries for querying credential from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/types
  ReceiveInvitationResponse:
    description: This is used for returning a receive invitation response with a single
      receive invitation response as body.
    properties:
      accept:
        description: Connection invitation accept mode
        type: string
        x-go-name: Accept
      connection_id:
        description: the connection ID of the connection invitation
        type: string
        x-go-name: ConnectionId
      created_at:
        $ref: '#/definitions/Timestamp'
      initiator:
        description: Connection invitation initiator
        type: string
        x-go-name: Initiator
      invitation_key:
        description: Invitation key
        type: string
        x-go-name: InvitationKey
      invitation_mode:
        description: Invitation mode
        type: string
        x-go-name: InvitationMode
      my_did:
        description: My DID
        type: string
        x-go-name: MyDid
      request_id:
        description: Invitation ID of invitation response
        type: string
        x-go-name: RequestId
      routing_state:
        description: Routing state of connection invitation
        type: string
        x-go-name: RoutingState
      state:
        description: State of the connection invitation
        type: string
        x-go-name: State
      their_label:
        description: Other party's label
        type: string
        x-go-name: TheirLabel
      updated_at:
        $ref: '#/definitions/Timestamp'
    title: ReceiveInvitationResponse model
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  Recipient:
    description: |-
      Recipient keeps information needed for the service
      'To' field is needed for the proposal message
      'MyDID' and 'TheirDID' fields are needed for sending messages e.g report-problem, proposal, ack etc.
    properties:
      goal:
        type: string
        x-go-name: Goal
      goal_code:
        type: string
        x-go-name: GoalCode
      my_did:
        type: string
        x-go-name: MyDid
      their_did:
        type: string
        x-go-name: TheirDid
      to:
        $ref: '#/definitions/To'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/types
  Record:
    properties:
      context:
        items:
          type: string
        type: array
        x-go-name: Context
      id:
        type: string
        x-go-name: Id
      my_did:
        description: |-
          MyDID and TheirDID contains information about participants who were involved in the process
          of issuing a credential or presentation.
        type: string
        x-go-name: MyDid
      name:
        type: string
        x-go-name: Name
      subjectId:
        type: string
        x-go-name: SubjectId
      their_did:
        type: string
        x-go-name: TheirDid
      type:
        items:
          type: string
        type: array
        x-go-name: Type
    title: Record model containing name, ID and other fields of interest.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/spi/types
  RegisterHTTPMsgSvcRequest:
    properties:
      name:
        description: Name of the HTTP over DIDComm message service
        type: string
        x-go-name: Name
      purpose:
        description: |-
          Acceptance criteria for http over did comm message service based on message purpose.
          In case of multiple purposes, operation will follow `A tagging system` purpose field validation from RFC-0351
          If not provided then all incoming messages of HTTP over DIDComm message will be handled by operation.
        items:
          type: string
        type: array
        x-go-name: Purpose
    title: RegisterHTTPMsgSvcRequest contains parameters for registering an HTTP over
      DIDComm message service to message handler.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/msg/services
  RegisterMsgSvcRequest:
    properties:
      message:
        description: |-
          Acceptance criteria for message service based on message message.
          Can be provided in conjunction with other acceptance criteria.
        type: string
        x-go-name: Message
      name:
        description: Name of the message service
        type: string
        x-go-name: Name
      purpose:
        description: |-
          Acceptance criteria for message service based on message purpose
          in case of multiple purposes, message will be dispatched if any one of the purpose matches
          with the purpose of incoming message.
          Can be provided in conjunction with other acceptance criteria.
        items:
          type: string
        type: array
        x-go-name: Purpose
    title: RegisterMsgSvcRequest contains parameters for registering a message service
      to message handler.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/msg/services
  RegisterRoute:
    properties:
      connection_ID:
        type: string
        x-go-name: Connection_ID
    title: RegisterRoute contains parameters for registering/reconnecting router.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/mediator/services
  RemoteProviderRecord:
    properties:
      endpoint:
        type: string
        x-go-name: Endpoint
      id:
        type: string
        x-go-name: Id
    title: RemoteProviderRecord is a record in store with remote provider info.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/ld/types
  RemoveContentRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      contentID:
        description: ID of the content to be removed from wallet
        type: string
        x-go-name: ContentID
      contentType:
        description: |-
          type of the content to be removed from the wallet.
          supported types: collection, credential, didResolutionResponse, metadata, connection
        type: string
        x-go-name: ContentType
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: RemoveContentRequest is request for removing a content from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  RemoveContentResponse:
    properties:
      deleted:
        type: boolean
        x-go-name: Deleted
    title: RemoveContentResponse is response for removing a content from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  RequestCredentialRequest:
    description: Supported attachment MIME type "application/ld+json".
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      presentation:
        $ref: '#/definitions/GenericPresentation'
      threadID:
        description: Thread ID from offer credential response previously received
          during propose credential interaction.
        type: string
        x-go-name: ThreadID
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
      waitForDone:
        description: |-
          If true then wallet will wait till it receives credential fulfillment response from issuer for given Timeout.
          Also, will return web redirect info if found in fulfillment message or problem-report.
        type: boolean
        x-go-name: WaitForDone
      waitForDoneTimeout:
        $ref: '#/definitions/Duration'
    title: RequestCredentialRequest is request model from wallet request credential
      operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  RequestCredentialResponse:
    properties:
      status:
        description: |-
          One of the status present proof or issue credential interaction
          Refer https://github.com/hyperledger/aries-rfcs/blob/main/features/0015-acks/README.md#ack-status.
        type: string
        x-go-name: Status
      url:
        description: Optional web redirect URL info sent by verifier.
        type: string
        x-go-name: Url
    title: RequestCredentialResponse is response model from wallet request credential
      operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  RequestCredentialV2:
    description: |-
      to request the issuance of a credential. Where circumstances do not require
      a preceding Offer Credential message (e.g., there is no cost to issuance
      that the Issuer needs to explain in advance, and there is no need for cryptographic negotiation),
      this message initiates the protocol.
      TODO: Need to add ~payment-receipt decorator [Issue #1298].
    properties:
      comment:
        description: |-
          Comment is an optional field that provides human readable information about this Credential Offer,
          so the offer can be evaluated by human judgment.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300].
        type: string
        x-go-name: Comment
      formats:
        description: |-
          Formats contains an entry for each requests~attach array entry, providing the the value
          of the attachment @id and the verifiable credential format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      requests_attach:
        description: RequestsAttach is a slice of attachments defining the requested
          formats for the credential
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: RequestsAttach
      type:
        type: string
        x-go-name: Type
    title: RequestCredentialV2 is a message sent by the potential Holder to the Issuer,
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  RequestCredentialV3:
    description: |-
      to request the issuance of a credential. Where circumstances do not require
      a preceding Offer Credential message (e.g., there is no cost to issuance
      that the Issuer needs to explain in advance, and there is no need for cryptographic negotiation),
      this message initiates the protocol.
    properties:
      attachments:
        description: |-
          Attachments is an array of attachments containing the presentation in the requested format(s).
          Accepted values for the format attribute of each attachment are provided in the per format Attachment
          registry immediately below.
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attachments
      body:
        $ref: '#/definitions/RequestCredentialV3Body'
      id:
        type: string
        x-go-name: Id
      type:
        type: string
        x-go-name: Type
    title: RequestCredentialV3 is a message sent by the potential Holder to the Issuer,
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  RequestCredentialV3Body:
    properties:
      comment:
        type: string
        x-go-name: Comment
      goal_code:
        type: string
        x-go-name: GoalCode
    title: RequestCredentialV3Body represents body for RequestCredentialV3.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/types
  RequestPresentationV2:
    properties:
      comment:
        description: |-
          Comment is a field that provides some human readable information about the proposed presentation.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300]
        type: string
        x-go-name: Comment
      formats:
        description: |-
          Formats contains an entry for each request_presentations~attach array entry, providing the the value of the
          attachment @id and the verifiable presentation request format and version of the attachment.
        items:
          $ref: '#/definitions/Format'
        type: array
        x-go-name: Formats
      id:
        type: string
        x-go-name: Id
      request_presentations_attach:
        description: RequestPresentationsAttach is an array of attachments containing
          the acceptable verifiable presentation requests.
        items:
          $ref: '#/definitions/Attachment'
        type: array
        x-go-name: RequestPresentationsAttach
      type:
        type: string
        x-go-name: Type
      will_confirm:
        description: |-
          WillConfirm is a field that defaults to "false" to indicate that the verifier will or will not
          send a post-presentation confirmation ack message.
        type: boolean
        x-go-name: WillConfirm
    title: RequestPresentationV2 describes values that need to be revealed and predicates
      that need to be fulfilled.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  RequestPresentationV3:
    properties:
      attachments:
        description: Attachments is an array of attachments containing the acceptable
          verifiable presentation requests.
        items:
          $ref: '#/definitions/AttachmentV2'
        type: array
        x-go-name: Attachments
      body:
        $ref: '#/definitions/RequestPresentationV3Body'
      id:
        type: string
        x-go-name: Id
      type:
        type: string
        x-go-name: Type
    title: RequestPresentationV3 describes values that need to be revealed and predicates
      that need to be fulfilled.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  RequestPresentationV3Body:
    properties:
      comment:
        description: |-
          Comment is a field that provides some human readable information about the proposed presentation.
          TODO: Should follow DIDComm conventions for l10n. [Issue #1300]
        type: string
        x-go-name: Comment
      goal_code:
        type: string
        x-go-name: GoalCode
      will_confirm:
        description: |-
          WillConfirm is a field that defaults to "false" to indicate that the verifier will or will not
          send a post-presentation confirmation ack message.
        type: boolean
        x-go-name: WillConfirm
    title: RequestPresentationV3Body represents body for RequestPresentationV3.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  ResolveCredentialManifestRequest:
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      credential:
        $ref: '#/definitions/VerifiableCredential'
      credentialID:
        description: ID of the Credential from wallet content to be be resolved, to
          be provided along with 'DescriptorID'.
        type: string
        x-go-name: CredentialID
      descriptorID:
        description: ID of the output descriptor to be used for resolving given credential.
        type: string
        x-go-name: DescriptorID
      fulfillment:
        $ref: '#/definitions/CredentialFulfillment'
      manifest:
        $ref: '#/definitions/CredentialManifest'
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: ResolveCredentialManifestRequest is request model for resolving credential
      manifest from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ResolveCredentialManifestResponse:
    properties:
      resolved:
        items:
          $ref: '#/definitions/ResolvedDescriptor'
        type: array
        x-go-name: Resolved
    title: ResolveCredentialManifestResponse is response model from wallet credential
      manifest resolve operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  ResolvedDescriptor:
    description: |-
      typically represents a DataDisplayDescriptor that's had its various "template" fields resolved
      into concrete values based on a Verifiable Credential.
    properties:
      description:
        type: string
        x-go-name: Description
      descriptor_id:
        type: string
        x-go-name: DescriptorId
      properties:
        items:
          $ref: '#/definitions/ResolvedProperty'
        type: array
        x-go-name: Properties
      styles:
        $ref: '#/definitions/Styles'
      subtitle:
        type: string
        x-go-name: Subtitle
      title:
        type: string
        x-go-name: Title
    title: ResolvedDescriptor typically represents results of resolving manifests
      by credential fulfillment.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  ResolvedProperty:
    properties:
      label:
        type: string
        x-go-name: Label
      schema:
        $ref: '#/definitions/Schema'
      value:
        $ref: '#/definitions/Any'
    title: ResolvedProperty contains resolved result for each resolved property.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  RotateDIDResponse:
    properties:
      new_did:
        type: string
        x-go-name: NewDid
    title: RotateDIDResponse response from a DID rotation call, with the new DID that
      the connection was rotated to.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/services
  Schema:
    properties:
      required:
        type: boolean
        x-go-name: Required
      uri:
        type: string
        x-go-name: Uri
    title: Schema input descriptor schema.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  SendNewMessageRequest:
    description: |-
      SendNewMessageRequest contains parameters for sending new message
      with one of three destination options below,
      1. ConnectionID - ID of the connection between sender and receiver of this message.
      2. TheirDID - TheirDID of the DID exchange connection record between sender and receiver of this message.
      3. ServiceEndpoint (With recipient Keys, endpoint and optional routing keys) - To Send message outside connection.
      Note: Precedence logic when multiple destination options are provided are according to above order.
    properties:
      await_reply:
        $ref: '#/definitions/AwaitReply'
      connection_ID:
        description: |-
          Connection ID of the message destination
          This parameter takes precedence over all the other destination parameters.
        type: string
        x-go-name: Connection_ID
      message_bod:
        description: Message body of the message
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: MessageBod
      service_endpoint:
        $ref: '#/definitions/ServiceEndpointDestinationParams'
      their_did:
        description: |-
          DID of the destination.
          This parameter takes precedence over `ServiceEndpoint` destination parameter.
        type: string
        x-go-name: TheirDid
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/msg/services
  SendReplyMessageRequest:
    properties:
      await_reply:
        $ref: '#/definitions/AwaitReply'
      message_ID:
        description: ID of the message replying to
        type: string
        x-go-name: Message_ID
      message_body:
        description: Message body of the reply message
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: MessageBody
      start_new_thread:
        description: StartNewThread if provided, replies to message by starting a
          new thread.
        type: boolean
        x-go-name: StartNewThread
    title: SendReplyMessageRequest contains parameters for sending message reply.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/msg/services
  Service:
    properties:
      accept:
        items:
          type: string
        type: array
        x-go-name: Accept
      id:
        type: string
        x-go-name: Id
      priority:
        format: uint32
        type: integer
        x-go-name: Priority
      properties:
        additionalProperties:
          $ref: '#/definitions/Any'
        type: object
        x-go-name: Properties
      recipientKeys:
        items:
          type: string
        type: array
        x-go-name: RecipientKeys
      recipientKeysRelativeUrl:
        additionalProperties:
          type: boolean
        type: object
        x-go-name: RecipientKeysRelativeUrl
      relativeUrl:
        type: boolean
        x-go-name: RelativeUrl
      routingKeys:
        items:
          type: string
        type: array
        x-go-name: RoutingKeys
      routingKeysRelativeUrl:
        additionalProperties:
          type: boolean
        type: object
        x-go-name: RoutingKeysRelativeUrl
      serviceEndpoint:
        $ref: '#/definitions/Endpoint'
      type:
        type: string
        x-go-name: Type
    title: Service DID doc service.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  ServiceEndpointDestinationParams:
    properties:
      recipient_keys:
        description: Recipient keys of service endpoint
        items:
          type: string
        type: array
        x-go-name: RecipientKeys
      routing_keys:
        description: Routing Keys of service endpoint
        items:
          type: string
        type: array
        x-go-name: RoutingKeys
      service_endpoint:
        description: Service endpoint
        type: string
        x-go-name: ServiceEndpoint
    title: ServiceEndpointDestinationParams contains service endpoint params.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/msg/services
  SignCredentialRequest:
    properties:
      credential:
        $ref: '#/definitions/VerifiableCredential'
      did:
        type: string
        x-go-name: Did
      options:
        $ref: '#/definitions/ProofOptions'
    title: SignCredentialRequest is adding proof to given credential.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/services
  SignatureRepresentation:
    format: int32
    title: SignatureRepresentation is a signature value holder type (e.g. "proofValue"
      or "jws").
    type: integer
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  StatusRequest:
    properties:
      connection_ID:
        type: string
        x-go-name: Connection_ID
    title: StatusRequest is request for getting details about pending messages.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/mediator/services
  StatusResponse:
    properties:
      duration_waited:
        format: int32
        type: integer
        x-go-name: DurationWaited
      id:
        type: string
        x-go-name: Id
      last_added_time:
        $ref: '#/definitions/Timestamp'
      last_delivered_time:
        $ref: '#/definitions/Timestamp'
      last_removed_time:
        $ref: '#/definitions/Timestamp'
      message_count:
        format: int32
        type: integer
        x-go-name: MessageCount
      thread:
        $ref: '#/definitions/Thread'
      total_size:
        format: int32
        type: integer
        x-go-name: TotalSize
      type:
        type: string
        x-go-name: Type
    title: StatusResponse is status response containing details about pending messages.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/mediator/services
  Styles:
    description: |-
      Styles represents an Entity Styles object as defined in
      https://identity.foundation/credential-manifest/wallet-rendering/#entity-styles.
    properties:
      background:
        $ref: '#/definitions/Color'
      hero:
        $ref: '#/definitions/ImageURIWithAltText'
      text:
        $ref: '#/definitions/Color'
      thumbnail:
        $ref: '#/definitions/ImageURIWithAltText'
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  SubmissionRequirement:
    description: |-
      SubmissionRequirement describes input that must be submitted via a Presentation Submission
      to satisfy Verifier demands.
    properties:
      count:
        format: int64
        type: integer
        x-go-name: Count
      from:
        type: string
        x-go-name: From
      from_nested:
        items:
          $ref: '#/definitions/SubmissionRequirement'
        type: array
        x-go-name: FromNested
      max:
        format: int64
        type: integer
        x-go-name: Max
      min:
        format: int64
        type: integer
        x-go-name: Min
      name:
        type: string
        x-go-name: Name
      purpose:
        type: string
        x-go-name: Purpose
      rule:
        type: string
        x-go-name: Rule
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/presentproof/types
  TermsOfUse:
    properties:
      id:
        description: |-
          The id for terms
          e.g. http://example.com/policies/credential/4
        type: string
        x-go-name: Id
      profile:
        description: profile, http://example.com/profiles/credential
        type: string
        x-go-name: Profile
      prohibition:
        description: prohibition
        items:
          $ref: '#/definitions/Prohibition'
        type: array
        x-go-name: Prohibition
      type:
        description: type of terms , e.g. IssuerPolicy
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  Thread:
    properties:
      pthid:
        type: string
        x-go-name: Pthid
      received_orders:
        additionalProperties:
          format: int32
          type: integer
        type: object
        x-go-name: ReceivedOrders
      sender_order:
        format: int32
        type: integer
        x-go-name: SenderOrder
      thid:
        type: string
        x-go-name: Thid
    title: Thread thread data.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  Timestamp:
    description: |-
      All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
      second table is needed for interpretation, using a [24-hour linear
      smear](https://developers.google.com/time/smear).

      The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
      restricting to that range, we ensure that we can convert to and from [RFC
      3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

      # Examples

      Example 1: Compute Timestamp from POSIX `time()`.

      Timestamp timestamp;
      timestamp.set_seconds(time(NULL));
      timestamp.set_nanos(0);

      Example 2: Compute Timestamp from POSIX `gettimeofday()`.

      struct timeval tv;
      gettimeofday(&tv, NULL);

      Timestamp timestamp;
      timestamp.set_seconds(tv.tv_sec);
      timestamp.set_nanos(tv.tv_usec * 1000);

      Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

      FILETIME ft;
      GetSystemTimeAsFileTime(&ft);
      UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

      A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
      is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
      Timestamp timestamp;
      timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
      timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

      Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

      long millis = System.currentTimeMillis();

      Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
      .setNanos((int) ((millis % 1000) * 1000000)).build();


      Example 5: Compute Timestamp from Java `Instant.now()`.

      Instant now = Instant.now();

      Timestamp timestamp =
      Timestamp.newBuilder().setSeconds(now.getEpochSecond())
      .setNanos(now.getNano()).build();


      Example 6: Compute Timestamp from current time in Python.

      timestamp = Timestamp()
      timestamp.GetCurrentTime()

      # JSON Mapping

      In JSON format, the Timestamp type is encoded as a string in the
      [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
      format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
      where {year} is always expressed using four digits while {month}, {day},
      {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
      seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
      are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
      is required. A proto3 JSON serializer should always use UTC (as indicated by
      "Z") when printing the Timestamp type and a proto3 JSON parser should be
      able to accept both UTC and other timezones (as indicated by an offset).

      For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
      01:30 UTC on January 15, 2017.

      In JavaScript, one can convert a Date object to this format using the
      standard
      [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
      method. In Python, a standard `datetime.datetime` object can be converted
      to this format using
      [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
      the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
      the Joda Time's [`ISODateTimeFormat.dateTime()`](
      http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D
      ) to obtain a formatter capable of generating timestamps in this format.
    properties:
      nanos:
        description: |-
          Non-negative fractions of a second at nanosecond resolution. Negative
          second values with fractions must still have non-negative nanos values
          that count forward in time. Must be from 0 to 999,999,999
          inclusive.
        format: int32
        type: integer
        x-go-name: Nanos
      seconds:
        description: |-
          Represents seconds of UTC time since Unix epoch
          1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
          9999-12-31T23:59:59Z inclusive.
        format: int64
        type: integer
        x-go-name: Seconds
    title: |-
      A Timestamp represents a point in time independent of any time zone or local
      calendar, encoded as a count of seconds and fractions of seconds at
      nanosecond resolution. The count is relative to an epoch at UTC midnight on
      January 1, 1970, in the proleptic Gregorian calendar which extends the
      Gregorian calendar backwards to year one.
    type: object
    x-go-package: google.golang.org/protobuf/types/known/timestamppb
  To:
    description: |-
      To introducee descriptor keeps information about the introduction
      e.g introducer wants to introduce Bot to introducee { "name": "Bob" }.
    properties:
      description:
        type: string
        x-go-name: Description
      description_l10n:
        additionalProperties:
          type: string
        type: object
        x-go-name: DescriptionL10N
      img_attach:
        $ref: '#/definitions/ImgAttach'
      name:
        type: string
        x-go-name: Name
      proposed:
        type: boolean
        x-go-name: Proposed
      where:
        type: string
        x-go-name: Where
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/introduce/types
  UnlockAuth:
    properties:
      authToken:
        description: |-
          Http header 'authorization' bearer token to be used.
          Optional, only if required by wallet user (for webkms or edv).
        type: string
        x-go-name: AuthToken
      authzKeyStoreURL:
        description: |-
          AuthZKeyStoreURL if ZCAP sign header feature to be used for authorizing access.
          Optional, can be used only if ZCAP sign header feature is configured with command controller.
        type: string
        x-go-name: AuthzKeyStoreURL
      capability:
        description: |-
          Capability if ZCAP sign header feature to be used for authorizing access.
          Optional, can be used only if ZCAP sign header feature is configured with command controller.
        type: string
        x-go-name: Capability
      gnapToken:
        description: |-
          Http header 'authorization' GNAP token to be used.
          Optional, only if required by wallet user (for webkms or edv).
        type: string
        x-go-name: GnapToken
      secretShare:
        description: |-
          SecretShare if ZCAP sign header feature to be used for authorizing access.
          Optional, can be used only if ZCAP sign header feature is configured with command controller.
        type: string
        x-go-name: SecretShare
    title: UnlockAuth contains different options for authorizing access to wallet's
      EDV content store & webkms.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/types
  UnlockWalletRequest:
    properties:
      edvUnlocks:
        $ref: '#/definitions/UnlockAuth'
      expiry:
        $ref: '#/definitions/Duration'
      localKMSPassphrase:
        description: |-
          passphrase for local kms for key operations.
          Optional, to be used if profile for this wallet user is setup with local KMS.
        type: string
        x-go-name: LocalKMSPassphrase
      userID:
        description: user ID of the wallet to be unlocked.
        type: string
        x-go-name: UserID
      webKMSAuth:
        $ref: '#/definitions/UnlockAuth'
    title: UnlockWalletRequest contains different options for unlocking wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  UnlockWalletResponse:
    properties:
      token:
        description: Token for granting access to wallet for subsequent wallet operations.
        type: string
        x-go-name: Token
    title: UnlockWalletResponse contains response for wallet unlock operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  UnregisterMsgSvcRequest:
    properties:
      name:
        description: Name of the message service to be unregistered
        type: string
        x-go-name: Name
    required:
    - name
    title: UnregisterMsgSvcRequest contains parameters for unregistering a message
      service from message handler.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/msg/services
  VerifiableCredential:
    description: |-
      A verifiable credential is a set of one or more claims made by the same entity. Credentials
      might also include an identifier and metadata to describe properties of the credential,
      such as the issuer, the expiry date and time, a representative image, a public key to use for
      verification purposes, the revocation mechanism, and so on. The metadata might be signed by the issuer.
      A verifiable credential is a set of tamper-evident claims and metadata that cryptographically prove who issued it.
      Verifiable credentials = Credential Metadata + Claims + Proofs
      Examples of verifiable credentials include digital employee
      identification cards, digital birth certificates, and digital educational certificates.
    properties:
      Issuer:
        $ref: '#/definitions/isVerifiableCredential_Issuer'
      context:
        description: |-
          The JSON-LD context of the credential. Each item in the @context array MUST be a string.
          "@context": [
          "https://www.w3.org/2018/credentials/v1",
          "https://www.w3.org/2018/credentials/examples/v1"
          ]
        items:
          type: string
        type: array
        x-go-name: Context
      credentialSchema:
        $ref: '#/definitions/CredentialSchema'
      credentialSubject:
        $ref: '#/definitions/Any'
      evidence:
        description: |-
          Evidence can be included by an issuer to provide the verifier with additional supporting information in a
          verifiable credential. This could be used by the verifier to establish the confidence with which
          it relies on the claims in the verifiable credential.
          "evidence": [{
          "id": "https://example.edu/evidence/f2aeec97-fc0d-42bf-8ca7-0548192d4231",
          "type": ["DocumentVerification"],
          "verifier": "https://example.edu/issuers/14",
          "evidenceDocument": "DriversLicense",
          "subjectPresence": "Physical",
          "documentPresence": "Physical",
          "licenseNumber": "123AB4567"
          }],
        items:
          $ref: '#/definitions/Any'
        type: array
        x-go-name: Evidence
      expirationDate:
        $ref: '#/definitions/Timestamp'
      id:
        description: The ID of the credential.
        type: string
        x-go-name: Id
      issuanceDate:
        $ref: '#/definitions/Timestamp'
      name:
        type: string
        x-go-name: Name
      proof:
        $ref: '#/definitions/CredentialProof'
      termsOfUse:
        $ref: '#/definitions/TermsOfUse'
      type:
        description: |-
          The JSON-LD type of the credential. Each item in the type array MUST be a string.
          e.g. ["VerifiableCredential", "AlumniCredential"]
        items:
          type: string
        type: array
        x-go-name: Type
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  VerifiablePresentation:
    description: |-
      VerifiablePresentation - Verifies a Presentation with or without proofs attached
      A verifiable presentation expresses data from one or more verifiable credentials, and
      is packaged in such a way that the authorship of the data is verifiable. If verifiable
      credentials are presented directly, they become verifiable presentations. Data formats derived
      from verifiable credentials that are cryptographically verifiable, but do not of themselves
      contain verifiable credentials, might also be verifiable presentations.
      VerifiablePresentation = Presentation metadata + VerifiableCredentials + Proofs
    properties:
      context:
        description: The JSON-LD context of the credential. Each item in the @context
          array MUST be a string.
        items:
          type: string
        type: array
        x-go-name: Context
      customContext:
        items:
          $ref: '#/definitions/Any'
        type: array
        x-go-name: CustomContext
      customFields:
        additionalProperties:
          $ref: '#/definitions/Any'
        type: object
        x-go-name: CustomFields
      holder:
        $ref: '#/definitions/Any'
      id:
        description: The ID of the presentation.
        type: string
        x-go-name: Id
      name:
        type: string
        x-go-name: Name
      proofs:
        description: A JSON-LD Linked Data proof.
        items:
          $ref: '#/definitions/CredentialProof'
        type: array
        x-go-name: Proofs
      type:
        description: The JSON-LD type of the credential. Each item in the type array
          MUST be a string.
        items:
          type: string
        type: array
        x-go-name: Type
      verifiableCredential:
        description: 'The Verifiable Credentials Each item in the verifiableCredential
          array MUST be an object of the following form:'
        items:
          $ref: '#/definitions/VerifiableCredential'
        type: array
        x-go-name: VerifiableCredential
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
  Verification:
    properties:
      embedded:
        type: boolean
        x-go-name: Embedded
      relationship:
        $ref: '#/definitions/VerificationRelationship'
      verificationMethod:
        $ref: '#/definitions/VerificationMethod'
    title: Verification authentication verification.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  VerificationMethod:
    description: |-
      The value of the verification method is defined either as raw public key bytes (Value field) or as JSON Web Key.
      In the first case the Type field can hold additional information to understand the nature of the raw public key.
    properties:
      controller:
        type: string
        x-go-name: Controller
      id:
        type: string
        x-go-name: Id
      jsonWebKey:
        $ref: '#/definitions/JSONWebKey'
      multibaseEncoding:
        $ref: '#/definitions/Encoding'
      relativeURL:
        type: boolean
        x-go-name: RelativeURL
      type:
        type: string
        x-go-name: Type
      value:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Value
    title: VerificationMethod DID doc verification method.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  VerificationRelationship:
    format: int32
    title: VerificationRelationship defines a verification relationship between DID
      subject and a verification method.
    type: integer
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  VerifyCredentialRequest:
    properties:
      credential:
        $ref: '#/definitions/VerifiableCredential'
      spec:
        $ref: '#/definitions/CredentialSpec'
    title: VerifyCredentialRequest model.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/issuecredential/services
  VerifyRequest:
    description: Any one of the credential option should be used.
    properties:
      auth:
        description: |-
          WalletAuth
          Authorization token for performing wallet operations.
        type: string
        x-go-name: Auth
      presentation:
        $ref: '#/definitions/VerifiablePresentation'
      rawCredentials:
        description: |-
          List of raw credential to be presented.
          optional, if provided then this option takes precedence over presentation options.
        items:
          $ref: '#/definitions/VerifiableCredential'
        type: array
        x-go-name: RawCredentials
      storedCredentialID:
        description: |-
          ID of the credential already saved in wallet content store.
          optional, if provided then this option takes precedence over other options.
        type: string
        x-go-name: StoredCredentialID
      userID:
        description: ID of wallet user.
        type: string
        x-go-name: UserID
    title: VerifyRequest request for verifying a credential or presentation from wallet.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  VerifyResponse:
    properties:
      error:
        description: error details if verified is false.
        type: string
        x-go-name: Error
      verified:
        description: if true then verification is successful.
        type: boolean
        x-go-name: Verified
    title: VerifyResponse is response model for wallet verify operation.
    type: object
    x-go-package: github.com/bhatti/GSSI/api/wallet/services
  WebRedirect:
    description: |-
      WebRedirect decorator for passing web redirect info to ask recipient of the message
      to redirect after completion of flow.
    properties:
      status:
        description: |-
          Status of the operation,
          Refer https://github.com/hyperledger/aries-rfcs/blob/main/features/0015-acks/README.md#ack-status.
        type: string
        x-go-name: Status
      url:
        description: URL to which recipient of this message is being requested to
          redirect.
        type: string
        x-go-name: Url
    type: object
    x-go-package: github.com/bhatti/GSSI/api/did/doc/types
  isVerifiableCredential_Issuer:
    type: object
    x-go-package: github.com/bhatti/GSSI/api/vc/types
paths:
  /connections:
    get:
      operationId: queryConnections
      parameters:
      - description: Alias of connection invitation
        in: query
        name: alias
        type: string
        x-go-name: Alias
      - description: Initiator is Connection invitation initiator
        in: query
        name: initiator
        type: string
        x-go-name: Initiator
      - description: Invitation key
        in: query
        name: invitation_key
        type: string
        x-go-name: InvitationKey
      - description: Invitation ID
        in: query
        name: invitation_id
        type: string
        x-go-name: InvitationId
      - description: Parent threadID
        in: query
        name: parent_thread_id
        type: string
        x-go-name: ParentThreadId
      - description: MyDID is DID of the agent
        in: query
        name: my_did
        type: string
        x-go-name: MyDid
      - description: State of the connection invitation
        in: query
        name: state
        type: string
        x-go-name: State
      - description: TheirDID is other party's DID
        in: query
        name: their_did
        type: string
        x-go-name: TheirDid
      - description: TheirRole is other party's role
        in: query
        name: their_role
        type: string
        x-go-name: TheirRole
      - format: int32
        in: query
        name: page
        type: integer
        x-go-name: Page
      - format: int32
        in: query
        name: page_size
        type: integer
        x-go-name: PageSize
      responses:
        "200":
          $ref: '#/responses/queryConnectionsResponse'
      summary: query agent to agent connections.
      tags:
      - did-exchange
  /connections/{id}:
    get:
      operationId: getConnection
      parameters:
      - description: The ID of the connection to get
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/queryConnectionResponse'
      summary: Fetch a single connection record.
      tags:
      - did-exchange
  /connections/{id}/accept-invitation:
    post:
      operationId: acceptInvitation
      parameters:
      - description: Connection ID
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - in: body
        name: body
        schema:
          $ref: '#/definitions/AcceptInvitationBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/acceptInvitationResponse'
      summary: Accept a stored connection invitation....
      tags:
      - did-exchange
  /connections/{id}/accept-request:
    post:
      operationId: acceptRequest
      parameters:
      - description: Connection ID
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - description: |-
          Optional Public DID to be used for this invitation
          request
        in: query
        name: public
        type: string
        x-go-name: Public
      - description: Optional specifies router connections (comma-separated values)
        in: query
        name: router_connections
        type: string
        x-go-name: RouterConnections
      responses:
        "200":
          $ref: '#/responses/acceptExchangeResponse'
      summary: Accepts a stored connection request.
      tags:
      - did-exchange
  /connections/{id}/remove:
    post:
      operationId: removeConnection
      parameters:
      - description: The ID of the connection record to remove
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/removeConnectionResponse'
      summary: Removes given connection record.
      tags:
      - did-exchange
  /connections/{id}/rotate-did:
    post:
      operationId: rotateDID
      parameters:
      - description: The ID of the connection record to rotate the DID of
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      - description: KID Key ID of the signing key in the connection's current DID,
          used to sign the DID rotation.
        in: query
        name: kid
        type: string
        x-go-name: Kid
      - description: NewDID DID that the given connection will rotate to.
        in: query
        name: new_did
        type: string
        x-go-name: NewDid
      - description: CreatePeerDID flag that, when true, makes the DID rotation create
          a new peer DID, ignoring the NewDID parameter.
        in: query
        name: create_peer_did
        type: boolean
        x-go-name: CreatePeerDid
      responses:
        "200":
          $ref: '#/responses/rotateDIDResponse'
      summary: Rotates the agent's DID in the given connection.
      tags:
      - connections
  /connections/{id}/use-v2:
    post:
      description: "200\tSucceeded\n400\tBad Request\n401\tNot Authorized\n410\tGone!
        There is no data here\n500\tInternal Error\n501\tNot Implemented"
      operationId: setConnectionToV2
      summary: SetConnectionToDIDCommV2 sets the didcomm version of the given connection
        to V2.
      tags:
      - connections
  /connections/create:
    post:
      operationId: createConnection
      parameters:
      - description: Params for creating a connection.
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/CreateConnectionRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/createConnectionResp'
      summary: Saves the connection record.
      tags:
      - did-exchange
  /connections/create-implicit-invitation:
    post:
      operationId: implicitInvitation
      parameters:
      - description: InviterDID
        in: query
        name: their_did
        type: string
        x-go-name: TheirDid
      - description: Optional inviter label
        in: query
        name: their_label
        type: string
        x-go-name: TheirLabel
      - description: Optional invitee did
        in: query
        name: my_did
        type: string
        x-go-name: MyDid
      - description: Optional invitee label
        in: query
        name: my_label
        type: string
        x-go-name: MyLabel
      - description: Optional specifies router connections (comma-separated values)
        in: query
        name: router_connections
        type: string
        x-go-name: RouterConnections
      responses:
        "200":
          $ref: '#/responses/implicitInvitationResponse'
      summary: Create implicit invitation using inviter DID.
      tags:
      - did-exchange
  /connections/create-invitation:
    post:
      operationId: createInvitation
      parameters:
      - description: Params for creating invitation
        in: body
        name: body
        schema:
          $ref: '#/definitions/CreateInvitationRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/createInvitationResponse'
      summary: Creates a new connection invitation....
      tags:
      - did-exchange
  /connections/create-v2:
    post:
      operationId: createConnectionV2
      parameters:
      - in: query
        name: my_did
        type: string
        x-go-name: MyDid
      - in: query
        name: their_did
        type: string
        x-go-name: TheirDid
      responses:
        "200":
          $ref: '#/responses/createConnectionV2Response'
      summary: Creates a DIDComm v2 connection record with the given DIDs.
      tags:
      - connections
  /connections/receive-invitation:
    post:
      operationId: receiveInvitation
      parameters:
      - description: The Invitation Invitation to receive
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Invitation'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/receiveInvitationResponse'
      summary: Receive a new connection invitation....
      tags:
      - did-exchange
  /http-over-didcomm/register:
    post:
      description: registers new http over didcomm service to message handler registrar
      operationId: registerHttpMsgSvc
      parameters:
      - description: Params for registering http over did comm message service.
        in: body
        name: params
        schema:
          $ref: '#/definitions/RegisterHTTPMsgSvcRequest'
        x-go-name: Params
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - http-over-didcomm
  /introduce/{piid}/accept-problem-report:
    post:
      operationId: introduceAcceptProblemReport
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      responses:
        "200":
          $ref: '#/responses/introduceAcceptProblemReportResponse'
      summary: Accepts a problem report.
      tags:
      - introduce
  /introduce/{piid}/accept-proposal:
    post:
      operationId: introduceAcceptProposal
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      responses:
        "200":
          $ref: '#/responses/introduceAcceptProposalResponse'
      summary: Accepts a proposal.
      tags:
      - introduce
  /introduce/{piid}/accept-proposal-with-oob-invitation:
    post:
      operationId: introduceAcceptProposalWithOOBInvitation
      responses:
        "200":
          $ref: '#/responses/introduceAcceptProposalWithOOBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a proposal with OOBRequest.
      tags:
      - introduce
  /introduce/{piid}/accept-request-with-public-oob-invitation:
    post:
      operationId: introduceAcceptRequestWithPublicOOBInvitation
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IntroduceAcceptRequestWithPublicOOBInvitation_Body'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/introduceAcceptRequestWithPublicOOBInvitationResponse'
      summary: Accept a request with public OOBRequest.
      tags:
      - introduce
  /introduce/{piid}/accept-request-with-recipients:
    post:
      operationId: introduceAcceptRequestWithRecipients
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IntroduceAcceptRequestWithRecipients_Body'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/introduceAcceptRequestWithRecipientsResponse'
      summary: Accept a request with recipients.
      tags:
      - introduce
  /introduce/{piid}/decline-proposal:
    post:
      operationId: introduceDeclineProposal
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason is an explanation of why it was declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      responses:
        "200":
          $ref: '#/responses/introduceDeclineProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines a proposal.
      tags:
      - introduce
  /introduce/{piid}/decline-request:
    post:
      operationId: introduceDeclineRequest
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason is an explanation of why it was declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      responses:
        "200":
          $ref: '#/responses/introduceDeclineRequestResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines a request.
      tags:
      - introduce
  /introduce/actions:
    get:
      operationId: introduceActionsReq
      responses:
        "200":
          $ref: '#/responses/introduceActionsResponse'
      summary: Returns pending actions that have not yet to be executed or cancelled.
      tags:
      - introduce
  /introduce/send-proposal:
    post:
      operationId: introduceSendProposalRequest
      responses:
        "200":
          $ref: '#/responses/introduceSendProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a proposal.
      tags:
      - introduce
  /introduce/send-proposal-with-oob-invitation:
    post:
      operationId: introduceSendProposalWithOOBInvitationRequest
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IntroduceSendProposalWithOOBInvitationRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/introduceSendProposalWithOOBInvitationResponse'
      summary: Sends a proposal with OOBRequest.
      tags:
      - introduce
  /introduce/send-request:
    post:
      operationId: introduceSendRequest
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IntroduceSendRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/introduceSendResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a request.
      tags:
      - introduce
  /issuecredential/{piid}/accept-credential:
    post:
      operationId: issueCredentialAcceptCredential
      parameters:
      - description: |-
          PIID Protocol instance ID.
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialAcceptCredentialBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialAcceptCredentialResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a credential.
      tags:
      - issue-credential
  /issuecredential/{piid}/accept-offer:
    post:
      operationId: issueCredentialAcceptOffer
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - $ref: '#/definitions/IssueCredentialAcceptOfferBody'
        in: query
        name: body
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialAcceptOfferResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts an offer.
      tags:
      - issue-credential
  /issuecredential/{piid}/accept-offerV3:
    post:
      operationId: issueCredentialAcceptOffer
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - $ref: '#/definitions/IssueCredentialAcceptOfferBody'
        in: query
        name: body
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialAcceptOfferResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts an offer.
      tags:
      - issue-credential
  /issuecredential/{piid}/accept-problem-report:
    post:
      operationId: issueCredentialAcceptProblemReport
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      responses:
        "200":
          $ref: '#/responses/issueCredentialAcceptProblemReportResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a problem report.
      tags:
      - issue-credential
  /issuecredential/{piid}/accept-proposal:
    post:
      operationId: issueCredentialAcceptProposal
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialAcceptProposalBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialAcceptProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a proposal.
      tags:
      - issue-credential
  /issuecredential/{piid}/accept-proposalV3:
    post:
      operationId: issueCredentialAcceptProposal
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialAcceptProposalBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialAcceptProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a proposal.
      tags:
      - issue-credential
  /issuecredential/{piid}/accept-request:
    post:
      operationId: issueCredentialAcceptRequest
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialAcceptRequestBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialAcceptRequestResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a request.
      tags:
      - issue-credential
  /issuecredential/{piid}/accept-requestV3:
    post:
      operationId: issueCredentialAcceptRequest
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialAcceptRequestBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialAcceptRequestResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a request.
      tags:
      - issue-credential
  /issuecredential/{piid}/decline-credential:
    post:
      operationId: issueCredentialDeclineCredential
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason why credential is declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      responses:
        "200":
          $ref: '#/responses/issueCredentialDeclineCredentialResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines a credential.
      tags:
      - issue-credential
  /issuecredential/{piid}/decline-offer:
    post:
      operationId: issueCredentialDeclineOffer
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason why offer is declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      responses:
        "200":
          $ref: '#/responses/issueCredentialDeclineOfferResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines an offer.
      tags:
      - issue-credential
  /issuecredential/{piid}/decline-proposal:
    post:
      operationId: issueCredentialDeclineProposal
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason why proposal is declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      - description: |-
          RedirectURL is optional web redirect URL that can be sent to holder.
          Useful in cases where issuer would like holder to redirect after its proposal gets declined.
        in: query
        name: redirectURL
        type: string
        x-go-name: RedirectURL
      responses:
        "200":
          $ref: '#/responses/issueCredentialDeclineProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines a proposal.
      tags:
      - issue-credential
  /issuecredential/{piid}/decline-request:
    post:
      operationId: issueCredentialDeclineRequest
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason why request is declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      - description: |-
          RedirectURL is optional web redirect URL that can be sent to holder.
          Useful in cases where issuer would like holder to redirect after its credential request gets declined.
        in: query
        name: redirectURL
        type: string
        x-go-name: RedirectURL
      responses:
        "200":
          $ref: '#/responses/issueCredentialDeclineRequestResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines a request.
      tags:
      - issue-credential
  /issuecredential/{piid}/negotiate-proposal:
    post:
      operationId: issueCredentialNegotiateProposal
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialNegotiateProposalBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialNegotiateProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Is used when the Holder wants to negotiate about an offer he received.
      tags:
      - issue-credential
  /issuecredential/{piid}/negotiate-proposalV3:
    post:
      operationId: issueCredentialNegotiateProposal
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialNegotiateProposalBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialNegotiateProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Is used when the Holder wants to negotiate about an offer he received.
      tags:
      - issue-credential
  /issuecredential/actions:
    get:
      operationId: issueCredentialActions
      responses:
        "200":
          $ref: '#/responses/issueCredentialActionsResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Returns pending actions that have not yet to be executed or cancelled.
      tags:
      - issue-credential
  /issuecredential/send-offer:
    post:
      operationId: issueCredentialSendOffer
      parameters:
      - in: body
        name: offer_credential
        schema:
          $ref: '#/definitions/OfferCredentialV2'
        x-go-name: OfferCredential
      responses:
        "200":
          $ref: '#/responses/issueCredentialSendOfferResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends an offer.
      tags:
      - issue-credential
  /issuecredential/send-offerV3:
    post:
      operationId: issueCredentialSendOffer
      parameters:
      - in: body
        name: offer_credential
        schema:
          $ref: '#/definitions/OfferCredentialV2'
        x-go-name: OfferCredential
      responses:
        "200":
          $ref: '#/responses/issueCredentialSendOfferResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends an offer.
      tags:
      - issue-credential
  /issuecredential/send-proposal:
    post:
      operationId: issueCredentialSendProposal
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialSendProposalBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialSendProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a proposal.
      tags:
      - issue-credential
  /issuecredential/send-proposalV3:
    post:
      operationId: issueCredentialSendProposal
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialSendProposalBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialSendProposalResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a proposal.
      tags:
      - issue-credential
  /issuecredential/send-request:
    post:
      operationId: issueCredentialSendRequest
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialSendRequestBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialSendRequestResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a request.
      tags:
      - issue-credential
  /issuecredential/send-requestV3:
    post:
      operationId: issueCredentialSendRequest
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialSendRequestBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialSendRequestResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a request.
      tags:
      - issue-credential
  /kms/import:
    post:
      operationId: importKey
      tags:
      - kms
  /kms/keyset:
    post:
      operationId: createKeySet
      responses:
        "200":
          $ref: '#/responses/createKeySetRes'
      summary: Create key set.
      tags:
      - kms
  /ld/context:
    post:
      operationId: addContextsReq
      parameters:
      - in: body
        name: documents
        schema:
          items:
            $ref: '#/definitions/Document'
          type: array
        x-go-name: Documents
      responses:
        default:
          $ref: '#/responses/genericError'
      summary: Adds JSON-LD contexts to the underlying storage.
      tags:
      - ld
  /ld/remote-provider:
    post:
      operationId: addRemoteProviderReq
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/AddRemoteProviderRequest'
        x-go-name: Body
      responses:
        default:
          $ref: '#/responses/genericError'
      summary: Adds remote provider and JSON-LD contexts from that provider to the
        underlying storage.
      tags:
      - ld
  /ld/remote-provider/{id}:
    delete:
      operationId: deleteRemoteProviderReq
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        default:
          $ref: '#/responses/genericError'
      summary: Deletes remote provider and JSON-LD contexts from that provider from
        the underlying storage.
      tags:
      - ld
  /ld/remote-provider/{id}/refresh:
    post:
      operationId: refreshRemoteProviderReq
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        default:
          $ref: '#/responses/genericError'
      summary: Updates contexts from the remote provider.
      tags:
      - ld
  /ld/remote-providers:
    get:
      operationId: getAllRemoteProvidersReq
      parameters:
      - format: int32
        in: query
        name: page
        type: integer
        x-go-name: Page
      - format: int32
        in: query
        name: pageSize
        type: integer
        x-go-name: PageSize
      responses:
        "200":
          $ref: '#/responses/getAllRemoteProvidersResp'
        default:
          $ref: '#/responses/genericError'
      summary: Gets all remote providers from the underlying storage.
      tags:
      - ld
  /ld/remote-providers/refresh:
    post:
      operationId: refreshAllRemoteProvidersReq
      responses:
        "200":
          $ref: '#/responses/getAllRemoteProvidersResp'
        default:
          $ref: '#/responses/genericError'
      summary: Updates contexts from all remote providers in the underlying storage.
      tags:
      - ld
  /mediator/batchpickup:
    post:
      operationId: batchPickupRequest
      parameters:
      - description: Params for dispatching pending messages for given connection..
        in: body
        name: params
        schema:
          $ref: '#/definitions/BatchPickupRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/batchPickupResponse'
        default:
          $ref: '#/responses/genericError'
      summary: BatchPickup dispatches pending messages for given connection.
      tags:
      - mediator
  /mediator/connections:
    get:
      operationId: connectionsRequest
      responses:
        "200":
          $ref: '#/responses/getConnectionsResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Retrieves the router`s connections.
      tags:
      - mediator
  /mediator/reconnect:
    post:
      operationId: reconnectRouteRequest
      parameters:
      - description: Params for reconnecting the router
        in: body
        name: params
        schema:
          $ref: '#/definitions/RegisterRoute'
        x-go-name: Params
      responses:
        default:
          $ref: '#/responses/genericError'
      summary: Reconnect the agent with the router to re-establish lost connection.
      tags:
      - mediator
  /mediator/reconnect-all:
    get:
      operationId: reconnectAll
      responses:
        default:
          $ref: '#/responses/genericError'
      summary: Re-establishes network connections for all mediator connections.
      tags:
      - mediator
  /mediator/register:
    post:
      operationId: registerRouteRequest
      parameters:
      - description: Params for registering the route
        in: body
        name: params
        schema:
          $ref: '#/definitions/RegisterRoute'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/registerRouteRes'
        default:
          $ref: '#/responses/genericError'
      summary: Registers the agent with the router.
      tags:
      - mediator
  /mediator/status:
    post:
      operationId: statusRequest
      parameters:
      - description: Params for getting details of pending messages for given connection.
        in: body
        name: params
        schema:
          $ref: '#/definitions/StatusRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/statusResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Status returns details about pending messages for given connection.
      tags:
      - mediator
  /mediator/unregister:
    delete:
      operationId: unregisterRouter
      parameters:
      - description: Params for unregister the router
        in: body
        name: params
        schema:
          $ref: '#/definitions/RegisterRoute'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/unregisterRouteRes'
        default:
          $ref: '#/responses/genericError'
      summary: Unregisters the agent with the router.
      tags:
      - mediator
  /message/register-service:
    post:
      description: registers new message service to message handler registrar
      operationId: registerMsgSvc
      parameters:
      - description: Params for registering message service
        in: body
        name: params
        schema:
          $ref: '#/definitions/RegisterMsgSvcRequest'
        x-go-name: Params
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - message
  /message/reply:
    post:
      description: sends reply to existing message
      operationId: sendReplyMessage
      parameters:
      - description: Params for sending message reply
        in: body
        name: params
        schema:
          $ref: '#/definitions/SendReplyMessageRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/sendMessageResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - message
  /message/send:
    post:
      description: sends new message to destination provided
      operationId: sendNewMessage
      parameters:
      - description: Params for sending new message
        in: body
        name: params
        schema:
          $ref: '#/definitions/SendNewMessageRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/sendMessageResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - message
  /message/services:
    get:
      description: returns list of registered service names
      operationId: services
      responses:
        "200":
          $ref: '#/responses/registeredServicesResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - message
      - http-over-didcomm
  /message/unregister-service:
    post:
      description: unregisters given message service handler registrar
      operationId: unregisterMsgSvc
      parameters:
      - description: Params for unregistering a message service
        in: body
        name: params
        schema:
          $ref: '#/definitions/UnregisterMsgSvcRequest'
        x-go-name: Params
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - message
      - http-over-didcomm
  /outofband/{piid}/action-continue:
    post:
      operationId: outofbandActionContinue
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: query
        name: label
        type: string
        x-go-name: Label
      - in: query
        name: router_connections
        type: string
        x-go-name: RouterConnections
      responses:
        "200":
          $ref: '#/responses/outofbandActionContinueResponse'
      tags:
      - outofband
  /outofband/{piid}/action-stop:
    post:
      operationId: outofbandActionStop
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason why action is declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      responses:
        "200":
          $ref: '#/responses/outofbandActionStopResponse'
      tags:
      - outofband
  /outofband/2.0/accept-invitation:
    post:
      operationId: outofbandV2AcceptInvitation
      responses:
        "200":
          $ref: '#/responses/outofbandV2AcceptInvitationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts an invitation.
      tags:
      - outofbandv2
  /outofband/2.0/create-invitation:
    post:
      operationId: outofbandV2CreateInvitation
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CreateInvitationRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/outofbandV2CreateInvitationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Creates an invitation.
      tags:
      - outofbandv2
  /outofband/accept-invitation:
    post:
      operationId: outofbandAcceptInvitation
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/AcceptInvitationRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/outofbandAcceptInvitationResponse'
      tags:
      - outofband
  /outofband/actions:
    get:
      operationId: outofbandActions
      parameters:
      - format: int32
        in: query
        name: page
        type: integer
        x-go-name: Page
      - format: int32
        in: query
        name: pageSize
        type: integer
        x-go-name: PageSize
      responses:
        "200":
          $ref: '#/responses/outofbandActionsResponse'
      tags:
      - outofband
  /outofband/create-invitation:
    post:
      operationId: outofbandCreateInvitation
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CreateInvitationRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/outofbandCreateInvitationResponse'
      tags:
      - outofband
  /presentproof/{piid}/accept-presentation:
    post:
      operationId: presentProofAcceptPresentation
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - $ref: '#/definitions/AcceptPresentationBody'
        in: query
        name: body
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofAcceptPresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a presentation.
      tags:
      - present-proof
  /presentproof/{piid}/accept-problem-report:
    post:
      description: AcceptProblemReport is used for accepting problem report.
      operationId: presentProofAcceptProblemReport
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      responses:
        "200":
          $ref: '#/responses/presentProofAcceptProblemReportResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a problem report.
      tags:
      - present-proof
  /presentproof/{piid}/accept-propose-presentation:
    post:
      description: Accepts a propose presentation.
      operationId: presentProofAcceptProposePresentation
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AcceptProposePresentationBody'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofAcceptProposePresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: AcceptProposePresentation is used when the Verifier is willing to accept
        the propose presentation.
      tags:
      - present-proof
  /presentproof/{piid}/accept-request-presentation:
    post:
      operationId: presentProofAcceptRequestPresentation
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: presentation
        required: true
        schema:
          $ref: '#/definitions/PresentationV2'
        x-go-name: Presentation
      responses:
        "200":
          $ref: '#/responses/presentProofAcceptRequestPresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a request presentation.
      tags:
      - present-proof
  /presentproof/{piid}/decline-presentation:
    post:
      operationId: presentProofDeclinePresentation
      responses:
        "200":
          $ref: '#/responses/presentProofDeclinePresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines a presentation.
      tags:
      - present-proof
  /presentproof/{piid}/decline-propose-presentation:
    post:
      operationId: presentProofDeclineProposePresentation
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason why proposal is declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      - description: |-
          RedirectURL is optional web redirect URL that can be sent to prover.
          Useful in cases where verifier would want prover to redirect after its proposal gets declined.
        in: query
        name: redirectURL
        type: string
        x-go-name: RedirectURL
      responses:
        "200":
          $ref: '#/responses/presentProofDeclineProposePresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines a propose presentation.
      tags:
      - present-proof
  /presentproof/{piid}/decline-request-presentation:
    post:
      operationId: presentProofDeclineRequestPresentation
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - description: Reason is an explanation of why it was declined
        in: query
        name: reason
        type: string
        x-go-name: Reason
      responses:
        "200":
          $ref: '#/responses/presentProofDeclineRequestPresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Declines a request presentation.
      tags:
      - present-proof
  /presentproof/{piid}/negotiate-request-presentation:
    post:
      operationId: presentProofNegotiateRequestPresentation
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/NegotiateRequestPresentationV2Body'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofNegotiateRequestPresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Is used by the Prover to counter a presentation request they received
        with a proposal.
      tags:
      - present-proof
  /presentproof/actions:
    get:
      operationId: presentProofActions
      responses:
        "200":
          $ref: '#/responses/presentProofActionsResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Returns pending actions that have not yet to be executed or cancelled.
      tags:
      - present-proof
  /presentproof/send-propose-presentation:
    post:
      operationId: presentProofSendProposePresentation
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/PresentProofSendProposePresentationRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofSendProposePresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a propose presentation.
      tags:
      - present-proof
  /presentproof/send-request-presentation:
    post:
      operationId: presentProofSendRequestPresentation
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/PresentProofSendRequestPresentationV2Request'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofSendRequestPresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a request presentation.
      tags:
      - present-proof
  /presentproof/v3/{piid}/accept-propose-presentation:
    post:
      operationId: presentProofAcceptProposePresentationV3
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AcceptProposePresentationV3Body'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofAcceptProposePresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a propose presentation.
      tags:
      - present-proof
  /presentproof/v3/{piid}/accept-request-presentation:
    post:
      operationId: presentProofAcceptRequestPresentationV3
      parameters:
      - description: |-
          PIID Protocol instance ID
          Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: presentation
        required: true
        schema:
          $ref: '#/definitions/PresentationV3'
        x-go-name: Presentation
      responses:
        "200":
          $ref: '#/responses/presentProofAcceptRequestPresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Accepts a request presentation.
      tags:
      - present-proof
  /presentproof/v3/{piid}/negotiate-request-presentation:
    post:
      operationId: presentProofNegotiateRequestPresentationV3
      parameters:
      - description: Protocol instance ID
        in: path
        name: piid
        required: true
        type: string
        x-go-name: Piid
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/NegotiateRequestPresentationV3Body'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofNegotiateRequestPresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Is used by the Prover to counter a presentation request they received
        with a proposal.
      tags:
      - present-proof
  /presentproof/v3/send-propose-presentation:
    post:
      operationId: presentProofSendProposePresentationV3
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/PresentProofSendProposePresentationV3Request'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofSendProposePresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a propose presentation.
      tags:
      - present-proof
  /presentproof/v3/send-request-presentation:
    post:
      operationId: presentProofSendRequestPresentationV3
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/PresentProofSendRequestPresentationV3Request'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentProofSendRequestPresentationResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Sends a request presentation.
      tags:
      - present-proof
  /rfc0593/get-spec:
    post:
      operationId: getCredentialSpecRequest
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/GetCredentialSpecRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/getCredentialSpecResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Extracts an RFC0593 credential spec from an applicable issue-credential
        message.
      tags:
      - get-spec
  /rfc0593/issue-credential:
    post:
      operationId: issueCredentialRequest
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IssueCredentialRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/issueCredentialResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Issues a credential based on a RFC0593 credential spec.
      tags:
      - issue-credential
  /rfc0593/verify-credential:
    post:
      operationId: verifyCredentialRequest
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/VerifyCredentialRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/verifyCredentialResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Verifies a credential against a credential spec.
      tags:
      - verify-credential
  /vcwallet/add:
    post:
      description: |-
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Collection
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Credential
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#DIDResolutionResponse
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#meta-data
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#connection
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Key
      operationId: addContentReq
      parameters:
      - description: Params for adding content to wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/AddContentRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/emptyRes'
        default:
          $ref: '#/responses/genericError'
      summary: 'Supported data models:'
      tags:
      - vcwallet
  /vcwallet/close:
    post:
      description: returns response containing bool flag false if token is not found
        or already expired for this wallet user.
      operationId: lockWalletReq
      parameters:
      - description: Params for locking wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/LockWalletRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/lockWalletRes'
        default:
          $ref: '#/responses/genericError'
      summary: Expires token issued to this VC wallet, removes wallet's key manager
        instance and closes wallet content store.
      tags:
      - vcwallet
  /vcwallet/connect:
    post:
      operationId: connectReq
      parameters:
      - description: Params for connecting to wallet for DIDComm.
        in: body
        name: params
        schema:
          $ref: '#/definitions/ConnectRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/connectRes'
        default:
          $ref: '#/responses/genericError'
      summary: accepts out-of-band invitations and performs DID exchange.
      tags:
      - vcwallet
  /vcwallet/create-key-pair:
    post:
      operationId: createKeyPairReq
      parameters:
      - description: Params for creating key pair from wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/CreateKeyPairRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/createKeyPairRes'
        default:
          $ref: '#/responses/genericError'
      summary: creates a new key pair from wallet.
      tags:
      - vcwallet
  /vcwallet/create-profile:
    post:
      operationId: createProfileRequest
      parameters:
      - description: Params for creating new wallet profile.
        in: body
        name: params
        schema:
          $ref: '#/definitions/CreateOrUpdateProfileRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/createProfileRes'
      tags:
      - vcwallet
  /vcwallet/derive:
    post:
      description: https://w3c-ccg.github.io/universal-wallet-interop-spec/#derive
      operationId: deriveReq
      parameters:
      - description: Params for deriving a credential from wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/DeriveRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/deriveRes'
        default:
          $ref: '#/responses/genericError'
      summary: derives a Verifiable Credential.
      tags:
      - vcwallet
  /vcwallet/get:
    get:
      description: |-
        Supported data models:
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Collection
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Credential
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#DIDResolutionResponse
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#meta-data
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#connection
      operationId: getContentReq
      parameters:
      - description: Params for getting content from wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/GetContentRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/getContentRes'
        default:
          $ref: '#/responses/genericError'
      summary: |-
        changed POST to GET
        gets content from wallet content store.
      tags:
      - vcwallet
  /vcwallet/getall:
    get:
      description: |-
        gets all contents from wallet content store for given content type.

        Supported data models:
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Collection
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Credential
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#DIDResolutionResponse
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#meta-data
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#connection
      operationId: getAllContentReq
      parameters:
      - description: Params for getting all contents from wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/GetAllContentRequest'
        x-go-name: Params
      - format: int32
        in: query
        name: page
        type: integer
        x-go-name: Page
      - format: int32
        in: query
        name: pageSize
        type: integer
        x-go-name: PageSize
      responses:
        "200":
          $ref: '#/responses/getAllContentRes'
        default:
          $ref: '#/responses/genericError'
      summary: changed POST to GET
      tags:
      - vcwallet
  /vcwallet/issue:
    post:
      description: https://w3c-ccg.github.io/universal-wallet-interop-spec/#issue
      operationId: issueReq
      parameters:
      - in: body
        name: params
        schema:
          $ref: '#/definitions/IssueRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/issueRes'
        default:
          $ref: '#/responses/genericError'
      summary: adds proof to a Verifiable Credential.
      tags:
      - vcwallet
  /vcwallet/open:
    post:
      description: |-
        Unlocks given wallet's key manager instance & content store and
        returns a authorization token to be used for performing wallet operations.
      operationId: unlockWalletReq
      parameters:
      - description: Params for unlocking wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/UnlockWalletRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/unlockWalletRes'
        default:
          $ref: '#/responses/genericError'
      tags:
      - vcwallet
  /vcwallet/present-proof:
    post:
      description: |-
        Currently Supporting
        [0454-present-proof-v2](https://github.com/hyperledger/aries-rfcs/tree/master/features/0454-present-proof-v2)
      operationId: presentProofReq
      parameters:
      - description: Params for accepting presentation request and sending present
          proof message to relying party.
        in: body
        name: params
        schema:
          $ref: '#/definitions/PresentProofRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/presentProofRes'
        default:
          $ref: '#/responses/genericError'
      summary: |-
        sends message present proof message from wallet to relying party.
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#presentproof
      tags:
      - vcwallet
  /vcwallet/profile/{id}:
    get:
      operationId: checkProfile
      parameters:
      - description: Wallet User's ID used to create profile.
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/emptyRes'
      tags:
      - vcwallet
  /vcwallet/propose-credential:
    post:
      description: |-
        Currently Supporting : 0453-issueCredentialV2
        https://github.com/hyperledger/aries-rfcs/blob/main/features/0453-issue-credential-v2/README.md
      operationId: proposeCredReq
      parameters:
      - description: Params for proposing credential from wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/ProposeCredentialRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/proposeCredRes'
        default:
          $ref: '#/responses/genericError'
      summary: |-
        Sends propose credential message from wallet to issuer and optionally waits for offer credential response.
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#proposecredential
      tags:
      - vcwallet
  /vcwallet/propose-presentation:
    post:
      description: |-
        Currently Supporting
        [0454-present-proof-v2](https://github.com/hyperledger/aries-rfcs/tree/master/features/0454-present-proof-v2)
      operationId: proposePresReq
      parameters:
      - description: Params for proposing presentation from wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/ProposePresentationRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/proposePresRes'
        default:
          $ref: '#/responses/genericError'
      summary: |-
        accepts out-of-band invitation and sends message proposing presentation
        from wallet to relying party.
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#proposepresentation
      tags:
      - vcwallet
  /vcwallet/prove:
    post:
      description: https://w3c-ccg.github.io/universal-wallet-interop-spec/#prove
      operationId: proveReq
      parameters:
      - description: Params for producing verifiable presentation from wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/ProveRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/proveRes'
        default:
          $ref: '#/responses/genericError'
      summary: produces a Verifiable Presentation.
      tags:
      - vcwallet
  /vcwallet/query:
    get:
      description: |-
        This function may return multiple presentations as a result based on combination of query types used.

        https://w3c-ccg.github.io/universal-wallet-interop-spec/#query

        Supported Query Types:
        https://www.w3.org/TR/json-ld11-framing
        https://identity.foundation/presentation-exchange
        https://w3c-ccg.github.io/vp-request-spec/#query-by-example
        https://w3c-ccg.github.io/vp-request-spec/#did-authentication-request
      operationId: contentQueryReq
      parameters:
      - in: body
        name: params
        schema:
          $ref: '#/definitions/ContentQueryRequest'
        x-go-name: Params
      - format: int32
        in: query
        name: page
        type: integer
        x-go-name: Page
      - format: int32
        in: query
        name: pageSize
        type: integer
        x-go-name: PageSize
      responses:
        "200":
          $ref: '#/responses/contentQueryRes'
        default:
          $ref: '#/responses/genericError'
      summary: runs query against wallet credential contents and returns presentation
        containing credential results.
      tags:
      - vcwallet
  /vcwallet/remove:
    post:
      description: |-
        Supported data models:
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Collection
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#Credential
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#DIDResolutionResponse
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#meta-data
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#connection
      operationId: removeContentReq
      parameters:
      - description: Params for removing content from wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/RemoveContentRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/emptyRes'
        default:
          $ref: '#/responses/genericError'
      summary: removes given content from wallet content store.
      tags:
      - vcwallet
  /vcwallet/request-credential:
    post:
      description: |-
        Currently Supporting : 0453-issueCredentialV2
        https://github.com/hyperledger/aries-rfcs/blob/main/features/0453-issue-credential-v2/README.md
      operationId: requestCredReq
      parameters:
      - description: Params for sending request credential message from wallet and
          optionally wait for credential fulfillment.
        in: body
        name: params
        schema:
          $ref: '#/definitions/RequestCredentialRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/requestCredRes'
        default:
          $ref: '#/responses/genericError'
      summary: |-
        Sends request credential message from wallet to issuer and optionally waits for credential fulfillment.
        https://w3c-ccg.github.io/universal-wallet-interop-spec/#requestcredential
      tags:
      - vcwallet
  /vcwallet/resolve-credential-manifest:
    post:
      description: 'Supports: https://identity.foundation/credential-manifest/'
      operationId: resolveCredManifest
      responses:
        "200":
          $ref: '#/responses/resolveCredManifest'
        default:
          $ref: '#/responses/genericError'
      summary: Resolves given credential manifest by credential fulfillment or credential.
      tags:
      - vcwallet
  /vcwallet/update-profile:
    post:
      description: |-
        you might lose your existing keys if you change kms options.
        you might lose your existing wallet contents if you change storage/EDV options
        (ex: switching context storage provider or changing EDV settings).
      operationId: UpdateProfileRequest
      responses:
        "200":
          $ref: '#/responses/updateProfileRes'
      summary: 'Caution:'
      tags:
      - vcwallet
  /vcwallet/verify:
    post:
      description: https://w3c-ccg.github.io/universal-wallet-interop-spec/#prove
      operationId: verifyReq
      parameters:
      - description: Params for producing verifying a credential or presentation from
          wallet.
        in: body
        name: params
        schema:
          $ref: '#/definitions/VerifyRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/verifyRes'
        default:
          $ref: '#/responses/genericError'
      summary: verifies a Verifiable Credential or a Verifiable Presentation.
      tags:
      - vcwallet
  /vdr/did:
    post:
      operationId: saveDIDReq
      parameters:
      - description: Params for creating the did document
        in: body
        name: params
        schema:
          $ref: '#/definitions/CreateDIDRequest'
        x-go-name: Params
      responses:
        default:
          $ref: '#/responses/genericError'
      summary: Saves a did document with the friendly name.
      tags:
      - vdr
  /vdr/did/{id}:
    get:
      operationId: getDIDReq
      parameters:
      - description: DID ID - pass the did
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/documentRes'
        default:
          $ref: '#/responses/genericError'
      summary: Gets did document with the friendly name.
      tags:
      - vdr
  /vdr/did/create:
    post:
      operationId: createDIDReq
      responses:
        "200":
          $ref: '#/responses/documentRes'
        default:
          $ref: '#/responses/genericError'
      summary: Create a did document.
      tags:
      - vdr
  /vdr/did/records:
    get:
      description: Retrieves the did records
      operationId: getDIDRecords
      parameters:
      - format: int32
        in: query
        name: page
        type: integer
        x-go-name: Page
      - format: int32
        in: query
        name: pageSize
        type: integer
        x-go-name: PageSize
      responses:
        "200":
          $ref: '#/responses/didRecordResult'
        default:
          $ref: '#/responses/genericError'
      tags:
      - vdr
  /vdr/did/resolve/{id}:
    get:
      description: Resolve did
      operationId: resolveDIDReq
      parameters:
      - description: DID ID - pass the did
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/resolveDIDRes'
        default:
          $ref: '#/responses/genericError'
      tags:
      - vdr
  /verifiable/credential:
    post:
      operationId: saveCredentialReq
      parameters:
      - description: Params for saving the verifiable credential (pass the vc document
          as a string)
        in: body
        name: credential
        schema:
          $ref: '#/definitions/VerifiableCredential'
        x-go-name: Credential
      responses:
        "200":
          $ref: '#/responses/emptyRes'
        default:
          $ref: '#/responses/genericError'
      summary: Saves the verifiable credential.
      tags:
      - verifiable
  /verifiable/credential/{id}:
    get:
      operationId: getCredentialReq
      parameters:
      - description: VC ID - pass base64 version of the ID
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/credentialRes'
        default:
          $ref: '#/responses/genericError'
      summary: Retrieves the verifiable credential.
      tags:
      - verifiable
  /verifiable/credential/name/{name}:
    get:
      operationId: getCredentialByNameReq
      parameters:
      - description: VC Name
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/credentialRecord'
        default:
          $ref: '#/responses/genericError'
      summary: Retrieves the verifiable credential by name.
      tags:
      - verifiable
  /verifiable/credential/remove/name/{name}:
    post:
      operationId: removeCredentialByNameReq
      parameters:
      - description: VC Name
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/emptyResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Removes a verifiable credential by name.
      tags:
      - verifiable
  /verifiable/credential/validate:
    post:
      operationId: validateCredentialReq
      parameters:
      - description: Params for validating the verifiable credential (pass the vc
          document as a string)
        in: body
        name: credential
        schema:
          $ref: '#/definitions/VerifiableCredential'
        x-go-name: Credential
      responses:
        "200":
          $ref: '#/responses/emptyRes'
        default:
          $ref: '#/responses/genericError'
      summary: Validates the verifiable credential.
      tags:
      - verifiable
  /verifiable/credentials:
    get:
      operationId: getCredentials
      parameters:
      - format: int32
        in: query
        name: page
        type: integer
        x-go-name: Page
      - format: int32
        in: query
        name: pageSize
        type: integer
        x-go-name: PageSize
      responses:
        "200":
          $ref: '#/responses/credentialRecordResult'
        default:
          $ref: '#/responses/genericError'
      summary: Retrieves the verifiable credentials.
      tags:
      - verifiable
  /verifiable/derivecredential:
    post:
      operationId: deriveCredentialReq
      parameters:
      - description: Params for deriving a credential
        in: body
        name: body
        schema:
          $ref: '#/definitions/DeriveCredentialRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/deriveCredentialRes'
        default:
          $ref: '#/responses/genericError'
      summary: Derives a given verifiable credential for selective disclosure.
      tags:
      - verifiable
  /verifiable/presentation:
    post:
      operationId: savePresentationReq
      parameters:
      - description: Params for saving the verifiable presentation
        in: body
        name: credential
        schema:
          $ref: '#/definitions/VerifiablePresentation'
        x-go-name: Credential
      responses:
        "200":
          $ref: '#/responses/emptyRes'
        default:
          $ref: '#/responses/genericError'
      summary: Saves the verifiable presentation.
      tags:
      - verifiable
  /verifiable/presentation/{id}:
    get:
      operationId: getPresentationReq
      parameters:
      - description: VP ID - pass base64 version of the ID
        in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/presentationRes'
        default:
          $ref: '#/responses/genericError'
      summary: Retrieves the verifiable presentation.
      tags:
      - verifiable
  /verifiable/presentation/generate:
    post:
      operationId: generatePresentationReq
      parameters:
      - description: Params for generating the verifiable presentation (pass the vc
          document as a raw JSON)
        in: body
        name: body
        schema:
          $ref: '#/definitions/PresentationRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/presentationRes'
        default:
          $ref: '#/responses/genericError'
      summary: Generates the verifiable presentation from a verifiable credential.
      tags:
      - verifiable
  /verifiable/presentation/generatebyid:
    post:
      operationId: generatePresentationByIDReq
      parameters:
      - description: Params for generating the verifiable presentation by id (pass
          the vc document as a raw JSON)
        in: body
        name: params
        schema:
          $ref: '#/definitions/PresentationRequestByID'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/presentationRes'
        default:
          $ref: '#/responses/genericError'
      summary: Generates the verifiable presentation from a stored verifiable credential.
      tags:
      - verifiable
  /verifiable/presentation/remove/name/{name}:
    post:
      operationId: removePresentationByNameReq
      parameters:
      - description: VC Name
        in: path
        name: name
        required: true
        type: string
        x-go-name: Name
      responses:
        "200":
          $ref: '#/responses/emptyResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Removes a verifiable presentation by name.
      tags:
      - verifiable
  /verifiable/presentations:
    get:
      operationId: verifiable
      responses:
        "200":
          $ref: '#/responses/presentationRecordResult'
        default:
          $ref: '#/responses/genericError'
      summary: Retrieves the verifiable credentials.
  /verifiable/signcredential:
    post:
      operationId: signCredentialReq
      parameters:
      - description: Params for signing a credential
        in: body
        name: params
        schema:
          $ref: '#/definitions/SignCredentialRequest'
        x-go-name: Params
      responses:
        "200":
          $ref: '#/responses/signCredentialRes'
        default:
          $ref: '#/responses/genericError'
      summary: Signs given credential.
      tags:
      - verifiable
responses:
  acceptExchangeResponse:
    description: |-
      acceptExchangeResult model

      This is used for returning response for accept exchange request
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ExchangeResponse'
  acceptInvitationResponse:
    description: This is used for returning a accept invitation response for single
      invitation
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/AcceptInvitationResponse'
  batchPickupResponse:
    description: |-
      docBatchPickupResponse model

      Response from router after pending messages dispatched for given connection.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/BatchPickupResponse'
  connectRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ConnectResponse'
  contentQueryRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ContentQueryResponse'
  createConnectionResp:
    description: |-
      createConnectionResp model

      This is used as the response model for save connection api.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ConnectionID'
  createConnectionV2Response:
    description: |-
      CreateConnectionV2Response model

      response of create didcomm v2 connection action
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/IDMessage'
  createInvitationResponse:
    description: This is used for returning a create invitation response with a single
      connection invitation as body
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/CreateInvitationResponse'
  createKeyPairRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/CreateKeyPairResponse'
  createKeySetRes:
    description: |-
      CreateKeySetResponse for returning key pair.
      This is used for returning the create set response
    headers:
      publicKey:
        description: public key base64 encoded
        type: string
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  credentialRecord:
    description: |-
      CredentialRecord model

      This is used to return credential record.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/Record'
  credentialRecordResult:
    description: |-
      CredentialRecordResult model

      This is used to return credential records.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      total_records:
        format: int64
        type: integer
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
      items:
        $ref: '#/definitions/Record'
      type: array
  credentialRes:
    description: |-
      CredentialRes model

      This is used for returning query connection result for single record search
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/VerifiablePresentation'
  deriveCredentialRes:
    description: |-
      DeriveCredentialRes model

      This is used for returning the derive credential response.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/VerifiableCredential'
  deriveRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/DeriveResponse'
  didRecordResult:
    description: |-
      DidRecordResult model

      This is used to return did records.

      GetDIDRecords retrieves the did doc containing name and didID. //TODO Add pagination feature #1566.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      total_records:
        format: int64
        type: integer
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
      items:
        $ref: '#/definitions/Record'
      type: array
  docResResponse:
    description: |-
      docResolutionResponse model

      This is used for returning DID document resolution response.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/DocResolution'
  documentRes:
    description: |-
      DocumentRes model

      This is used for returning query connection result for single record search
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
      items:
        format: uint8
        type: integer
      type: array
  emptyResponse:
    description: EmptyResponse model
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/Empty'
  genericError:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/GenericError'
  getAllContentRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/GetAllContentResponse'
  getAllRemoteProvidersResp:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/GetAllRemoteProvidersResponse'
  getConnectionsResponse:
    description: |-
      docConnectionsResponse model

      Represents a Connections response message
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ConnectionsResponse'
  getContentRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/GetContentResponse'
  getCredentialSpecResponse:
    description: docGetCredentialSpecResponse model
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/GetCredentialSpecResponse'
  implicitInvitationResponse:
    description: This is used for returning create implicit invitation response
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ImplicitInvitationResponse'
  introduceAcceptProblemReportResponse:
    description: |-
      IntroduceAcceptProblemReportResponse model

      Represents a AcceptProblemReport response message
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  introduceAcceptProposalResponse:
    description: |-
      IntroduceAcceptProposalResponse model

      Represents a AcceptProposal response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  introduceAcceptProposalWithOOBResponse:
    description: |-
      IntroduceAcceptProposalWithOOBResponse model

      Represents a AcceptProposalWithOOBInvitation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  introduceAcceptRequestWithPublicOOBInvitationResponse:
    description: |-
      IntroduceAcceptRequestWithPublicOOBInvitationResponse model

      Represents a AcceptRequestWithPublicOOBInvitation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  introduceAcceptRequestWithRecipientsResponse:
    description: |-
      IntroduceAcceptRequestWithRecipientsResponse model

      Represents a AcceptRequestWithRecipients response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  introduceActionsResponse:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/IntroduceActionsResponse'
  introduceDeclineProposalResponse:
    description: |-
      IntroduceDeclineProposalResponse model

      Represents a DeclineProposal response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  introduceDeclineResponse:
    description: |-
      IntroduceDeclineResponse model

      Represents a DeclineRequest response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  introduceSendProposalResponse:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/IntroduceSendProposalResponse'
  introduceSendProposalWithOOBInvitationResponse:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/IntroduceSendProposalWithOOBInvitationResponse'
  introduceSendResponse:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/IntroduceSendResponse'
  issueCredentialAcceptCredentialResponse:
    description: |-
      IssueCredentialAcceptCredentialResponse model

      Represents a AcceptCredential response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialAcceptProblemReportResponse:
    description: |-
      IssueCredentialAcceptProblemReportResponse model

      Represents a AcceptProblemReport response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialAcceptProposalResponse:
    description: |-
      AcceptProposalResponse model

      Represents a AcceptProposal response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialAcceptRequestResponse:
    description: |-
      IssueCredentialAcceptRequestResponse model

      Represents a AcceptRequest response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialActionsResponse:
    description: |-
      IssueCredentialActionsResponse model

      Represents Actions response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/IssueCredentialActionsBody'
  issueCredentialDeclineCredentialResponse:
    description: |-
      IssueCredentialDeclineCredentialResponse model

      Represents a DeclineCredential response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialDeclineOfferResponse:
    description: |-
      IssueCredentialDeclineOfferResponse model

      Represents a DeclineOffer response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialDeclineProposalResponse:
    description: |-
      IssueCredentialDeclineProposalResponse model

      Represents a DeclineProposal response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialDeclineRequestResponse:
    description: |-
      IssueCredentialDeclineRequestResponse model

      Represents a DeclineRequest response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialNegotiateProposalResponse:
    description: |-
      IssueCredentialNegotiateProposalResponse model

      Represents a NegotiateProposal response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialResponse:
    description: docIssueCredentialResponse model
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/IssueCredentialResponse'
  issueCredentialSendOfferResponse:
    description: |-
      IssueCredentialSendOfferResponse model

      Represents a SendOffer response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialSendProposalResponse:
    description: |-
      IssueCredentialSendProposalResponse model

      Represents a SendProposal response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueCredentialSendRequestResponse:
    description: |-
      IssueCredentialSendRequestResponse model

      Represents a SendRequest response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  issueRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/IssueResponse'
  lockWalletRes:
    description: LockWalletResponse contains response for wallet lock operation.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  outofbandAcceptInvitationResponse:
    description: ""
    headers:
      body: {}
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/AcceptInvitationResponse'
  outofbandActionContinueResponse:
    description: |-
      ActionContinueResponse model

      Represents a ActionContinue response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  outofbandActionStopResponse:
    description: |-
      ActionStopResponse model

      Represents a ActionStop response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  outofbandActionsResponse:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ActionsResponse'
  outofbandCreateInvitationResponse:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/CreateInvitationResponse'
  presentProofAcceptPresentationResponse:
    description: |-
      PresentProofAcceptPresentationResponse model

      Represents a AcceptPresentation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  presentProofAcceptProblemReportResponse:
    description: |-
      PresentProofAcceptProblemReportResponse model

      Represents a AcceptProblemReport response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  presentProofAcceptProposePresentationResponse:
    description: |-
      PresentProofAcceptProposePresentationResponse model

      Represents a AcceptProposePresentation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  presentProofAcceptRequestPresentationResponse:
    description: |-
      PresentProofAcceptRequestPresentationResponse model

      Represents a AcceptRequestPresentation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  presentProofActionsResponse:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/PresentProofActionsResponse'
  presentProofDeclineProposePresentationResponse:
    description: |-
      PresentProofDeclineProposePresentationResponse model

      Represents a DeclineProposePresentation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  presentProofDeclineRequestPresentationResponse:
    description: |-
      PresentProofDeclineRequestPresentationResponse model

      Represents a DeclineRequestPresentation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  presentProofNegotiateRequestPresentationResponse:
    description: |-
      PresentProofNegotiateRequestPresentationResponse model

      Represents a NegotiateRequestPresentation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  presentProofRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/PresentProofResponse'
  presentProofSendProposePresentationResponse:
    description: |-
      docPresentProofSendProposePresentationResponse model

      Represents a SendProposePresentation response message.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/PresentProofSendRequestPresentationResponse'
  presentationRecordResult:
    description: |-
      presentationRecordResult model

      This is used to return presentation records.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
      items:
        $ref: '#/definitions/Record'
      type: array
  presentationRes:
    description: |-
      PresentationRes model

      This is used for returning the verifiable presentation
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/VerifiablePresentation'
  proposeCredRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ProposeCredentialResponse'
  proposePresRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ProposePresentationResponse'
  proveRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ProveResponse'
  queryConnectionResponse:
    description: This is used for returning query connection result for single record
      search
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/QueryConnectionResponse'
  queryConnectionsResponse:
    description: ""
    headers:
      body: {}
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/QueryConnectionsResponse'
  receiveInvitationResponse:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ReceiveInvitationResponse'
  registerRouteRes:
    description: RegisterRouteRes model
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  registeredServicesResponse:
    description: RegisteredServicesResponse is for returning list of registered service
      names.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
      items:
        type: string
      type: array
  removeConnectionResponse:
    description: response of remove connection action
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  requestCredRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/RequestCredentialResponse'
  resolveCredManifestRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/ResolveCredentialManifestResponse'
  resolveDIDRes:
    description: |-
      ResolveDIDRes model

      This is used for returning DID resolution response.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
      items:
        format: uint8
        type: integer
      type: array
  rotateDIDResponse:
    description: |-
      RotateDIDResponse response from a DID rotation call, with the new DID that the connection was rotated to.

      response of rotate DID action
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/RotateDIDResponse'
  sendMessageResponse:
    description: |-
      SendMessageResponse is response for send/reply message feature.
      Response of send/reply message features.
      Usually contains reply for the message sent if await reply feature is used.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
      items:
        format: uint8
        type: integer
      type: array
  signCredentialRes:
    description: |-
      SignCredentialRes model

      This is used for returning the sign credential response
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/VerifiableCredential'
  statusResponse:
    description: |-
      docStatusResponse model

      Response containing details of pending messages for given connection.
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/StatusResponse'
  unlockWalletRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/UnlockWalletResponse'
  unregisterRouteRes:
    description: UnregisterRouteRes model
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  verifyCredentialResponse:
    description: VerifyCredentialResponse model
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/MessageState'
  verifyRes:
    description: ""
    headers:
      sizeCache:
        format: int32
        type: integer
      state: {}
      unknownFields:
        items:
          format: uint8
          type: integer
        type: array
    schema:
      $ref: '#/definitions/VerifyResponse'
swagger: "2.0"
