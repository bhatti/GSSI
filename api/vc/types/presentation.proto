syntax = "proto3";

package api.vc.types;

option go_package = "github.com/bhatti/GSSI/api/vc/types";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "api/vc/types/common.proto";
import "api/vc/types/credential.proto";

// PresentationOptions for verifiable credentials
message PresentationOptions {
  // The type of the proof. Default is an appropriate proof type corresponding to the verification method.
  string type = 1;
  // The URI of the verificationMethod used for the proof. If omitted, a default verification method will be used.
  string verificationMethod = 2;
  // The purpose of the proof. Default 'assertionMethod'.
  string proofPurpose = 3;
  // A challenge provided by the requesting party of the proof. For example 6e62f66e-67de-11eb-b490-ef3eeefa55f2
  string challenge = 4;
  //     The intended domain of validity for the proof. For example website.example
  string domain = 5;
  // The created string
  google.protobuf.Timestamp created = 6;
}


// VerifiablePresentation - Verifies a Presentation with or without proofs attached
// A verifiable presentation expresses data from one or more verifiable credentials, and
// is packaged in such a way that the authorship of the data is verifiable. If verifiable
// credentials are presented directly, they become verifiable presentations. Data formats derived
// from verifiable credentials that are cryptographically verifiable, but do not of themselves
// contain verifiable credentials, might also be verifiable presentations.
// VerifiablePresentation = Presentation metadata + VerifiableCredentials + Proofs
message VerifiablePresentation {
  // The ID of the presentation.
  string id = 1;
  // The JSON-LD context of the credential. Each item in the @context array MUST be a string.
  repeated string context = 2;
  repeated google.protobuf.Any customContext = 3; // could be stirng
  // The JSON-LD type of the credential. Each item in the type array MUST be a string.
  repeated string type = 4;
  // The holder - will be ignored if no proof is present since there is no proof of authority over the credentials.
  // The holder object MUST be The holder - will be ignored if no proof is present since there is no proof of authority
  // over the credentials (an object)
  // The JSON-LD type of the credential. Each item in the type array MUST be a string.
  // The holder - will be ignored if no proof is present since there is no proof of authority over the credentials.
  // The holder object MUST be The holder - will be ignored if no proof is present since there is no proof of authority
  // over the credentials (an object)
  google.protobuf.Any holder = 5; // could be stirng

  // The Verifiable Credentials Each item in the verifiableCredential array MUST be an object of the following form:
  repeated VerifiableCredential verifiableCredential = 6; // also referred as credentials

  // A JSON-LD Linked Data proof.
  repeated CredentialProof proofs = 7;

  map<string, google.protobuf.Any> customFields = 8;

  string name = 9; // non-standard
}


// RefreshableVerifiablePresentation for verifiable presentation
message RefreshableVerifiablePresentation {
  // The ID of the presentation.
  string id = 1;
  // The JSON-LD context of the credential. Each item in the @context array MUST be a string.
  repeated string context = 2;
  repeated google.protobuf.Any customContext = 3; // could be stirng
  // The JSON-LD type of the credential. Each item in the type array MUST be a string.
  repeated string type = 4;
  // The holder - will be ignored if no proof is present since there is no proof of authority over the credentials.
  // The holder object MUST be The holder - will be ignored if no proof is present since there is no proof of authority
  // over the credentials (an object)
  // The JSON-LD type of the credential. Each item in the type array MUST be a string.
  // The holder - will be ignored if no proof is present since there is no proof of authority over the credentials.
  // The holder object MUST be The holder - will be ignored if no proof is present since there is no proof of authority
  // over the credentials (an object)
  google.protobuf.Any holder = 5; // could be stirng

  // The Verifiable Credentials Each item in the verifiableCredential array MUST be an object of the following form:
  repeated VerifiableCredential verifiableCredential = 6; // also referred as credentials

  // A JSON-LD Linked Data proof.
  repeated CredentialProof proofs = 7;

  map<string, google.protobuf.Any> customFields = 8;

  string name = 9; // non-standard
  // RefreshService
  RefreshService refreshService = 10;
}

