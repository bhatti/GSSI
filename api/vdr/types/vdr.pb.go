// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: api/vdr/types/vdr.proto

package types

import (
	types "github.com/bhatti/GSSI/api/spi/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Document is model for did document.
type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	DocumentURL string `protobuf:"bytes,2,opt,name=documentURL,proto3" json:"documentURL,omitempty"`
	Did         []byte `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"` // json.RawMessage
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_vdr_types_vdr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_api_vdr_types_vdr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_api_vdr_types_vdr_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Document) GetDocumentURL() string {
	if x != nil {
		return x.DocumentURL
	}
	return ""
}

func (x *Document) GetDid() []byte {
	if x != nil {
		return x.Did
	}
	return nil
}

// DIDArgs is model for did doc with fields related to command features.
type DIDArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	DocumentURL string `protobuf:"bytes,2,opt,name=documentURL,proto3" json:"documentURL,omitempty"`
	Did         []byte `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"` // json.RawMessage
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DIDArgs) Reset() {
	*x = DIDArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_vdr_types_vdr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DIDArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DIDArgs) ProtoMessage() {}

func (x *DIDArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_vdr_types_vdr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DIDArgs.ProtoReflect.Descriptor instead.
func (*DIDArgs) Descriptor() ([]byte, []int) {
	return file_api_vdr_types_vdr_proto_rawDescGZIP(), []int{1}
}

func (x *DIDArgs) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DIDArgs) GetDocumentURL() string {
	if x != nil {
		return x.DocumentURL
	}
	return ""
}

func (x *DIDArgs) GetDid() []byte {
	if x != nil {
		return x.Did
	}
	return nil
}

func (x *DIDArgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// IDArg model
//
// This is used for querying/removing by did ID from input json.
//
type IDArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DidID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IDArg) Reset() {
	*x = IDArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_vdr_types_vdr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDArg) ProtoMessage() {}

func (x *IDArg) ProtoReflect() protoreflect.Message {
	mi := &file_api_vdr_types_vdr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDArg.ProtoReflect.Descriptor instead.
func (*IDArg) Descriptor() ([]byte, []int) {
	return file_api_vdr_types_vdr_proto_rawDescGZIP(), []int{2}
}

func (x *IDArg) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DIDRecordResult holds the did doc records.
type DIDRecordResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Result
	Result []*types.Record `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *DIDRecordResult) Reset() {
	*x = DIDRecordResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_vdr_types_vdr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DIDRecordResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DIDRecordResult) ProtoMessage() {}

func (x *DIDRecordResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_vdr_types_vdr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DIDRecordResult.ProtoReflect.Descriptor instead.
func (*DIDRecordResult) Descriptor() ([]byte, []int) {
	return file_api_vdr_types_vdr_proto_rawDescGZIP(), []int{3}
}

func (x *DIDRecordResult) GetResult() []*types.Record {
	if x != nil {
		return x.Result
	}
	return nil
}

// NameArg model
//
// This is used for querying by did name from input json.
//
type NameArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NameArg) Reset() {
	*x = NameArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_vdr_types_vdr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameArg) ProtoMessage() {}

func (x *NameArg) ProtoReflect() protoreflect.Message {
	mi := &file_api_vdr_types_vdr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameArg.ProtoReflect.Descriptor instead.
func (*NameArg) Descriptor() ([]byte, []int) {
	return file_api_vdr_types_vdr_proto_rawDescGZIP(), []int{4}
}

func (x *NameArg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_vdr_types_vdr_proto protoreflect.FileDescriptor

var file_api_vdr_types_vdr_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x64, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x64, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x64, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x70,
	0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52, 0x4c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x07, 0x44, 0x49, 0x44, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x52,
	0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x44,
	0x41, 0x72, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x0f, 0x44, 0x49, 0x44, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x69,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1d, 0x0a, 0x07, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x61, 0x74, 0x74, 0x69, 0x2f, 0x47, 0x53, 0x53, 0x49, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x64, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_vdr_types_vdr_proto_rawDescOnce sync.Once
	file_api_vdr_types_vdr_proto_rawDescData = file_api_vdr_types_vdr_proto_rawDesc
)

func file_api_vdr_types_vdr_proto_rawDescGZIP() []byte {
	file_api_vdr_types_vdr_proto_rawDescOnce.Do(func() {
		file_api_vdr_types_vdr_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_vdr_types_vdr_proto_rawDescData)
	})
	return file_api_vdr_types_vdr_proto_rawDescData
}

var file_api_vdr_types_vdr_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_vdr_types_vdr_proto_goTypes = []interface{}{
	(*Document)(nil),        // 0: api.vdr.types.Document
	(*DIDArgs)(nil),         // 1: api.vdr.types.DIDArgs
	(*IDArg)(nil),           // 2: api.vdr.types.IDArg
	(*DIDRecordResult)(nil), // 3: api.vdr.types.DIDRecordResult
	(*NameArg)(nil),         // 4: api.vdr.types.NameArg
	(*types.Record)(nil),    // 5: api.spi.types.Record
}
var file_api_vdr_types_vdr_proto_depIdxs = []int32{
	5, // 0: api.vdr.types.DIDRecordResult.result:type_name -> api.spi.types.Record
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_vdr_types_vdr_proto_init() }
func file_api_vdr_types_vdr_proto_init() {
	if File_api_vdr_types_vdr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_vdr_types_vdr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_vdr_types_vdr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DIDArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_vdr_types_vdr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_vdr_types_vdr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DIDRecordResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_vdr_types_vdr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_vdr_types_vdr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_vdr_types_vdr_proto_goTypes,
		DependencyIndexes: file_api_vdr_types_vdr_proto_depIdxs,
		MessageInfos:      file_api_vdr_types_vdr_proto_msgTypes,
	}.Build()
	File_api_vdr_types_vdr_proto = out.File
	file_api_vdr_types_vdr_proto_rawDesc = nil
	file_api_vdr_types_vdr_proto_goTypes = nil
	file_api_vdr_types_vdr_proto_depIdxs = nil
}
