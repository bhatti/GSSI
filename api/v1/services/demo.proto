syntax = "proto3";

package api.services;

option go_package = "github.com/bhatti/GSSI/api/v1/services";

import "api/v1/types/common.proto";
import "api/v1/types/credential.proto";

// GetAllDegreesRequest for verifiable credentials
message GetAllDegreesRequest {
  int32 page = 1;
  int32 limit = 2;
  string query = 3;
}

// GetDegreeRequest for verifiable credentials
message GetDegreeRequest {
  string id = 1;
}

// DeleteDegreeRequest for verifiable credentials
message DeleteDegreeRequest {
  string id = 1;
}

// CreateDegreeRequest for verifiable credentials
message CreateDegreeRequest {
}

// DegreeService  --
service DegreeService {
  // GET /exchanges/degrees
  // 200	Degrees retrieved
  // 400	Bad Request
  // 401	Not Authorized
  // 410	Gone! There is no data here
  // 500	Internal Error
  // 501	Not Implemented
  rpc getAll(GetAllDegreesRequest) returns (stream types.RefreshableVerifiableCredential) {}
  // GET /exchanges/degrees/{id}
  // 200	Degree retrieved
  // 400	Bad Request
  // 401	Not Authorized
  // 410	Gone! There is no data here
  // 418	I'm a teapot - MUST not be returned outside of pre-arranged scenarios between both parties
  // 500	Internal Error
  // 501	Not Implemented
  rpc get(GetDegreeRequest) returns (types.RefreshableVerifiableCredential) {}
  // DELETE /exchanges/degrees/{id}
  rpc delete(DeleteDegreeRequest) returns (types.Bool) {}
  // POST /exchanges/degrees
  // 201	Degree successfully issued!
  // 400	invalid input!
  // 500	error!
  rpc create(CreateDegreeRequest) returns (types.RefreshableVerifiableCredential) {}
}

