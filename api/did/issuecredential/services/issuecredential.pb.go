// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: api/did/issuecredential/services/issuecredential.proto

package services

import (
	types1 "github.com/bhatti/GSSI/api/did/doc/types"
	types "github.com/bhatti/GSSI/api/did/issuecredential/types"
	types2 "github.com/bhatti/GSSI/api/vc/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AcceptProposalRequest model
//
// This is used for accepting proposal.
//
type AcceptProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// OfferCredential is a message describing the credential intend to offer and
	// possibly the price they expect to be paid.
	OfferCredential *types.GenericOfferCredential `protobuf:"bytes,2,opt,name=offer_credential,json=offerCredential,proto3" json:"offer_credential,omitempty"`
}

func (x *AcceptProposalRequest) Reset() {
	*x = AcceptProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptProposalRequest) ProtoMessage() {}

func (x *AcceptProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptProposalRequest.ProtoReflect.Descriptor instead.
func (*AcceptProposalRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{0}
}

func (x *AcceptProposalRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptProposalRequest) GetOfferCredential() *types.GenericOfferCredential {
	if x != nil {
		return x.OfferCredential
	}
	return nil
}

// AcceptProposalRequestV2 model
//
// This is used for accepting proposal.
//
type AcceptProposalRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// OfferCredential is a message describing the credential intend to offer and
	// possibly the price they expect to be paid.
	OfferCredential *types.OfferCredentialV2 `protobuf:"bytes,2,opt,name=offer_credential,json=offerCredential,proto3" json:"offer_credential,omitempty"`
}

func (x *AcceptProposalRequestV2) Reset() {
	*x = AcceptProposalRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptProposalRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptProposalRequestV2) ProtoMessage() {}

func (x *AcceptProposalRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptProposalRequestV2.ProtoReflect.Descriptor instead.
func (*AcceptProposalRequestV2) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{1}
}

func (x *AcceptProposalRequestV2) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptProposalRequestV2) GetOfferCredential() *types.OfferCredentialV2 {
	if x != nil {
		return x.OfferCredential
	}
	return nil
}

// AcceptProposalRequestV3 model
//
// This is used for accepting proposal.
//
type AcceptProposalRequestV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// OfferCredential is a message describing the credential intend to offer and
	// possibly the price they expect to be paid.
	OfferCredential *types.OfferCredentialV3 `protobuf:"bytes,2,opt,name=offer_credential,json=offerCredential,proto3" json:"offer_credential,omitempty"`
}

func (x *AcceptProposalRequestV3) Reset() {
	*x = AcceptProposalRequestV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptProposalRequestV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptProposalRequestV3) ProtoMessage() {}

func (x *AcceptProposalRequestV3) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptProposalRequestV3.ProtoReflect.Descriptor instead.
func (*AcceptProposalRequestV3) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptProposalRequestV3) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptProposalRequestV3) GetOfferCredential() *types.OfferCredentialV3 {
	if x != nil {
		return x.OfferCredential
	}
	return nil
}

// AcceptProposalResponse model
//
// Represents a AcceptProposal response message.
//
type AcceptProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptProposalResponse) Reset() {
	*x = AcceptProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptProposalResponse) ProtoMessage() {}

func (x *AcceptProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptProposalResponse.ProtoReflect.Descriptor instead.
func (*AcceptProposalResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{3}
}

// AcceptOfferRequest model
//
// This is used for accepting an offer.
//
type AcceptOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance I
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// RequestCredential is an optional message sent by the potential Holder to the Issuer to request the issuance of a
	// credential.
	RequestCredential *types.GenericRequestCredential `protobuf:"bytes,2,opt,name=request_credential,json=requestCredential,proto3" json:"request_credential,omitempty"`
}

func (x *AcceptOfferRequest) Reset() {
	*x = AcceptOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOfferRequest) ProtoMessage() {}

func (x *AcceptOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOfferRequest.ProtoReflect.Descriptor instead.
func (*AcceptOfferRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{4}
}

func (x *AcceptOfferRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptOfferRequest) GetRequestCredential() *types.GenericRequestCredential {
	if x != nil {
		return x.RequestCredential
	}
	return nil
}

// AcceptOfferRequestV2 model
//
// This is used for accepting an offer.
//
type AcceptOfferRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance I
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// RequestCredential is an optional message sent by the potential Holder to the Issuer to request the issuance of a
	// credential.
	RequestCredential *types.RequestCredentialV2 `protobuf:"bytes,2,opt,name=request_credential,json=requestCredential,proto3" json:"request_credential,omitempty"`
}

func (x *AcceptOfferRequestV2) Reset() {
	*x = AcceptOfferRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptOfferRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOfferRequestV2) ProtoMessage() {}

func (x *AcceptOfferRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOfferRequestV2.ProtoReflect.Descriptor instead.
func (*AcceptOfferRequestV2) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptOfferRequestV2) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptOfferRequestV2) GetRequestCredential() *types.RequestCredentialV2 {
	if x != nil {
		return x.RequestCredential
	}
	return nil
}

// AcceptOfferRequestV3 model
//
// This is used for accepting an offer.
//
type AcceptOfferRequestV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance I
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// RequestCredential is an optional message sent by the potential Holder to the Issuer to request the issuance of a
	// credential.
	RequestCredential *types.RequestCredentialV3 `protobuf:"bytes,2,opt,name=request_credential,json=requestCredential,proto3" json:"request_credential,omitempty"`
}

func (x *AcceptOfferRequestV3) Reset() {
	*x = AcceptOfferRequestV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptOfferRequestV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOfferRequestV3) ProtoMessage() {}

func (x *AcceptOfferRequestV3) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOfferRequestV3.ProtoReflect.Descriptor instead.
func (*AcceptOfferRequestV3) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{6}
}

func (x *AcceptOfferRequestV3) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptOfferRequestV3) GetRequestCredential() *types.RequestCredentialV3 {
	if x != nil {
		return x.RequestCredential
	}
	return nil
}

// AcceptOfferResponse model
//
// Represents a AcceptOffer response message.
//
type AcceptOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptOfferResponse) Reset() {
	*x = AcceptOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOfferResponse) ProtoMessage() {}

func (x *AcceptOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOfferResponse.ProtoReflect.Descriptor instead.
func (*AcceptOfferResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{7}
}

// AcceptRequestRequest model
//
// This is used for accepting a request.
//
type AcceptRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// IssueCredential contains as attached payload the credentials being issued
	IssueCredential *types.GenericIssueCredential `protobuf:"bytes,2,opt,name=issue_credential,json=issueCredential,proto3" json:"issue_credential,omitempty"`
}

func (x *AcceptRequestRequest) Reset() {
	*x = AcceptRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRequestRequest) ProtoMessage() {}

func (x *AcceptRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRequestRequest.ProtoReflect.Descriptor instead.
func (*AcceptRequestRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{8}
}

func (x *AcceptRequestRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptRequestRequest) GetIssueCredential() *types.GenericIssueCredential {
	if x != nil {
		return x.IssueCredential
	}
	return nil
}

// AcceptRequestRequestV2 model
//
// This is used for accepting a request.
//
type AcceptRequestRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// IssueCredential contains as attached payload the credentials being issued
	IssueCredential *types.IssueCredentialV2 `protobuf:"bytes,2,opt,name=issue_credential,json=issueCredential,proto3" json:"issue_credential,omitempty"`
}

func (x *AcceptRequestRequestV2) Reset() {
	*x = AcceptRequestRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRequestRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRequestRequestV2) ProtoMessage() {}

func (x *AcceptRequestRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRequestRequestV2.ProtoReflect.Descriptor instead.
func (*AcceptRequestRequestV2) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{9}
}

func (x *AcceptRequestRequestV2) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptRequestRequestV2) GetIssueCredential() *types.IssueCredentialV2 {
	if x != nil {
		return x.IssueCredential
	}
	return nil
}

// AcceptRequestRequestV3 model
//
// This is used for accepting a request.
//
type AcceptRequestRequestV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// IssueCredential contains as attached payload the credentials being issued
	IssueCredential *types.IssueCredentialV3 `protobuf:"bytes,2,opt,name=issue_credential,json=issueCredential,proto3" json:"issue_credential,omitempty"`
}

func (x *AcceptRequestRequestV3) Reset() {
	*x = AcceptRequestRequestV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRequestRequestV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRequestRequestV3) ProtoMessage() {}

func (x *AcceptRequestRequestV3) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRequestRequestV3.ProtoReflect.Descriptor instead.
func (*AcceptRequestRequestV3) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{10}
}

func (x *AcceptRequestRequestV3) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptRequestRequestV3) GetIssueCredential() *types.IssueCredentialV3 {
	if x != nil {
		return x.IssueCredential
	}
	return nil
}

// AcceptRequestResponse model
//
// Represents a AcceptRequest response message.
//
type AcceptRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptRequestResponse) Reset() {
	*x = AcceptRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRequestResponse) ProtoMessage() {}

func (x *AcceptRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRequestResponse.ProtoReflect.Descriptor instead.
func (*AcceptRequestResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{11}
}

// AcceptCredentialRequest model
//
// This is used for accepting a credential.
//
type AcceptCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID.
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// Names represent the names of how credentials will be stored.
	Names []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	// SkipStore if true then credential will not be saved in agent's verifiable store,
	// but protocol state will be updated.
	SkipStore bool `protobuf:"varint,3,opt,name=skipStore,proto3" json:"skipStore,omitempty"`
}

func (x *AcceptCredentialRequest) Reset() {
	*x = AcceptCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptCredentialRequest) ProtoMessage() {}

func (x *AcceptCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptCredentialRequest.ProtoReflect.Descriptor instead.
func (*AcceptCredentialRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{12}
}

func (x *AcceptCredentialRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *AcceptCredentialRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *AcceptCredentialRequest) GetSkipStore() bool {
	if x != nil {
		return x.SkipStore
	}
	return false
}

// AcceptCredentialResponse model
//
// Represents a AcceptCredential response message.
//
type AcceptCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptCredentialResponse) Reset() {
	*x = AcceptCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptCredentialResponse) ProtoMessage() {}

func (x *AcceptCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptCredentialResponse.ProtoReflect.Descriptor instead.
func (*AcceptCredentialResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{13}
}

// NegotiateProposalRequest model
//
// This is used when the Holder wants to negotiate about an offer he received.
//
type NegotiateProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// ProposeCredential is a message sent in response to a offer-credential message when the Holder
	// wants some adjustments made to the credential data offered by Issuer.
	ProposeCredential *types.GenericProposeCredential `protobuf:"bytes,2,opt,name=propose_credential,json=proposeCredential,proto3" json:"propose_credential,omitempty"`
}

func (x *NegotiateProposalRequest) Reset() {
	*x = NegotiateProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateProposalRequest) ProtoMessage() {}

func (x *NegotiateProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateProposalRequest.ProtoReflect.Descriptor instead.
func (*NegotiateProposalRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{14}
}

func (x *NegotiateProposalRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *NegotiateProposalRequest) GetProposeCredential() *types.GenericProposeCredential {
	if x != nil {
		return x.ProposeCredential
	}
	return nil
}

// NegotiateProposalRequestV2 model
//
// This is used when the Holder wants to negotiate about an offer he received.
//
type NegotiateProposalRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// ProposeCredential is a message sent in response to a offer-credential message when the Holder
	// wants some adjustments made to the credential data offered by Issuer.
	ProposeCredential *types.ProposeCredentialV2 `protobuf:"bytes,2,opt,name=propose_credential,json=proposeCredential,proto3" json:"propose_credential,omitempty"`
}

func (x *NegotiateProposalRequestV2) Reset() {
	*x = NegotiateProposalRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateProposalRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateProposalRequestV2) ProtoMessage() {}

func (x *NegotiateProposalRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateProposalRequestV2.ProtoReflect.Descriptor instead.
func (*NegotiateProposalRequestV2) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{15}
}

func (x *NegotiateProposalRequestV2) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *NegotiateProposalRequestV2) GetProposeCredential() *types.ProposeCredentialV2 {
	if x != nil {
		return x.ProposeCredential
	}
	return nil
}

// NegotiateProposalRequestV3 model
//
// This is used when the Holder wants to negotiate about an offer he received.
//
type NegotiateProposalRequestV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// ProposeCredential is a message sent in response to a offer-credential message when the Holder
	// wants some adjustments made to the credential data offered by Issuer.
	ProposeCredential *types.ProposeCredentialV3 `protobuf:"bytes,2,opt,name=propose_credential,json=proposeCredential,proto3" json:"propose_credential,omitempty"`
}

func (x *NegotiateProposalRequestV3) Reset() {
	*x = NegotiateProposalRequestV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateProposalRequestV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateProposalRequestV3) ProtoMessage() {}

func (x *NegotiateProposalRequestV3) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateProposalRequestV3.ProtoReflect.Descriptor instead.
func (*NegotiateProposalRequestV3) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{16}
}

func (x *NegotiateProposalRequestV3) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *NegotiateProposalRequestV3) GetProposeCredential() *types.ProposeCredentialV3 {
	if x != nil {
		return x.ProposeCredential
	}
	return nil
}

// NegotiateProposalResponse model
//
// Represents a NegotiateProposal response message.
//
type NegotiateProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NegotiateProposalResponse) Reset() {
	*x = NegotiateProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegotiateProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiateProposalResponse) ProtoMessage() {}

func (x *NegotiateProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiateProposalResponse.ProtoReflect.Descriptor instead.
func (*NegotiateProposalResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{17}
}

// DeclineProposalRequest model
//
// This is used when proposal needs to be rejected.
//
type DeclineProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// Reason why proposal is declined
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	// RedirectURL is optional web redirect URL that can be sent to holder.
	// Useful in cases where issuer would like holder to redirect after its proposal gets declined.
	RedirectURL string `protobuf:"bytes,3,opt,name=redirectURL,proto3" json:"redirectURL,omitempty"`
}

func (x *DeclineProposalRequest) Reset() {
	*x = DeclineProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineProposalRequest) ProtoMessage() {}

func (x *DeclineProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineProposalRequest.ProtoReflect.Descriptor instead.
func (*DeclineProposalRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{18}
}

func (x *DeclineProposalRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *DeclineProposalRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DeclineProposalRequest) GetRedirectURL() string {
	if x != nil {
		return x.RedirectURL
	}
	return ""
}

// DeclineProposalResponse model
//
// Represents a DeclineProposal response message.
//
type DeclineProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeclineProposalResponse) Reset() {
	*x = DeclineProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineProposalResponse) ProtoMessage() {}

func (x *DeclineProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineProposalResponse.ProtoReflect.Descriptor instead.
func (*DeclineProposalResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{19}
}

// DeclineOfferRequest model
//
// This is used when offer needs to be rejected.
//
type DeclineOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// Reason why offer is declined
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *DeclineOfferRequest) Reset() {
	*x = DeclineOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineOfferRequest) ProtoMessage() {}

func (x *DeclineOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineOfferRequest.ProtoReflect.Descriptor instead.
func (*DeclineOfferRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{20}
}

func (x *DeclineOfferRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *DeclineOfferRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// DeclineOfferResponse model
//
// Represents a DeclineOffer response message.
//
type DeclineOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeclineOfferResponse) Reset() {
	*x = DeclineOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineOfferResponse) ProtoMessage() {}

func (x *DeclineOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineOfferResponse.ProtoReflect.Descriptor instead.
func (*DeclineOfferResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{21}
}

// DeclineRequestRequest model
//
// This is used when request needs to be rejected.
//
type DeclineRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// Reason why request is declined
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	// RedirectURL is optional web redirect URL that can be sent to holder.
	// Useful in cases where issuer would like holder to redirect after its credential request gets declined.
	RedirectURL string `protobuf:"bytes,3,opt,name=redirectURL,proto3" json:"redirectURL,omitempty"`
}

func (x *DeclineRequestRequest) Reset() {
	*x = DeclineRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineRequestRequest) ProtoMessage() {}

func (x *DeclineRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineRequestRequest.ProtoReflect.Descriptor instead.
func (*DeclineRequestRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{22}
}

func (x *DeclineRequestRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *DeclineRequestRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DeclineRequestRequest) GetRedirectURL() string {
	if x != nil {
		return x.RedirectURL
	}
	return ""
}

// DeclineRequestResponse model
//
// Represents a DeclineRequest response message.
//
type DeclineRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeclineRequestResponse) Reset() {
	*x = DeclineRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineRequestResponse) ProtoMessage() {}

func (x *DeclineRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineRequestResponse.ProtoReflect.Descriptor instead.
func (*DeclineRequestResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{23}
}

// DeclineCredentialRequest model
//
// This is used when credential needs to be rejected.
//
type DeclineCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	// Reason why credential is declined
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *DeclineCredentialRequest) Reset() {
	*x = DeclineCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineCredentialRequest) ProtoMessage() {}

func (x *DeclineCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineCredentialRequest.ProtoReflect.Descriptor instead.
func (*DeclineCredentialRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{24}
}

func (x *DeclineCredentialRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *DeclineCredentialRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// DeclineCredentialResponse model
//
// Represents a DeclineCredential response message.
//
type DeclineCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeclineCredentialResponse) Reset() {
	*x = DeclineCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineCredentialResponse) ProtoMessage() {}

func (x *DeclineCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineCredentialResponse.ProtoReflect.Descriptor instead.
func (*DeclineCredentialResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{25}
}

// SendProposalRequest model
//
// This is used for sending a proposal to initiate the protocol.
//
type SendProposalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// ProposeCredential is a message sent by the potential Holder to the Issuer to initiate the protocol
	ProposeCredential *types.GenericProposeCredential `protobuf:"bytes,3,opt,name=propose_credential,json=proposeCredential,proto3" json:"propose_credential,omitempty"`
}

func (x *SendProposalRequest) Reset() {
	*x = SendProposalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProposalRequest) ProtoMessage() {}

func (x *SendProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProposalRequest.ProtoReflect.Descriptor instead.
func (*SendProposalRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{26}
}

func (x *SendProposalRequest) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendProposalRequest) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendProposalRequest) GetProposeCredential() *types.GenericProposeCredential {
	if x != nil {
		return x.ProposeCredential
	}
	return nil
}

// SendProposalRequestV2 model
//
// This is used for sending a proposal to initiate the protocol.
//
type SendProposalRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// ProposeCredential is a message sent by the potential Holder to the Issuer to initiate the protocol
	ProposeCredential *types.ProposeCredentialV2 `protobuf:"bytes,3,opt,name=propose_credential,json=proposeCredential,proto3" json:"propose_credential,omitempty"`
}

func (x *SendProposalRequestV2) Reset() {
	*x = SendProposalRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProposalRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProposalRequestV2) ProtoMessage() {}

func (x *SendProposalRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProposalRequestV2.ProtoReflect.Descriptor instead.
func (*SendProposalRequestV2) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{27}
}

func (x *SendProposalRequestV2) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendProposalRequestV2) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendProposalRequestV2) GetProposeCredential() *types.ProposeCredentialV2 {
	if x != nil {
		return x.ProposeCredential
	}
	return nil
}

// SendProposalRequestV3 model
//
// This is used for sending a proposal to initiate the protocol.
//
type SendProposalRequestV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// ProposeCredential is a message sent by the potential Holder to the Issuer to initiate the protocol
	ProposeCredential *types.ProposeCredentialV3 `protobuf:"bytes,3,opt,name=propose_credential,json=proposeCredential,proto3" json:"propose_credential,omitempty"`
}

func (x *SendProposalRequestV3) Reset() {
	*x = SendProposalRequestV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProposalRequestV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProposalRequestV3) ProtoMessage() {}

func (x *SendProposalRequestV3) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProposalRequestV3.ProtoReflect.Descriptor instead.
func (*SendProposalRequestV3) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{28}
}

func (x *SendProposalRequestV3) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendProposalRequestV3) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendProposalRequestV3) GetProposeCredential() *types.ProposeCredentialV3 {
	if x != nil {
		return x.ProposeCredential
	}
	return nil
}

// SendProposalResponse model
//
// Represents a SendProposal response message.
//
type SendProposalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID. It can be used as a correlation ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
}

func (x *SendProposalResponse) Reset() {
	*x = SendProposalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProposalResponse) ProtoMessage() {}

func (x *SendProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProposalResponse.ProtoReflect.Descriptor instead.
func (*SendProposalResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{29}
}

func (x *SendProposalResponse) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

// SendOfferRequest model
//
// This is used for sending an offer.
//
type SendOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// OfferCredential is a message describing the credential intend to offer and
	// possibly the price they expect to be paid.
	OfferCredential *types.GenericOfferCredential `protobuf:"bytes,3,opt,name=offer_credential,json=offerCredential,proto3" json:"offer_credential,omitempty"`
}

func (x *SendOfferRequest) Reset() {
	*x = SendOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOfferRequest) ProtoMessage() {}

func (x *SendOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOfferRequest.ProtoReflect.Descriptor instead.
func (*SendOfferRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{30}
}

func (x *SendOfferRequest) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendOfferRequest) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendOfferRequest) GetOfferCredential() *types.GenericOfferCredential {
	if x != nil {
		return x.OfferCredential
	}
	return nil
}

// SendOfferRequestV2 model
//
// This is used for sending an offer.
//
type SendOfferRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// OfferCredential is a message describing the credential intend to offer and
	// possibly the price they expect to be paid.
	OfferCredential *types.OfferCredentialV2 `protobuf:"bytes,3,opt,name=offer_credential,json=offerCredential,proto3" json:"offer_credential,omitempty"`
}

func (x *SendOfferRequestV2) Reset() {
	*x = SendOfferRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOfferRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOfferRequestV2) ProtoMessage() {}

func (x *SendOfferRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOfferRequestV2.ProtoReflect.Descriptor instead.
func (*SendOfferRequestV2) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{31}
}

func (x *SendOfferRequestV2) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendOfferRequestV2) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendOfferRequestV2) GetOfferCredential() *types.OfferCredentialV2 {
	if x != nil {
		return x.OfferCredential
	}
	return nil
}

// SendOfferRequestV3 model
//
// This is used for sending an offer.
//
type SendOfferRequestV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// OfferCredential is a message describing the credential intend to offer and
	// possibly the price they expect to be paid.
	OfferCredential *types.OfferCredentialV3 `protobuf:"bytes,3,opt,name=offer_credential,json=offerCredential,proto3" json:"offer_credential,omitempty"`
}

func (x *SendOfferRequestV3) Reset() {
	*x = SendOfferRequestV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOfferRequestV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOfferRequestV3) ProtoMessage() {}

func (x *SendOfferRequestV3) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOfferRequestV3.ProtoReflect.Descriptor instead.
func (*SendOfferRequestV3) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{32}
}

func (x *SendOfferRequestV3) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendOfferRequestV3) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendOfferRequestV3) GetOfferCredential() *types.OfferCredentialV3 {
	if x != nil {
		return x.OfferCredential
	}
	return nil
}

// SendOfferResponse model
//
// Represents a SendOffer response message.
//
type SendOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID. It can be used as a correlation ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
}

func (x *SendOfferResponse) Reset() {
	*x = SendOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOfferResponse) ProtoMessage() {}

func (x *SendOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOfferResponse.ProtoReflect.Descriptor instead.
func (*SendOfferResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{33}
}

func (x *SendOfferResponse) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

// SendRequestRequest model
//
// This is used for sending a request.
//
type SendRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// RequestCredential is a message sent by the potential Holder to the Issuer,
	// to request the issuance of a credential.
	RequestCredential *types.GenericRequestCredential `protobuf:"bytes,3,opt,name=request_credential,json=requestCredential,proto3" json:"request_credential,omitempty"`
}

func (x *SendRequestRequest) Reset() {
	*x = SendRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequestRequest) ProtoMessage() {}

func (x *SendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequestRequest.ProtoReflect.Descriptor instead.
func (*SendRequestRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{34}
}

func (x *SendRequestRequest) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendRequestRequest) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendRequestRequest) GetRequestCredential() *types.GenericRequestCredential {
	if x != nil {
		return x.RequestCredential
	}
	return nil
}

// SendRequestRequestV2 model
//
// This is used for sending a request.
//
type SendRequestRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// RequestCredential is a message sent by the potential Holder to the Issuer,
	// to request the issuance of a credential.
	RequestCredential *types.RequestCredentialV2 `protobuf:"bytes,3,opt,name=request_credential,json=requestCredential,proto3" json:"request_credential,omitempty"`
}

func (x *SendRequestRequestV2) Reset() {
	*x = SendRequestRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequestRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequestRequestV2) ProtoMessage() {}

func (x *SendRequestRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequestRequestV2.ProtoReflect.Descriptor instead.
func (*SendRequestRequestV2) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{35}
}

func (x *SendRequestRequestV2) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendRequestRequestV2) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendRequestRequestV2) GetRequestCredential() *types.RequestCredentialV2 {
	if x != nil {
		return x.RequestCredential
	}
	return nil
}

// SendRequestRequestV3 model
//
// This is used for sending a request.
//
type SendRequestRequestV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MyDID sender's did
	MyDid string `protobuf:"bytes,1,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	// TheirDID receiver's did
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// RequestCredential is a message sent by the potential Holder to the Issuer,
	// to request the issuance of a credential.
	RequestCredential *types.RequestCredentialV3 `protobuf:"bytes,3,opt,name=request_credential,json=requestCredential,proto3" json:"request_credential,omitempty"`
}

func (x *SendRequestRequestV3) Reset() {
	*x = SendRequestRequestV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequestRequestV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequestRequestV3) ProtoMessage() {}

func (x *SendRequestRequestV3) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequestRequestV3.ProtoReflect.Descriptor instead.
func (*SendRequestRequestV3) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{36}
}

func (x *SendRequestRequestV3) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *SendRequestRequestV3) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendRequestRequestV3) GetRequestCredential() *types.RequestCredentialV3 {
	if x != nil {
		return x.RequestCredential
	}
	return nil
}

// SendRequestResponse model
//
// Represents a SendRequest response message.
//
type SendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID. It can be used as a correlation ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
}

func (x *SendRequestResponse) Reset() {
	*x = SendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequestResponse) ProtoMessage() {}

func (x *SendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequestResponse.ProtoReflect.Descriptor instead.
func (*SendRequestResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{37}
}

func (x *SendRequestResponse) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

// ActionsResponse model
//
// Represents Actions response message.
//
type ActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*types1.Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *ActionsResponse) Reset() {
	*x = ActionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsResponse) ProtoMessage() {}

func (x *ActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsResponse.ProtoReflect.Descriptor instead.
func (*ActionsResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{38}
}

func (x *ActionsResponse) GetActions() []*types1.Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

// AcceptProblemReportRequest model
//
// This is used for accepting a problem report.
//
type AcceptProblemReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PIID Protocol instance ID
	Piid string `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
}

func (x *AcceptProblemReportRequest) Reset() {
	*x = AcceptProblemReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptProblemReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptProblemReportRequest) ProtoMessage() {}

func (x *AcceptProblemReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptProblemReportRequest.ProtoReflect.Descriptor instead.
func (*AcceptProblemReportRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{39}
}

func (x *AcceptProblemReportRequest) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

// AcceptProblemReportResponse model
//
// Represents a AcceptProblemReport response message.
//
type AcceptProblemReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptProblemReportResponse) Reset() {
	*x = AcceptProblemReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptProblemReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptProblemReportResponse) ProtoMessage() {}

func (x *AcceptProblemReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptProblemReportResponse.ProtoReflect.Descriptor instead.
func (*AcceptProblemReportResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{40}
}

// GetCredentialSpecRequest model.
type GetCredentialSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // json.RawMessage
}

func (x *GetCredentialSpecRequest) Reset() {
	*x = GetCredentialSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialSpecRequest) ProtoMessage() {}

func (x *GetCredentialSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialSpecRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialSpecRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{41}
}

func (x *GetCredentialSpecRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

// GetCredentialSpecResponse model.
type GetCredentialSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec *types.CredentialSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *GetCredentialSpecResponse) Reset() {
	*x = GetCredentialSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialSpecResponse) ProtoMessage() {}

func (x *GetCredentialSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialSpecResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialSpecResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{42}
}

func (x *GetCredentialSpecResponse) GetSpec() *types.CredentialSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// IssueCredentialRequest model.
type IssueCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec *types.CredentialSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *IssueCredentialRequest) Reset() {
	*x = IssueCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueCredentialRequest) ProtoMessage() {}

func (x *IssueCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueCredentialRequest.ProtoReflect.Descriptor instead.
func (*IssueCredentialRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{43}
}

func (x *IssueCredentialRequest) GetSpec() *types.CredentialSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// IssueCredentialResponse model.
type IssueCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssueCredential *types.IssueCredentialV2 `protobuf:"bytes,1,opt,name=issue_credential,json=issueCredential,proto3" json:"issue_credential,omitempty"`
}

func (x *IssueCredentialResponse) Reset() {
	*x = IssueCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueCredentialResponse) ProtoMessage() {}

func (x *IssueCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueCredentialResponse.ProtoReflect.Descriptor instead.
func (*IssueCredentialResponse) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{44}
}

func (x *IssueCredentialResponse) GetIssueCredential() *types.IssueCredentialV2 {
	if x != nil {
		return x.IssueCredential
	}
	return nil
}

// VerifyCredentialRequest model.
type VerifyCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential *types2.VerifiableCredential `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"`
	Spec       *types.CredentialSpec        `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *VerifyCredentialRequest) Reset() {
	*x = VerifyCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCredentialRequest) ProtoMessage() {}

func (x *VerifyCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_issuecredential_services_issuecredential_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCredentialRequest.ProtoReflect.Descriptor instead.
func (*VerifyCredentialRequest) Descriptor() ([]byte, []int) {
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP(), []int{45}
}

func (x *VerifyCredentialRequest) GetCredential() *types2.VerifiableCredential {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *VerifyCredentialRequest) GetSpec() *types.CredentialSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

var File_api_did_issuecredential_services_issuecredential_proto protoreflect.FileDescriptor

var file_api_did_issuecredential_services_issuecredential_proto_rawDesc = []byte{
	0x0a, 0x36, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69,
	0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x63, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x61, 0x70, 0x69, 0x2f, 0x64,
	0x69, 0x64, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x62, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12,
	0x60, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x0f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69,
	0x64, 0x12, 0x5b, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x0f, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x8a,
	0x01, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x5b,
	0x0a, 0x10, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x33, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x18, 0x0a, 0x16, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64,
	0x12, 0x66, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x32, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x33, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x56, 0x33, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x8c, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x60, 0x0a, 0x10,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64,
	0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x89,
	0x01, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x5b, 0x0a,
	0x10, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69,
	0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x0f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x10, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x56, 0x33, 0x52, 0x0f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x61, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96,
	0x01, 0x0a, 0x18, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12,
	0x66, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x4e, 0x65, 0x67, 0x6f,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x12, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64,
	0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x93, 0x01,
	0x0a, 0x1a, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x33, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64,
	0x12, 0x61, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x33,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x22, 0x1b, 0x0a, 0x19, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x66, 0x0a, 0x16, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x63, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e,
	0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65,
	0x0a, 0x15, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55,
	0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x52, 0x4c, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x46, 0x0a, 0x18, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x63, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6d, 0x79, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x79,
	0x44, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x69, 0x72, 0x5f, 0x64, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x65, 0x69, 0x72, 0x44, 0x69, 0x64,
	0x12, 0x66, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x79, 0x44, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x65,
	0x69, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68,
	0x65, 0x69, 0x72, 0x44, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x33, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x79, 0x44, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68,
	0x65, 0x69, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x68, 0x65, 0x69, 0x72, 0x44, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x33, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x2a, 0x0a, 0x14, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d,
	0x79, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x79, 0x44,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x69, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x65, 0x69, 0x72, 0x44, 0x69, 0x64, 0x12,
	0x60, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x0f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x64,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x79, 0x44, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x69, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x65, 0x69, 0x72, 0x44, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x10,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64,
	0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x6e, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x33,
	0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x79, 0x44, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x69, 0x72,
	0x5f, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x65, 0x69,
	0x72, 0x44, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x33,
	0x52, 0x0f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x22, 0x27, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x79, 0x44, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x69,
	0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x65,
	0x69, 0x72, 0x44, 0x69, 0x64, 0x12, 0x66, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0xad, 0x01,
	0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x64, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x79, 0x44, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x68, 0x65, 0x69, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x68, 0x65, 0x69, 0x72, 0x44, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x12, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64,
	0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0xad, 0x01,
	0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x33, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x64, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x79, 0x44, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x68, 0x65, 0x69, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x68, 0x65, 0x69, 0x72, 0x44, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x12, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64,
	0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x33, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x29, 0x0a,
	0x13, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x30, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69,
	0x69, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x5b, 0x0a, 0x16, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x22, 0x76, 0x0a, 0x17, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x10, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x32, 0x52, 0x0f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0xa0, 0x01, 0x0a,
	0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x69, 0x64, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x42,
	0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68,
	0x61, 0x74, 0x74, 0x69, 0x2f, 0x47, 0x53, 0x53, 0x49, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69,
	0x64, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_did_issuecredential_services_issuecredential_proto_rawDescOnce sync.Once
	file_api_did_issuecredential_services_issuecredential_proto_rawDescData = file_api_did_issuecredential_services_issuecredential_proto_rawDesc
)

func file_api_did_issuecredential_services_issuecredential_proto_rawDescGZIP() []byte {
	file_api_did_issuecredential_services_issuecredential_proto_rawDescOnce.Do(func() {
		file_api_did_issuecredential_services_issuecredential_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_did_issuecredential_services_issuecredential_proto_rawDescData)
	})
	return file_api_did_issuecredential_services_issuecredential_proto_rawDescData
}

var file_api_did_issuecredential_services_issuecredential_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_api_did_issuecredential_services_issuecredential_proto_goTypes = []interface{}{
	(*AcceptProposalRequest)(nil),          // 0: api.did.issuecredential.services.AcceptProposalRequest
	(*AcceptProposalRequestV2)(nil),        // 1: api.did.issuecredential.services.AcceptProposalRequestV2
	(*AcceptProposalRequestV3)(nil),        // 2: api.did.issuecredential.services.AcceptProposalRequestV3
	(*AcceptProposalResponse)(nil),         // 3: api.did.issuecredential.services.AcceptProposalResponse
	(*AcceptOfferRequest)(nil),             // 4: api.did.issuecredential.services.AcceptOfferRequest
	(*AcceptOfferRequestV2)(nil),           // 5: api.did.issuecredential.services.AcceptOfferRequestV2
	(*AcceptOfferRequestV3)(nil),           // 6: api.did.issuecredential.services.AcceptOfferRequestV3
	(*AcceptOfferResponse)(nil),            // 7: api.did.issuecredential.services.AcceptOfferResponse
	(*AcceptRequestRequest)(nil),           // 8: api.did.issuecredential.services.AcceptRequestRequest
	(*AcceptRequestRequestV2)(nil),         // 9: api.did.issuecredential.services.AcceptRequestRequestV2
	(*AcceptRequestRequestV3)(nil),         // 10: api.did.issuecredential.services.AcceptRequestRequestV3
	(*AcceptRequestResponse)(nil),          // 11: api.did.issuecredential.services.AcceptRequestResponse
	(*AcceptCredentialRequest)(nil),        // 12: api.did.issuecredential.services.AcceptCredentialRequest
	(*AcceptCredentialResponse)(nil),       // 13: api.did.issuecredential.services.AcceptCredentialResponse
	(*NegotiateProposalRequest)(nil),       // 14: api.did.issuecredential.services.NegotiateProposalRequest
	(*NegotiateProposalRequestV2)(nil),     // 15: api.did.issuecredential.services.NegotiateProposalRequestV2
	(*NegotiateProposalRequestV3)(nil),     // 16: api.did.issuecredential.services.NegotiateProposalRequestV3
	(*NegotiateProposalResponse)(nil),      // 17: api.did.issuecredential.services.NegotiateProposalResponse
	(*DeclineProposalRequest)(nil),         // 18: api.did.issuecredential.services.DeclineProposalRequest
	(*DeclineProposalResponse)(nil),        // 19: api.did.issuecredential.services.DeclineProposalResponse
	(*DeclineOfferRequest)(nil),            // 20: api.did.issuecredential.services.DeclineOfferRequest
	(*DeclineOfferResponse)(nil),           // 21: api.did.issuecredential.services.DeclineOfferResponse
	(*DeclineRequestRequest)(nil),          // 22: api.did.issuecredential.services.DeclineRequestRequest
	(*DeclineRequestResponse)(nil),         // 23: api.did.issuecredential.services.DeclineRequestResponse
	(*DeclineCredentialRequest)(nil),       // 24: api.did.issuecredential.services.DeclineCredentialRequest
	(*DeclineCredentialResponse)(nil),      // 25: api.did.issuecredential.services.DeclineCredentialResponse
	(*SendProposalRequest)(nil),            // 26: api.did.issuecredential.services.SendProposalRequest
	(*SendProposalRequestV2)(nil),          // 27: api.did.issuecredential.services.SendProposalRequestV2
	(*SendProposalRequestV3)(nil),          // 28: api.did.issuecredential.services.SendProposalRequestV3
	(*SendProposalResponse)(nil),           // 29: api.did.issuecredential.services.SendProposalResponse
	(*SendOfferRequest)(nil),               // 30: api.did.issuecredential.services.SendOfferRequest
	(*SendOfferRequestV2)(nil),             // 31: api.did.issuecredential.services.SendOfferRequestV2
	(*SendOfferRequestV3)(nil),             // 32: api.did.issuecredential.services.SendOfferRequestV3
	(*SendOfferResponse)(nil),              // 33: api.did.issuecredential.services.SendOfferResponse
	(*SendRequestRequest)(nil),             // 34: api.did.issuecredential.services.SendRequestRequest
	(*SendRequestRequestV2)(nil),           // 35: api.did.issuecredential.services.SendRequestRequestV2
	(*SendRequestRequestV3)(nil),           // 36: api.did.issuecredential.services.SendRequestRequestV3
	(*SendRequestResponse)(nil),            // 37: api.did.issuecredential.services.SendRequestResponse
	(*ActionsResponse)(nil),                // 38: api.did.issuecredential.services.ActionsResponse
	(*AcceptProblemReportRequest)(nil),     // 39: api.did.issuecredential.services.AcceptProblemReportRequest
	(*AcceptProblemReportResponse)(nil),    // 40: api.did.issuecredential.services.AcceptProblemReportResponse
	(*GetCredentialSpecRequest)(nil),       // 41: api.did.issuecredential.services.GetCredentialSpecRequest
	(*GetCredentialSpecResponse)(nil),      // 42: api.did.issuecredential.services.GetCredentialSpecResponse
	(*IssueCredentialRequest)(nil),         // 43: api.did.issuecredential.services.IssueCredentialRequest
	(*IssueCredentialResponse)(nil),        // 44: api.did.issuecredential.services.IssueCredentialResponse
	(*VerifyCredentialRequest)(nil),        // 45: api.did.issuecredential.services.VerifyCredentialRequest
	(*types.GenericOfferCredential)(nil),   // 46: api.did.issuecredential.types.GenericOfferCredential
	(*types.OfferCredentialV2)(nil),        // 47: api.did.issuecredential.types.OfferCredentialV2
	(*types.OfferCredentialV3)(nil),        // 48: api.did.issuecredential.types.OfferCredentialV3
	(*types.GenericRequestCredential)(nil), // 49: api.did.issuecredential.types.GenericRequestCredential
	(*types.RequestCredentialV2)(nil),      // 50: api.did.issuecredential.types.RequestCredentialV2
	(*types.RequestCredentialV3)(nil),      // 51: api.did.issuecredential.types.RequestCredentialV3
	(*types.GenericIssueCredential)(nil),   // 52: api.did.issuecredential.types.GenericIssueCredential
	(*types.IssueCredentialV2)(nil),        // 53: api.did.issuecredential.types.IssueCredentialV2
	(*types.IssueCredentialV3)(nil),        // 54: api.did.issuecredential.types.IssueCredentialV3
	(*types.GenericProposeCredential)(nil), // 55: api.did.issuecredential.types.GenericProposeCredential
	(*types.ProposeCredentialV2)(nil),      // 56: api.did.issuecredential.types.ProposeCredentialV2
	(*types.ProposeCredentialV3)(nil),      // 57: api.did.issuecredential.types.ProposeCredentialV3
	(*types1.Action)(nil),                  // 58: api.did.doc.types.Action
	(*types.CredentialSpec)(nil),           // 59: api.did.issuecredential.types.CredentialSpec
	(*types2.VerifiableCredential)(nil),    // 60: api.vc.types.VerifiableCredential
}
var file_api_did_issuecredential_services_issuecredential_proto_depIdxs = []int32{
	46, // 0: api.did.issuecredential.services.AcceptProposalRequest.offer_credential:type_name -> api.did.issuecredential.types.GenericOfferCredential
	47, // 1: api.did.issuecredential.services.AcceptProposalRequestV2.offer_credential:type_name -> api.did.issuecredential.types.OfferCredentialV2
	48, // 2: api.did.issuecredential.services.AcceptProposalRequestV3.offer_credential:type_name -> api.did.issuecredential.types.OfferCredentialV3
	49, // 3: api.did.issuecredential.services.AcceptOfferRequest.request_credential:type_name -> api.did.issuecredential.types.GenericRequestCredential
	50, // 4: api.did.issuecredential.services.AcceptOfferRequestV2.request_credential:type_name -> api.did.issuecredential.types.RequestCredentialV2
	51, // 5: api.did.issuecredential.services.AcceptOfferRequestV3.request_credential:type_name -> api.did.issuecredential.types.RequestCredentialV3
	52, // 6: api.did.issuecredential.services.AcceptRequestRequest.issue_credential:type_name -> api.did.issuecredential.types.GenericIssueCredential
	53, // 7: api.did.issuecredential.services.AcceptRequestRequestV2.issue_credential:type_name -> api.did.issuecredential.types.IssueCredentialV2
	54, // 8: api.did.issuecredential.services.AcceptRequestRequestV3.issue_credential:type_name -> api.did.issuecredential.types.IssueCredentialV3
	55, // 9: api.did.issuecredential.services.NegotiateProposalRequest.propose_credential:type_name -> api.did.issuecredential.types.GenericProposeCredential
	56, // 10: api.did.issuecredential.services.NegotiateProposalRequestV2.propose_credential:type_name -> api.did.issuecredential.types.ProposeCredentialV2
	57, // 11: api.did.issuecredential.services.NegotiateProposalRequestV3.propose_credential:type_name -> api.did.issuecredential.types.ProposeCredentialV3
	55, // 12: api.did.issuecredential.services.SendProposalRequest.propose_credential:type_name -> api.did.issuecredential.types.GenericProposeCredential
	56, // 13: api.did.issuecredential.services.SendProposalRequestV2.propose_credential:type_name -> api.did.issuecredential.types.ProposeCredentialV2
	57, // 14: api.did.issuecredential.services.SendProposalRequestV3.propose_credential:type_name -> api.did.issuecredential.types.ProposeCredentialV3
	46, // 15: api.did.issuecredential.services.SendOfferRequest.offer_credential:type_name -> api.did.issuecredential.types.GenericOfferCredential
	47, // 16: api.did.issuecredential.services.SendOfferRequestV2.offer_credential:type_name -> api.did.issuecredential.types.OfferCredentialV2
	48, // 17: api.did.issuecredential.services.SendOfferRequestV3.offer_credential:type_name -> api.did.issuecredential.types.OfferCredentialV3
	49, // 18: api.did.issuecredential.services.SendRequestRequest.request_credential:type_name -> api.did.issuecredential.types.GenericRequestCredential
	50, // 19: api.did.issuecredential.services.SendRequestRequestV2.request_credential:type_name -> api.did.issuecredential.types.RequestCredentialV2
	51, // 20: api.did.issuecredential.services.SendRequestRequestV3.request_credential:type_name -> api.did.issuecredential.types.RequestCredentialV3
	58, // 21: api.did.issuecredential.services.ActionsResponse.actions:type_name -> api.did.doc.types.Action
	59, // 22: api.did.issuecredential.services.GetCredentialSpecResponse.spec:type_name -> api.did.issuecredential.types.CredentialSpec
	59, // 23: api.did.issuecredential.services.IssueCredentialRequest.spec:type_name -> api.did.issuecredential.types.CredentialSpec
	53, // 24: api.did.issuecredential.services.IssueCredentialResponse.issue_credential:type_name -> api.did.issuecredential.types.IssueCredentialV2
	60, // 25: api.did.issuecredential.services.VerifyCredentialRequest.credential:type_name -> api.vc.types.VerifiableCredential
	59, // 26: api.did.issuecredential.services.VerifyCredentialRequest.spec:type_name -> api.did.issuecredential.types.CredentialSpec
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_api_did_issuecredential_services_issuecredential_proto_init() }
func file_api_did_issuecredential_services_issuecredential_proto_init() {
	if File_api_did_issuecredential_services_issuecredential_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptProposalRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptProposalRequestV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptOfferRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptOfferRequestV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptRequestRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptRequestRequestV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateProposalRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateProposalRequestV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegotiateProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProposalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProposalRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProposalRequestV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProposalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOfferRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOfferRequestV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequestRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequestRequestV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptProblemReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptProblemReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_issuecredential_services_issuecredential_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_did_issuecredential_services_issuecredential_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_did_issuecredential_services_issuecredential_proto_goTypes,
		DependencyIndexes: file_api_did_issuecredential_services_issuecredential_proto_depIdxs,
		MessageInfos:      file_api_did_issuecredential_services_issuecredential_proto_msgTypes,
	}.Build()
	File_api_did_issuecredential_services_issuecredential_proto = out.File
	file_api_did_issuecredential_services_issuecredential_proto_rawDesc = nil
	file_api_did_issuecredential_services_issuecredential_proto_goTypes = nil
	file_api_did_issuecredential_services_issuecredential_proto_depIdxs = nil
}
