syntax = "proto3";

package api.did.introduce.types;

option go_package = "github.com/bhatti/GSSI/api/did/introduce/types";
import "google/protobuf/any.proto";

import "api/did/doc/types/doc.proto";
import "api/did/doc/types/outofband.proto";

// Proposal defines proposal request.
message Proposal {
  string id = 1; // @id
  string type = 2; // @type
  To to = 3;
  bool nwise = 4;
  api.did.doc.types.Thread thread = 5; // ~thread
  api.did.doc.types.Timing timing = 6; //~timing
  string goal = 7;
  string goal_code = 8;
}

// To introducee descriptor keeps information about the introduction
// e.g introducer wants to introduce Bot to introducee { "name": "Bob" }.
message To {
  string name = 1;
  string description = 2;
  map<string, string> description_l10n = 3; // description~l10n
  string where = 4;
  ImgAttach img_attach = 5; // img~attach
  bool proposed = 6;
}

// ImgAttach represent information about the image.
message ImgAttach {
  string description = 1;
  string mime_type = 2; //mime-type
  string filename = 3;
  Content content = 4;
}

// Content keeps image data.
message Content {
  string link = 1;
  int64 byte_count = 2;
  string sha256 = 3;
}

// PleaseIntroduceTo includes all field from To structure
// also it has Discovered the field which should be provided by help-me-discover protocol.
message PleaseIntroduceTo {
  // nolint: staticcheck
  string name = 1;
  string description = 2;
  map<string, string> description_l10n = 3; // description~l10n
  string where = 4;
  ImgAttach img_attach = 5; // img~attach
  bool proposed = 6;
  // Discovered    Discovered `json:"discovered,omitempty"`
}

// Request is not part of any state machine, it can be sent at any time,
// and when it is received, the recipient can choose whether or not to honor it in their own way
// TODO: need to clarify about decorator ~please_ack and problem_report
//               should Request contain those fields? What type it should be for each field?
message Request {
  string id = 1; // @id
  string type = 2; // @type
  PleaseIntroduceTo please_introduce_to = 3;
  bool nwise = 4;
  api.did.doc.types.Timing timing = 5; // ~timing
}

// Response message that introducee usually sends in response to an introduction proposal.
message Response {
  string id = 1; // @id
  string type = 2; // @type
  api.did.doc.types.Thread thread = 3; // ~thread
  bool approve = 4;
  map<string, google.protobuf.Any> oob_message = 5; //oob-message
  repeated api.did.doc.types.Attachment attach = 6; //~attach
}

// Recipient keeps information needed for the service
// 'To' field is needed for the proposal message
// 'MyDID' and 'TheirDID' fields are needed for sending messages e.g report-problem, proposal, ack etc.
message Recipient {
  To to = 1;
  string goal = 2;
  string goal_code = 3;
  string my_did = 4;
  string their_did = 5;
}

// DescriptionL10N may contain locale field and key->val pair for translation
// e.g { "locale": "en", "es": "Donde se toma el MRI; no en el centro"},
// where locale field tells that field Description form To struct has en translation.
//DescriptionL10N map[string]string