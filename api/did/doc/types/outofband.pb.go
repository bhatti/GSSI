// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: api/did/doc/types/outofband.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TransportReturnRoute
type TransportReturnRoute int32

const (
	TransportReturnRoute_NONE   TransportReturnRoute = 0
	TransportReturnRoute_ALL    TransportReturnRoute = 1
	TransportReturnRoute_THREAD TransportReturnRoute = 2
)

// Enum value maps for TransportReturnRoute.
var (
	TransportReturnRoute_name = map[int32]string{
		0: "NONE",
		1: "ALL",
		2: "THREAD",
	}
	TransportReturnRoute_value = map[string]int32{
		"NONE":   0,
		"ALL":    1,
		"THREAD": 2,
	}
)

func (x TransportReturnRoute) Enum() *TransportReturnRoute {
	p := new(TransportReturnRoute)
	*p = x
	return p
}

func (x TransportReturnRoute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransportReturnRoute) Descriptor() protoreflect.EnumDescriptor {
	return file_api_did_doc_types_outofband_proto_enumTypes[0].Descriptor()
}

func (TransportReturnRoute) Type() protoreflect.EnumType {
	return &file_api_did_doc_types_outofband_proto_enumTypes[0]
}

func (x TransportReturnRoute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransportReturnRoute.Descriptor instead.
func (TransportReturnRoute) EnumDescriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{0}
}

// DIDCommVersion
type DIDCommVersion int32

const (
	DIDCommVersion_ANY DIDCommVersion = 0
	DIDCommVersion_V1  DIDCommVersion = 1
	DIDCommVersion_V2  DIDCommVersion = 2
)

// Enum value maps for DIDCommVersion.
var (
	DIDCommVersion_name = map[int32]string{
		0: "ANY",
		1: "V1",
		2: "V2",
	}
	DIDCommVersion_value = map[string]int32{
		"ANY": 0,
		"V1":  1,
		"V2":  2,
	}
)

func (x DIDCommVersion) Enum() *DIDCommVersion {
	p := new(DIDCommVersion)
	*p = x
	return p
}

func (x DIDCommVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DIDCommVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_api_did_doc_types_outofband_proto_enumTypes[1].Descriptor()
}

func (DIDCommVersion) Type() protoreflect.EnumType {
	return &file_api_did_doc_types_outofband_proto_enumTypes[1]
}

func (x DIDCommVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DIDCommVersion.Descriptor instead.
func (DIDCommVersion) EnumDescriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{1}
}

// Envelope for the DIDComm transport messages.
// swagger:model
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protected  string `protobuf:"bytes,1,opt,name=protected,proto3" json:"protected,omitempty"`
	Iv         string `protobuf:"bytes,2,opt,name=iv,proto3" json:"iv,omitempty"`
	Ciphertext string `protobuf:"bytes,3,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	Tag        string `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetProtected() string {
	if x != nil {
		return x.Protected
	}
	return ""
}

func (x *Envelope) GetIv() string {
	if x != nil {
		return x.Iv
	}
	return ""
}

func (x *Envelope) GetCiphertext() string {
	if x != nil {
		return x.Ciphertext
	}
	return ""
}

func (x *Envelope) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

// Forward route forward message.
// nolint:lll // url in the next line is long
// https://github.com/hyperledger/aries-rfcs/blob/main/concepts/0094-cross-domain-messaging/README.md#corerouting10forward
// swagger:model
type Forward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	To   string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Msg  []byte `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Forward) Reset() {
	*x = Forward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Forward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Forward) ProtoMessage() {}

func (x *Forward) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Forward.ProtoReflect.Descriptor instead.
func (*Forward) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{1}
}

func (x *Forward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Forward) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Forward) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Forward) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// ReturnRoute works with Transport decorator. Acceptable values - "none", "all" or "thread".
type ReturnRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnRoute string `protobuf:"bytes,1,opt,name=return_route,json=returnRoute,proto3" json:"return_route,omitempty"`
}

func (x *ReturnRoute) Reset() {
	*x = ReturnRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnRoute) ProtoMessage() {}

func (x *ReturnRoute) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnRoute.ProtoReflect.Descriptor instead.
func (*ReturnRoute) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{2}
}

func (x *ReturnRoute) GetReturnRoute() string {
	if x != nil {
		return x.ReturnRoute
	}
	return ""
}

// Transport transport decorator
// https://github.com/hyperledger/aries-rfcs/tree/master/features/0092-transport-return-route
type Transport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transport *ReturnRoute `protobuf:"bytes,1,opt,name=transport,proto3" json:"transport,omitempty"`
}

func (x *Transport) Reset() {
	*x = Transport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transport) ProtoMessage() {}

func (x *Transport) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transport.ProtoReflect.Descriptor instead.
func (*Transport) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{3}
}

func (x *Transport) GetTransport() *ReturnRoute {
	if x != nil {
		return x.Transport
	}
	return nil
}

// Action contains helpful information about action.
// swagger:model
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Protocol instance ID
	Piid         string                `protobuf:"bytes,1,opt,name=piid,proto3" json:"piid,omitempty"`
	Msg          map[string]*anypb.Any `protobuf:"bytes,2,rep,name=msg,proto3" json:"msg,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ProtocolName string                `protobuf:"bytes,3,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	MyDid        string                `protobuf:"bytes,4,opt,name=my_did,json=myDid,proto3" json:"my_did,omitempty"`
	TheirDid     string                `protobuf:"bytes,5,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{4}
}

func (x *Action) GetPiid() string {
	if x != nil {
		return x.Piid
	}
	return ""
}

func (x *Action) GetMsg() map[string]*anypb.Any {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Action) GetProtocolName() string {
	if x != nil {
		return x.ProtocolName
	}
	return ""
}

func (x *Action) GetMyDid() string {
	if x != nil {
		return x.MyDid
	}
	return ""
}

func (x *Action) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

// Attachment is intended to provide the possibility to include files, links or even JSON payload to the message.
// To find out more please visit https://github.com/hyperledger/aries-rfcs/tree/master/concepts/0017-attachments
// swagger:model
type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID is a JSON-LD construct that uniquely identifies attached content within the scope of a given message.
	// Recommended on appended attachment descriptors. Possible but generally unused on embedded attachment descriptors.
	// Never required if no references to the attachment exist; if omitted, then there is no way
	// to refer to the attachment later in the thread, in error messages, and so forth.
	// Because @id is used to compose URIs, it is recommended that this name be brief and avoid spaces
	// and other characters that require URI escaping.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // @id
	// Description is an optional human-readable description of the content.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// FileName is a hint about the name that might be used if this attachment is persisted as a file.
	// It is not required, and need not be unique. If this field is present and mime-type is not,
	// the extension on the filename may be used to infer a MIME type.
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	// MimeType describes the MIME type of the attached content. Optional but recommended.
	MimeType string `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"` // mime-type
	// LastModTime is a hint about when the content in this attachment was last modified.
	ExpiresTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_time,json=expiresTime,proto3" json:"expires_time,omitempty"`
	LastmodTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=lastmod_time,json=lastmodTime,proto3" json:"lastmod_time,omitempty"`
	// ByteCount is an optional, and mostly relevant when content is included by reference instead of by value.
	// Lets the receiver guess how expensive it will be, in time, bandwidth, and storage, to fully fetch the attachment.
	ByteCount int64 `protobuf:"varint,7,opt,name=byte_count,json=byteCount,proto3" json:"byte_count,omitempty"`
	// Data is a JSON object that gives access to the actual content of the attachment.
	Data *AttachmentData `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{5}
}

func (x *Attachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Attachment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Attachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Attachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Attachment) GetExpiresTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresTime
	}
	return nil
}

func (x *Attachment) GetLastmodTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastmodTime
	}
	return nil
}

func (x *Attachment) GetByteCount() int64 {
	if x != nil {
		return x.ByteCount
	}
	return 0
}

func (x *Attachment) GetData() *AttachmentData {
	if x != nil {
		return x.Data
	}
	return nil
}

// AttachmentV2 is intended to provide the possibility to include files, links or even JSON payload to the message.
// To find out more please visit https://identity.foundation/didcomm-messaging/spec/#attachments
// swagger:model
type AttachmentV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID is a JSON-LD construct that uniquely identifies attached content within the scope of a given message.
	// Recommended on appended attachment descriptors. Possible but generally unused on embedded attachment descriptors.
	// Never required if no references to the attachment exist; if omitted, then there is no way
	// to refer to the attachment later in the thread, in error messages, and so forth.
	// Because @id is used to compose URIs, it is recommended that this name be brief and avoid spaces
	// and other characters that require URI escaping.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Description is an optional human-readable description of the content.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// FileName is a hint about the name that might be used if this attachment is persisted as a file.
	// It is not required, and need not be unique. If this field is present and mime-type is not,
	// the extension on the filename may be used to infer a MIME type.
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	// MediaType describes the MIME type of the attached content. Optional but recommended.
	MediaType string `protobuf:"bytes,4,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	// LastModTime is a hint about when the content in this attachment was last modified.
	LastmodTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=lastmod_time,json=lastmodTime,proto3" json:"lastmod_time,omitempty"`
	// ByteCount is an optional, and mostly relevant when content is included by reference instead of by value.
	// Lets the receiver guess how expensive it will be, in time, bandwidth, and storage, to fully fetch the attachment.
	ByteCount int64 `protobuf:"varint,6,opt,name=byte_count,json=byteCount,proto3" json:"byte_count,omitempty"`
	// Data is a JSON object that gives access to the actual content of the attachment.
	Data *AttachmentData `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	// Format describes the format of the attachment if the media_type is not sufficient.
	Format string `protobuf:"bytes,8,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *AttachmentV2) Reset() {
	*x = AttachmentV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentV2) ProtoMessage() {}

func (x *AttachmentV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentV2.ProtoReflect.Descriptor instead.
func (*AttachmentV2) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{6}
}

func (x *AttachmentV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachmentV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AttachmentV2) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *AttachmentV2) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *AttachmentV2) GetLastmodTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastmodTime
	}
	return nil
}

func (x *AttachmentV2) GetByteCount() int64 {
	if x != nil {
		return x.ByteCount
	}
	return 0
}

func (x *AttachmentV2) GetData() *AttachmentData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AttachmentV2) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

// GenericAttachment is used to work with DIDComm attachments that can be either DIDComm v1 or DIDComm v2.
// swagger:model
type GenericAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID is the attachment ID..
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Description is an optional human-readable description of the content.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// FileName is a hint about the name that might be used if this attachment is persisted as a file.
	// It is not required, and need not be unique. If this field is present and mime-type is not,
	// the extension on the filename may be used to infer a MIME type.
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	// MediaType describes the MIME type of the attached content in a DIDComm v2 attachment. Optional but recommended.
	MediaType string `protobuf:"bytes,4,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	// LastModTime is a hint about when the content in this attachment was last modified.
	LastmodTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=lastmod_time,json=lastmodTime,proto3" json:"lastmod_time,omitempty"`
	// ByteCount is an optional, and mostly relevant when content is included by reference instead of by value.
	// Lets the receiver guess how expensive it will be, in time, bandwidth, and storage, to fully fetch the attachment.
	ByteCount int64 `protobuf:"varint,6,opt,name=byte_count,json=byteCount,proto3" json:"byte_count,omitempty"`
	// Data is a JSON object that gives access to the actual content of the attachment.
	Data *AttachmentData `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	// Format describes the format of the attachment if the media_type is not sufficient, in a DIDComm v2 attachment.
	Format  string `protobuf:"bytes,8,opt,name=format,proto3" json:"format,omitempty"`
	Version string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GenericAttachment) Reset() {
	*x = GenericAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericAttachment) ProtoMessage() {}

func (x *GenericAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericAttachment.ProtoReflect.Descriptor instead.
func (*GenericAttachment) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{7}
}

func (x *GenericAttachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GenericAttachment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GenericAttachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GenericAttachment) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *GenericAttachment) GetLastmodTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastmodTime
	}
	return nil
}

func (x *GenericAttachment) GetByteCount() int64 {
	if x != nil {
		return x.ByteCount
	}
	return 0
}

func (x *GenericAttachment) GetData() *AttachmentData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GenericAttachment) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *GenericAttachment) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// GenericInvitation holds either a DIDComm V1 or V2 invitation.
// swagger:model
type GenericInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type               string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	From               string               `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Label              string               `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Goal               string               `protobuf:"bytes,5,opt,name=goal,proto3" json:"goal,omitempty"`
	GoalCode           string               `protobuf:"bytes,6,opt,name=goal_code,json=goalCode,proto3" json:"goal_code,omitempty"`
	Services           []*anypb.Any         `protobuf:"bytes,7,rep,name=services,proto3" json:"services,omitempty"`
	Accept             []string             `protobuf:"bytes,8,rep,name=accept,proto3" json:"accept,omitempty"`
	HandshakeProtocols []string             `protobuf:"bytes,9,rep,name=handshake_protocols,json=handshakeProtocols,proto3" json:"handshake_protocols,omitempty"`
	Attachments        []*GenericAttachment `protobuf:"bytes,10,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Version            string               `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GenericInvitation) Reset() {
	*x = GenericInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericInvitation) ProtoMessage() {}

func (x *GenericInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericInvitation.ProtoReflect.Descriptor instead.
func (*GenericInvitation) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{8}
}

func (x *GenericInvitation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GenericInvitation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GenericInvitation) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GenericInvitation) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GenericInvitation) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *GenericInvitation) GetGoalCode() string {
	if x != nil {
		return x.GoalCode
	}
	return ""
}

func (x *GenericInvitation) GetServices() []*anypb.Any {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *GenericInvitation) GetAccept() []string {
	if x != nil {
		return x.Accept
	}
	return nil
}

func (x *GenericInvitation) GetHandshakeProtocols() []string {
	if x != nil {
		return x.HandshakeProtocols
	}
	return nil
}

func (x *GenericInvitation) GetAttachments() []*GenericAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *GenericInvitation) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// OOBInvitation to connect with did-exchange.
// swagger:model
type OOBInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of this invitation (for record-keeping purposes).
	// TODO can we remove this?
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // @id
	// TODO remove this
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	// ID of the thread from which this invitation originated.
	// This will become the parent thread ID of the didexchange protocol instance.
	ThreadID string `protobuf:"bytes,3,opt,name=threadID,proto3" json:"threadID,omitempty"`
	// TheirLabel is the label on the other party's connection invitation.
	TheirLabel string `protobuf:"bytes,4,opt,name=theirLabel,proto3" json:"theirLabel,omitempty"`
	// MyLabel is the label we will use during the did-exchange.
	MyLabel string `protobuf:"bytes,5,opt,name=myLabel,proto3" json:"myLabel,omitempty"`
	// Target destination.
	// This can be any on of:
	// - a string with a valid DID
	// - a valid `did.Service`
	Target *anypb.Any `protobuf:"bytes,6,opt,name=target,proto3" json:"target,omitempty"`
	// MediaTypeProfiles are the message format profiles supported by the sender of this invitation
	// as defined in RFC 0044.
	MediaTypeProfiles []string `protobuf:"bytes,7,rep,name=mediaTypeProfiles,proto3" json:"mediaTypeProfiles,omitempty"`
}

func (x *OOBInvitation) Reset() {
	*x = OOBInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OOBInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OOBInvitation) ProtoMessage() {}

func (x *OOBInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OOBInvitation.ProtoReflect.Descriptor instead.
func (*OOBInvitation) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{9}
}

func (x *OOBInvitation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OOBInvitation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OOBInvitation) GetThreadID() string {
	if x != nil {
		return x.ThreadID
	}
	return ""
}

func (x *OOBInvitation) GetTheirLabel() string {
	if x != nil {
		return x.TheirLabel
	}
	return ""
}

func (x *OOBInvitation) GetMyLabel() string {
	if x != nil {
		return x.MyLabel
	}
	return ""
}

func (x *OOBInvitation) GetTarget() *anypb.Any {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *OOBInvitation) GetMediaTypeProfiles() []string {
	if x != nil {
		return x.MediaTypeProfiles
	}
	return nil
}

// Invitation is this protocol's `invitation` message.
// Invitation defines DID exchange invitation message
// https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange#0-invitation-to-exchange
//  to 'Invitation'.
// swagger:model
type Invitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the ID of the connection invitation
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // @id
	// the Type of the connection invitation
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	// the Label of the connection invitation
	Label              string        `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Goal               string        `protobuf:"bytes,4,opt,name=goal,proto3" json:"goal,omitempty"`
	GoalCode           string        `protobuf:"bytes,5,opt,name=goal_code,json=goalCode,proto3" json:"goal_code,omitempty"`
	Services           []*anypb.Any  `protobuf:"bytes,6,rep,name=services,proto3" json:"services,omitempty"` // Services is an array of either DIDs or 'services' block entries
	Accept             []string      `protobuf:"bytes,7,rep,name=accept,proto3" json:"accept,omitempty"`
	HandshakeProtocols []string      `protobuf:"bytes,8,rep,name=handshake_protocols,json=handshakeProtocols,proto3" json:"handshake_protocols,omitempty"`
	RequestAttach      []*Attachment `protobuf:"bytes,9,rep,name=request_attach,json=requestAttach,proto3" json:"request_attach,omitempty"`
	// Invitation is this protocol's `invitation` message.
	From   string          `protobuf:"bytes,10,opt,name=from,proto3" json:"from,omitempty"`
	Body   *InvitationBody `protobuf:"bytes,11,opt,name=body,proto3" json:"body,omitempty"`
	Attach []*AttachmentV2 `protobuf:"bytes,12,rep,name=attach,proto3" json:"attach,omitempty"`
	// https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange#0-invitation-to-exchange
	// the Image URL of the connection invitation
	ImageUrl string `protobuf:"bytes,13,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	// the Service endpoint of the connection invitation
	ServiceEndpoint string `protobuf:"bytes,14,opt,name=serviceEndpoint,proto3" json:"serviceEndpoint,omitempty"`
	// the RecipientKeys for the connection invitation
	RecipientKeys []string `protobuf:"bytes,15,rep,name=recipientKeys,proto3" json:"recipientKeys,omitempty"`
	// the DID of the connection invitation
	Did string `protobuf:"bytes,16,opt,name=did,proto3" json:"did,omitempty"`
	// the RoutingKeys of the connection invitation
	RoutingKeys []string `protobuf:"bytes,17,rep,name=routingKeys,proto3" json:"routingKeys,omitempty"`
	Thread      *Thread  `protobuf:"bytes,18,opt,name=thread,proto3" json:"thread,omitempty"` // ~thread
}

func (x *Invitation) Reset() {
	*x = Invitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invitation) ProtoMessage() {}

func (x *Invitation) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invitation.ProtoReflect.Descriptor instead.
func (*Invitation) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{10}
}

func (x *Invitation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Invitation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Invitation) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Invitation) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *Invitation) GetGoalCode() string {
	if x != nil {
		return x.GoalCode
	}
	return ""
}

func (x *Invitation) GetServices() []*anypb.Any {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Invitation) GetAccept() []string {
	if x != nil {
		return x.Accept
	}
	return nil
}

func (x *Invitation) GetHandshakeProtocols() []string {
	if x != nil {
		return x.HandshakeProtocols
	}
	return nil
}

func (x *Invitation) GetRequestAttach() []*Attachment {
	if x != nil {
		return x.RequestAttach
	}
	return nil
}

func (x *Invitation) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Invitation) GetBody() *InvitationBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Invitation) GetAttach() []*AttachmentV2 {
	if x != nil {
		return x.Attach
	}
	return nil
}

func (x *Invitation) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Invitation) GetServiceEndpoint() string {
	if x != nil {
		return x.ServiceEndpoint
	}
	return ""
}

func (x *Invitation) GetRecipientKeys() []string {
	if x != nil {
		return x.RecipientKeys
	}
	return nil
}

func (x *Invitation) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *Invitation) GetRoutingKeys() []string {
	if x != nil {
		return x.RoutingKeys
	}
	return nil
}

func (x *Invitation) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

// InvitationBody contains invitation's goal and accept headers.
// swagger:model
type InvitationBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goal     string   `protobuf:"bytes,1,opt,name=goal,proto3" json:"goal,omitempty"`
	GoalCode string   `protobuf:"bytes,2,opt,name=goal_code,json=goalCode,proto3" json:"goal_code,omitempty"`
	Accept   []string `protobuf:"bytes,3,rep,name=accept,proto3" json:"accept,omitempty"`
}

func (x *InvitationBody) Reset() {
	*x = InvitationBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationBody) ProtoMessage() {}

func (x *InvitationBody) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationBody.ProtoReflect.Descriptor instead.
func (*InvitationBody) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{11}
}

func (x *InvitationBody) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *InvitationBody) GetGoalCode() string {
	if x != nil {
		return x.GoalCode
	}
	return ""
}

func (x *InvitationBody) GetAccept() []string {
	if x != nil {
		return x.Accept
	}
	return nil
}

// HandshakeReuse is this protocol's 'handshake-reuse' message.
// swagger:model
type HandshakeReuse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
}

func (x *HandshakeReuse) Reset() {
	*x = HandshakeReuse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeReuse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeReuse) ProtoMessage() {}

func (x *HandshakeReuse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeReuse.ProtoReflect.Descriptor instead.
func (*HandshakeReuse) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{12}
}

func (x *HandshakeReuse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HandshakeReuse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// HandshakeReuseAccepted is this protocol's 'handshake-reuse-accepted' message.
// swagger:model
type HandshakeReuseAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
}

func (x *HandshakeReuseAccepted) Reset() {
	*x = HandshakeReuseAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeReuseAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeReuseAccepted) ProtoMessage() {}

func (x *HandshakeReuseAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeReuseAccepted.ProtoReflect.Descriptor instead.
func (*HandshakeReuseAccepted) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{13}
}

func (x *HandshakeReuseAccepted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HandshakeReuseAccepted) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// AttachmentData contains attachment payload.
// swagger:model
type AttachmentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sha256 is a hash of the content. Optional. Used as an integrity check if content is inlined.
	// if content is only referenced, then including this field makes the content tamper-evident.
	// This may be redundant, if the content is stored in an inherently immutable container like
	// content-addressable storage. This may also be undesirable, if dynamic content at a specified
	// link is beneficial. Including a hash without including a way to fetch the content via link
	// is a form of proof of existence.
	Sha256 string `protobuf:"bytes,1,opt,name=sha256,proto3" json:"sha256,omitempty"`
	// Links is a list of zero or more locations at which the content may be fetched.
	Links []string `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
	// Base64 encoded data, when representing arbitrary content inline instead of via links. Optional.
	Base64 string `protobuf:"bytes,3,opt,name=base64,proto3" json:"base64,omitempty"`
	// JSON is a directly embedded JSON data, when representing content inline instead of via links,
	// and when the content is natively conveyable as JSON. Optional.
	Json *anypb.Any `protobuf:"bytes,4,opt,name=json,proto3" json:"json,omitempty"` // interface{}
	// JWS is a JSON web signature over the encoded data, in detached format.
	Jws *anypb.Any `protobuf:"bytes,5,opt,name=jws,proto3" json:"jws,omitempty"` // raw-json
}

func (x *AttachmentData) Reset() {
	*x = AttachmentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentData) ProtoMessage() {}

func (x *AttachmentData) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentData.ProtoReflect.Descriptor instead.
func (*AttachmentData) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{14}
}

func (x *AttachmentData) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *AttachmentData) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *AttachmentData) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

func (x *AttachmentData) GetJson() *anypb.Any {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *AttachmentData) GetJws() *anypb.Any {
	if x != nil {
		return x.Jws
	}
	return nil
}

// WebRedirect decorator for passing web redirect info to ask recipient of the message
// to redirect after completion of flow.
type WebRedirect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the operation,
	// Refer https://github.com/hyperledger/aries-rfcs/blob/main/features/0015-acks/README.md#ack-status.
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// URL to which recipient of this message is being requested to redirect.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *WebRedirect) Reset() {
	*x = WebRedirect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRedirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRedirect) ProtoMessage() {}

func (x *WebRedirect) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRedirect.ProtoReflect.Descriptor instead.
func (*WebRedirect) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{15}
}

func (x *WebRedirect) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WebRedirect) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Ack acknowledgement struct.
// swagger:model
type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type        string       `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	Status      string       `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Thread      *Thread      `protobuf:"bytes,4,opt,name=thread,proto3" json:"thread,omitempty"`                              // ~thread
	WebRedirect *WebRedirect `protobuf:"bytes,5,opt,name=web_redirect,json=webRedirect,proto3" json:"web_redirect,omitempty"` // ~web-redirect
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{16}
}

func (x *Ack) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ack) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Ack) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Ack) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *Ack) GetWebRedirect() *WebRedirect {
	if x != nil {
		return x.WebRedirect
	}
	return nil
}

// AckV2 acknowledgement struct.
// swagger:model
type AckV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // @id
	Type        string       `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                  // @type
	WebRedirect *WebRedirect `protobuf:"bytes,3,opt,name=web_redirect,json=webRedirect,proto3" json:"web_redirect,omitempty"` // ~web-redirect
	Body        *AckV2Body   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *AckV2) Reset() {
	*x = AckV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckV2) ProtoMessage() {}

func (x *AckV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckV2.ProtoReflect.Descriptor instead.
func (*AckV2) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{17}
}

func (x *AckV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AckV2) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AckV2) GetWebRedirect() *WebRedirect {
	if x != nil {
		return x.WebRedirect
	}
	return nil
}

func (x *AckV2) GetBody() *AckV2Body {
	if x != nil {
		return x.Body
	}
	return nil
}

// AckV2Body represents body for AckV2.
type AckV2Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AckV2Body) Reset() {
	*x = AckV2Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckV2Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckV2Body) ProtoMessage() {}

func (x *AckV2Body) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckV2Body.ProtoReflect.Descriptor instead.
func (*AckV2Body) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{18}
}

func (x *AckV2Body) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Request defines a2a DID exchange request
// https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange#1-exchange-request
// swagger:model
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type   string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	Label  string  `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Thread *Thread `protobuf:"bytes,4,opt,name=thread,proto3" json:"thread,omitempty"` // ~thread
	// DID the did of the requester.
	// Mandatory in did-exchange, but optional for backwards-compatibility with rfc 0160 connection protocol.
	Did string `protobuf:"bytes,5,opt,name=did,proto3" json:"did,omitempty"`
	// DocAttach an attachment containing the did doc of the requester.
	// Optional, a requester may provide a publicly-resolvable DID, rather than including an attached did doc.
	DidDocAttach *Attachment `protobuf:"bytes,6,opt,name=did_doc_attach,json=didDocAttach,proto3" json:"did_doc_attach,omitempty"` // ~attach
	// Connection is used for backwards-compatibility with rfc 0160 connection protocol.
	Connection *Connection `protobuf:"bytes,7,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{19}
}

func (x *Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Request) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Request) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Request) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *Request) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *Request) GetDidDocAttach() *Attachment {
	if x != nil {
		return x.DidDocAttach
	}
	return nil
}

func (x *Request) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

// Response defines a2a DID exchange response
// https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange#2-exchange-response
// swagger:model
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                            // @id
	Type          string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                        // @type
	Thread        *Thread              `protobuf:"bytes,3,opt,name=thread,proto3" json:"thread,omitempty"`                                    // ~thread
	ConnectionSig *ConnectionSignature `protobuf:"bytes,4,opt,name=connection_sig,json=connectionSig,proto3" json:"connection_sig,omitempty"` // ~sig
	// DID the did of the responder.
	// Mandatory in did-exchange, but optional for backwards-compatibility with rfc 0160 connection protocol.
	Did string `protobuf:"bytes,5,opt,name=did,proto3" json:"did,omitempty"`
	// DocAttach an attachment containing the did doc of the responder.
	// Optional, a responder may provide a publicly-resolvable DID, rather than including an attached did doc.
	DidDocAttach *Attachment `protobuf:"bytes,6,opt,name=did_doc_attach,json=didDocAttach,proto3" json:"did_doc_attach,omitempty"` // ~attach
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{20}
}

func (x *Response) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Response) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Response) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *Response) GetConnectionSig() *ConnectionSignature {
	if x != nil {
		return x.ConnectionSig
	}
	return nil
}

func (x *Response) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *Response) GetDidDocAttach() *Attachment {
	if x != nil {
		return x.DidDocAttach
	}
	return nil
}

// ConnectionSignature connection signature.
// swagger:model
type ConnectionSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // @type
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	SigData   string `protobuf:"bytes,3,opt,name=sig_data,json=sigData,proto3" json:"sig_data,omitempty"`
	Signers   string `protobuf:"bytes,4,opt,name=signers,proto3" json:"signers,omitempty"`
}

func (x *ConnectionSignature) Reset() {
	*x = ConnectionSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionSignature) ProtoMessage() {}

func (x *ConnectionSignature) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionSignature.ProtoReflect.Descriptor instead.
func (*ConnectionSignature) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{21}
}

func (x *ConnectionSignature) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConnectionSignature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ConnectionSignature) GetSigData() string {
	if x != nil {
		return x.SigData
	}
	return ""
}

func (x *ConnectionSignature) GetSigners() string {
	if x != nil {
		return x.Signers
	}
	return ""
}

// Connection connection.
// swagger:model
type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did    string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	DidDoc *Doc   `protobuf:"bytes,2,opt,name=did_doc,json=didDoc,proto3" json:"did_doc,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{22}
}

func (x *Connection) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *Connection) GetDidDoc() *Doc {
	if x != nil {
		return x.DidDoc
	}
	return nil
}

// Complete defines a2a DID exchange complete message.
// https://github.com/hyperledger/aries-rfcs/tree/master/features/0023-did-exchange#3-exchange-complete
// swagger:model
type Complete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // @id
	Type   string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`     // @type
	Thread *Thread `protobuf:"bytes,3,opt,name=thread,proto3" json:"thread,omitempty"` // ~thread
}

func (x *Complete) Reset() {
	*x = Complete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Complete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Complete) ProtoMessage() {}

func (x *Complete) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Complete.ProtoReflect.Descriptor instead.
func (*Complete) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{23}
}

func (x *Complete) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Complete) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Complete) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

// ProblemReport problem report definition
// TODO: need to provide full ProblemReport structure https://github.com/hyperledger/aries-framework-go/issues/912
// swagger:model
type ProblemReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type        string       `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	Description *Code        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	WebRedirect *WebRedirect `protobuf:"bytes,4,opt,name=web_redirect,json=webRedirect,proto3" json:"web_redirect,omitempty"` // ~web-redirect
}

func (x *ProblemReport) Reset() {
	*x = ProblemReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemReport) ProtoMessage() {}

func (x *ProblemReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemReport.ProtoReflect.Descriptor instead.
func (*ProblemReport) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{24}
}

func (x *ProblemReport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProblemReport) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProblemReport) GetDescription() *Code {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ProblemReport) GetWebRedirect() *WebRedirect {
	if x != nil {
		return x.WebRedirect
	}
	return nil
}

// Code represents a problem report code.
type Code struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Code) Reset() {
	*x = Code{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Code) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Code) ProtoMessage() {}

func (x *Code) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Code.ProtoReflect.Descriptor instead.
func (*Code) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{25}
}

func (x *Code) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// ProblemReportV2 problem report definition.
// swagger:model
type ProblemReportV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	Body *ProblemReportV2Body `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ProblemReportV2) Reset() {
	*x = ProblemReportV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemReportV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemReportV2) ProtoMessage() {}

func (x *ProblemReportV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemReportV2.ProtoReflect.Descriptor instead.
func (*ProblemReportV2) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{26}
}

func (x *ProblemReportV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProblemReportV2) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProblemReportV2) GetBody() *ProblemReportV2Body {
	if x != nil {
		return x.Body
	}
	return nil
}

// ProblemReportV2Body represents body for ProblemReportV2.
type ProblemReportV2Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Comment     string       `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Args        []string     `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	EscalateTo  string       `protobuf:"bytes,4,opt,name=escalate_to,json=escalateTo,proto3" json:"escalate_to,omitempty"`
	WebRedirect *WebRedirect `protobuf:"bytes,5,opt,name=web_redirect,json=webRedirect,proto3" json:"web_redirect,omitempty"` // ~web-redirect
}

func (x *ProblemReportV2Body) Reset() {
	*x = ProblemReportV2Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_doc_types_outofband_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemReportV2Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemReportV2Body) ProtoMessage() {}

func (x *ProblemReportV2Body) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_doc_types_outofband_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemReportV2Body.ProtoReflect.Descriptor instead.
func (*ProblemReportV2Body) Descriptor() ([]byte, []int) {
	return file_api_did_doc_types_outofband_proto_rawDescGZIP(), []int{27}
}

func (x *ProblemReportV2Body) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProblemReportV2Body) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ProblemReportV2Body) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ProblemReportV2Body) GetEscalateTo() string {
	if x != nil {
		return x.EscalateTo
	}
	return ""
}

func (x *ProblemReportV2Body) GetWebRedirect() *WebRedirect {
	if x != nil {
		return x.WebRedirect
	}
	return nil
}

var File_api_did_doc_types_outofband_proto protoreflect.FileDescriptor

var file_api_did_doc_types_outofband_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x62, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x64, 0x6f, 0x63, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6a, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x76, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x4f, 0x0a, 0x07, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x30, 0x0a, 0x0b,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x49,
	0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xf9, 0x01, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e,
	0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4d, 0x73, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x79, 0x44, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68,
	0x65, 0x69, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x68, 0x65, 0x69, 0x72, 0x44, 0x69, 0x64, 0x1a, 0x4c, 0x0a, 0x08, 0x4d, 0x73, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcb, 0x02, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3d, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa8, 0x02, 0x0a, 0x0c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xc7,
	0x02, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xef, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x6f, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe5, 0x01, 0x0a, 0x0d, 0x4f,
	0x4f, 0x42, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x68, 0x65, 0x69, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x68, 0x65, 0x69, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x22, 0x8f, 0x05, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x6f, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
	0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x22, 0x59, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x6f, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22,
	0x34, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x75, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x16, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x52, 0x65, 0x75, 0x73, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x28, 0x0a, 0x04,
	0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x03, 0x6a, 0x77, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x6a, 0x77, 0x73, 0x22, 0x37,
	0x0a, 0x0b, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xb7, 0x01, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x41,
	0x0a, 0x0c, 0x77, 0x65, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64,
	0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x22, 0xa0, 0x01, 0x0a, 0x05, 0x41, 0x63, 0x6b, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x41, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e,
	0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x6b, 0x56, 0x32, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x23, 0x0a, 0x09, 0x41, 0x63, 0x6b, 0x56, 0x32, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x31, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x64, 0x69, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x64, 0x69, 0x64,
	0x44, 0x6f, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x4d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64,
	0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x43, 0x0a,
	0x0e, 0x64, 0x69, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e,
	0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x64, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x22, 0x7c, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73,
	0x22, 0x4f, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x52, 0x06, 0x64, 0x69, 0x64, 0x44, 0x6f,
	0x63, 0x22, 0x61, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x5f, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x77, 0x65, 0x62,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x1a, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x71, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x32, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xbb, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x32, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x12, 0x41, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x62,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x2a, 0x35, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x10, 0x02, 0x2a, 0x29, 0x0a, 0x0e,
	0x44, 0x49, 0x44, 0x43, 0x6f, 0x6d, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x31, 0x10, 0x01, 0x12,
	0x06, 0x0a, 0x02, 0x56, 0x32, 0x10, 0x02, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x61, 0x74, 0x74, 0x69, 0x2f, 0x47, 0x53, 0x53,
	0x49, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_did_doc_types_outofband_proto_rawDescOnce sync.Once
	file_api_did_doc_types_outofband_proto_rawDescData = file_api_did_doc_types_outofband_proto_rawDesc
)

func file_api_did_doc_types_outofband_proto_rawDescGZIP() []byte {
	file_api_did_doc_types_outofband_proto_rawDescOnce.Do(func() {
		file_api_did_doc_types_outofband_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_did_doc_types_outofband_proto_rawDescData)
	})
	return file_api_did_doc_types_outofband_proto_rawDescData
}

var file_api_did_doc_types_outofband_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_did_doc_types_outofband_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_api_did_doc_types_outofband_proto_goTypes = []interface{}{
	(TransportReturnRoute)(0),      // 0: api.did.doc.types.TransportReturnRoute
	(DIDCommVersion)(0),            // 1: api.did.doc.types.DIDCommVersion
	(*Envelope)(nil),               // 2: api.did.doc.types.Envelope
	(*Forward)(nil),                // 3: api.did.doc.types.Forward
	(*ReturnRoute)(nil),            // 4: api.did.doc.types.ReturnRoute
	(*Transport)(nil),              // 5: api.did.doc.types.Transport
	(*Action)(nil),                 // 6: api.did.doc.types.Action
	(*Attachment)(nil),             // 7: api.did.doc.types.Attachment
	(*AttachmentV2)(nil),           // 8: api.did.doc.types.AttachmentV2
	(*GenericAttachment)(nil),      // 9: api.did.doc.types.GenericAttachment
	(*GenericInvitation)(nil),      // 10: api.did.doc.types.GenericInvitation
	(*OOBInvitation)(nil),          // 11: api.did.doc.types.OOBInvitation
	(*Invitation)(nil),             // 12: api.did.doc.types.Invitation
	(*InvitationBody)(nil),         // 13: api.did.doc.types.InvitationBody
	(*HandshakeReuse)(nil),         // 14: api.did.doc.types.HandshakeReuse
	(*HandshakeReuseAccepted)(nil), // 15: api.did.doc.types.HandshakeReuseAccepted
	(*AttachmentData)(nil),         // 16: api.did.doc.types.AttachmentData
	(*WebRedirect)(nil),            // 17: api.did.doc.types.WebRedirect
	(*Ack)(nil),                    // 18: api.did.doc.types.Ack
	(*AckV2)(nil),                  // 19: api.did.doc.types.AckV2
	(*AckV2Body)(nil),              // 20: api.did.doc.types.AckV2Body
	(*Request)(nil),                // 21: api.did.doc.types.Request
	(*Response)(nil),               // 22: api.did.doc.types.Response
	(*ConnectionSignature)(nil),    // 23: api.did.doc.types.ConnectionSignature
	(*Connection)(nil),             // 24: api.did.doc.types.Connection
	(*Complete)(nil),               // 25: api.did.doc.types.Complete
	(*ProblemReport)(nil),          // 26: api.did.doc.types.ProblemReport
	(*Code)(nil),                   // 27: api.did.doc.types.Code
	(*ProblemReportV2)(nil),        // 28: api.did.doc.types.ProblemReportV2
	(*ProblemReportV2Body)(nil),    // 29: api.did.doc.types.ProblemReportV2Body
	nil,                            // 30: api.did.doc.types.Action.MsgEntry
	(*timestamppb.Timestamp)(nil),  // 31: google.protobuf.Timestamp
	(*anypb.Any)(nil),              // 32: google.protobuf.Any
	(*Thread)(nil),                 // 33: api.did.doc.types.Thread
	(*Doc)(nil),                    // 34: api.did.doc.types.Doc
}
var file_api_did_doc_types_outofband_proto_depIdxs = []int32{
	4,  // 0: api.did.doc.types.Transport.transport:type_name -> api.did.doc.types.ReturnRoute
	30, // 1: api.did.doc.types.Action.msg:type_name -> api.did.doc.types.Action.MsgEntry
	31, // 2: api.did.doc.types.Attachment.expires_time:type_name -> google.protobuf.Timestamp
	31, // 3: api.did.doc.types.Attachment.lastmod_time:type_name -> google.protobuf.Timestamp
	16, // 4: api.did.doc.types.Attachment.data:type_name -> api.did.doc.types.AttachmentData
	31, // 5: api.did.doc.types.AttachmentV2.lastmod_time:type_name -> google.protobuf.Timestamp
	16, // 6: api.did.doc.types.AttachmentV2.data:type_name -> api.did.doc.types.AttachmentData
	31, // 7: api.did.doc.types.GenericAttachment.lastmod_time:type_name -> google.protobuf.Timestamp
	16, // 8: api.did.doc.types.GenericAttachment.data:type_name -> api.did.doc.types.AttachmentData
	32, // 9: api.did.doc.types.GenericInvitation.services:type_name -> google.protobuf.Any
	9,  // 10: api.did.doc.types.GenericInvitation.attachments:type_name -> api.did.doc.types.GenericAttachment
	32, // 11: api.did.doc.types.OOBInvitation.target:type_name -> google.protobuf.Any
	32, // 12: api.did.doc.types.Invitation.services:type_name -> google.protobuf.Any
	7,  // 13: api.did.doc.types.Invitation.request_attach:type_name -> api.did.doc.types.Attachment
	13, // 14: api.did.doc.types.Invitation.body:type_name -> api.did.doc.types.InvitationBody
	8,  // 15: api.did.doc.types.Invitation.attach:type_name -> api.did.doc.types.AttachmentV2
	33, // 16: api.did.doc.types.Invitation.thread:type_name -> api.did.doc.types.Thread
	32, // 17: api.did.doc.types.AttachmentData.json:type_name -> google.protobuf.Any
	32, // 18: api.did.doc.types.AttachmentData.jws:type_name -> google.protobuf.Any
	33, // 19: api.did.doc.types.Ack.thread:type_name -> api.did.doc.types.Thread
	17, // 20: api.did.doc.types.Ack.web_redirect:type_name -> api.did.doc.types.WebRedirect
	17, // 21: api.did.doc.types.AckV2.web_redirect:type_name -> api.did.doc.types.WebRedirect
	20, // 22: api.did.doc.types.AckV2.body:type_name -> api.did.doc.types.AckV2Body
	33, // 23: api.did.doc.types.Request.thread:type_name -> api.did.doc.types.Thread
	7,  // 24: api.did.doc.types.Request.did_doc_attach:type_name -> api.did.doc.types.Attachment
	24, // 25: api.did.doc.types.Request.connection:type_name -> api.did.doc.types.Connection
	33, // 26: api.did.doc.types.Response.thread:type_name -> api.did.doc.types.Thread
	23, // 27: api.did.doc.types.Response.connection_sig:type_name -> api.did.doc.types.ConnectionSignature
	7,  // 28: api.did.doc.types.Response.did_doc_attach:type_name -> api.did.doc.types.Attachment
	34, // 29: api.did.doc.types.Connection.did_doc:type_name -> api.did.doc.types.Doc
	33, // 30: api.did.doc.types.Complete.thread:type_name -> api.did.doc.types.Thread
	27, // 31: api.did.doc.types.ProblemReport.description:type_name -> api.did.doc.types.Code
	17, // 32: api.did.doc.types.ProblemReport.web_redirect:type_name -> api.did.doc.types.WebRedirect
	29, // 33: api.did.doc.types.ProblemReportV2.body:type_name -> api.did.doc.types.ProblemReportV2Body
	17, // 34: api.did.doc.types.ProblemReportV2Body.web_redirect:type_name -> api.did.doc.types.WebRedirect
	32, // 35: api.did.doc.types.Action.MsgEntry.value:type_name -> google.protobuf.Any
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_api_did_doc_types_outofband_proto_init() }
func file_api_did_doc_types_outofband_proto_init() {
	if File_api_did_doc_types_outofband_proto != nil {
		return
	}
	file_api_did_doc_types_doc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_did_doc_types_outofband_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Forward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OOBInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeReuse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandshakeReuseAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRedirect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckV2Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Complete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Code); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemReportV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_doc_types_outofband_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProblemReportV2Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_did_doc_types_outofband_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_did_doc_types_outofband_proto_goTypes,
		DependencyIndexes: file_api_did_doc_types_outofband_proto_depIdxs,
		EnumInfos:         file_api_did_doc_types_outofband_proto_enumTypes,
		MessageInfos:      file_api_did_doc_types_outofband_proto_msgTypes,
	}.Build()
	File_api_did_doc_types_outofband_proto = out.File
	file_api_did_doc_types_outofband_proto_rawDesc = nil
	file_api_did_doc_types_outofband_proto_goTypes = nil
	file_api_did_doc_types_outofband_proto_depIdxs = nil
}
