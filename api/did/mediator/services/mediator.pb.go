// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: api/did/mediator/services/mediator.proto

package services

import (
	types "github.com/bhatti/GSSI/api/did/doc/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RegisterRoute contains parameters for registering/reconnecting router.
type RegisterRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection_ID string `protobuf:"bytes,1,opt,name=connection_ID,json=connectionID,proto3" json:"connection_ID,omitempty"`
}

func (x *RegisterRoute) Reset() {
	*x = RegisterRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRoute) ProtoMessage() {}

func (x *RegisterRoute) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRoute.ProtoReflect.Descriptor instead.
func (*RegisterRoute) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRoute) GetConnection_ID() string {
	if x != nil {
		return x.Connection_ID
	}
	return ""
}

// ConnectionsReq
type ConnectionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectionsReq) Reset() {
	*x = ConnectionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionsReq) ProtoMessage() {}

func (x *ConnectionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionsReq.ProtoReflect.Descriptor instead.
func (*ConnectionsReq) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{1}
}

// ConnectionsResponse is response for router`s connections.
type ConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections []string `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *ConnectionsResponse) Reset() {
	*x = ConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionsResponse) ProtoMessage() {}

func (x *ConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectionsResponse) GetConnections() []string {
	if x != nil {
		return x.Connections
	}
	return nil
}

// docConnectionsResponse model
//
// Represents a Connections response message
//
// swagger:response getConnectionsResponse
type DocConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// in: body
	Params *ConnectionsResponse `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *DocConnectionsResponse) Reset() {
	*x = DocConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocConnectionsResponse) ProtoMessage() {}

func (x *DocConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocConnectionsResponse.ProtoReflect.Descriptor instead.
func (*DocConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{3}
}

func (x *DocConnectionsResponse) GetParams() *ConnectionsResponse {
	if x != nil {
		return x.Params
	}
	return nil
}

// StatusRequest is request for getting details about pending messages.
type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection_ID string `protobuf:"bytes,1,opt,name=connection_ID,json=connectionID,proto3" json:"connection_ID,omitempty"`
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{4}
}

func (x *StatusRequest) GetConnection_ID() string {
	if x != nil {
		return x.Connection_ID
	}
	return ""
}

// StatusResponse is status response containing details about pending messages.
type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // @id
	Type              string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // @type
	MessageCount      int32                  `protobuf:"varint,3,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	DurationWaited    int32                  `protobuf:"varint,4,opt,name=duration_waited,json=durationWaited,proto3" json:"duration_waited,omitempty"`
	LastAddedTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_added_time,json=lastAddedTime,proto3" json:"last_added_time,omitempty"`
	LastDeliveredTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_delivered_time,json=lastDeliveredTime,proto3" json:"last_delivered_time,omitempty"`
	LastRemovedTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_removed_time,json=lastRemovedTime,proto3" json:"last_removed_time,omitempty"`
	TotalSize         int32                  `protobuf:"varint,8,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	Thread            *types.Thread          `protobuf:"bytes,9,opt,name=thread,proto3" json:"thread,omitempty"` // ~thread
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{5}
}

func (x *StatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StatusResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StatusResponse) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *StatusResponse) GetDurationWaited() int32 {
	if x != nil {
		return x.DurationWaited
	}
	return 0
}

func (x *StatusResponse) GetLastAddedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAddedTime
	}
	return nil
}

func (x *StatusResponse) GetLastDeliveredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastDeliveredTime
	}
	return nil
}

func (x *StatusResponse) GetLastRemovedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRemovedTime
	}
	return nil
}

func (x *StatusResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *StatusResponse) GetThread() *types.Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

// BatchPickupRequest is request for dispatching pending messages.
type BatchPickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectionID of connection for which pending messages needs to be dispatched.
	Connection_ID string `protobuf:"bytes,1,opt,name=connection_ID,json=connectionID,proto3" json:"connection_ID,omitempty"`
	// Size of batch of pending messages to be dispatched.
	BatchSize int64 `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
}

func (x *BatchPickupRequest) Reset() {
	*x = BatchPickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchPickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchPickupRequest) ProtoMessage() {}

func (x *BatchPickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchPickupRequest.ProtoReflect.Descriptor instead.
func (*BatchPickupRequest) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{6}
}

func (x *BatchPickupRequest) GetConnection_ID() string {
	if x != nil {
		return x.Connection_ID
	}
	return ""
}

func (x *BatchPickupRequest) GetBatchSize() int64 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

// BatchPickupResponse is response for dispatching pending messages.
type BatchPickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Count of messages dispatched.
	MessageCount int64 `protobuf:"varint,1,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
}

func (x *BatchPickupResponse) Reset() {
	*x = BatchPickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchPickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchPickupResponse) ProtoMessage() {}

func (x *BatchPickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchPickupResponse.ProtoReflect.Descriptor instead.
func (*BatchPickupResponse) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{7}
}

func (x *BatchPickupResponse) GetMessageCount() int64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

// CreateInvitationRequest model
//
// This is used for creating an invitation using mediator.
//
type CreateInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label     string       `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Goal      string       `protobuf:"bytes,2,opt,name=goal,proto3" json:"goal,omitempty"`
	GoalCode  string       `protobuf:"bytes,3,opt,name=goal_code,json=goalCode,proto3" json:"goal_code,omitempty"`
	Service   []*anypb.Any `protobuf:"bytes,4,rep,name=service,proto3" json:"service,omitempty"`
	Protocols []string     `protobuf:"bytes,5,rep,name=protocols,proto3" json:"protocols,omitempty"`
}

func (x *CreateInvitationRequest) Reset() {
	*x = CreateInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvitationRequest) ProtoMessage() {}

func (x *CreateInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvitationRequest.ProtoReflect.Descriptor instead.
func (*CreateInvitationRequest) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{8}
}

func (x *CreateInvitationRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CreateInvitationRequest) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *CreateInvitationRequest) GetGoalCode() string {
	if x != nil {
		return x.GoalCode
	}
	return ""
}

func (x *CreateInvitationRequest) GetService() []*anypb.Any {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *CreateInvitationRequest) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

// CreateInvitationResponse model
//
// Response for creating invitation through mediator.
//
type CreateInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Invitation is out-of-band invitation from mediator.
	Invitation *types.Invitation `protobuf:"bytes,1,opt,name=invitation,proto3" json:"invitation,omitempty"`
}

func (x *CreateInvitationResponse) Reset() {
	*x = CreateInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvitationResponse) ProtoMessage() {}

func (x *CreateInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvitationResponse.ProtoReflect.Descriptor instead.
func (*CreateInvitationResponse) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{9}
}

func (x *CreateInvitationResponse) GetInvitation() *types.Invitation {
	if x != nil {
		return x.Invitation
	}
	return nil
}

//
// reconnectRouteReq model
//
// This is used register router for the agent.
//
// swagger:parameters reconnectRouteRequest
type ReconnectRouteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Params for reconnecting the router
	//
	// in: body
	Params *RegisterRoute `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *ReconnectRouteReq) Reset() {
	*x = ReconnectRouteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconnectRouteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconnectRouteReq) ProtoMessage() {}

func (x *ReconnectRouteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconnectRouteReq.ProtoReflect.Descriptor instead.
func (*ReconnectRouteReq) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{10}
}

func (x *ReconnectRouteReq) GetParams() *RegisterRoute {
	if x != nil {
		return x.Params
	}
	return nil
}

type ReconnectRouteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReconnectRouteRes) Reset() {
	*x = ReconnectRouteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconnectRouteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconnectRouteRes) ProtoMessage() {}

func (x *ReconnectRouteRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconnectRouteRes.ProtoReflect.Descriptor instead.
func (*ReconnectRouteRes) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{11}
}

// docStatusRequest model
//
// This is used for getting details of pending messages for given connection.
//
// swagger:parameters statusRequest
type DocStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Params for getting details of pending messages for given connection.
	//
	// in: body
	Params *StatusRequest `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *DocStatusRequest) Reset() {
	*x = DocStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocStatusRequest) ProtoMessage() {}

func (x *DocStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocStatusRequest.ProtoReflect.Descriptor instead.
func (*DocStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{12}
}

func (x *DocStatusRequest) GetParams() *StatusRequest {
	if x != nil {
		return x.Params
	}
	return nil
}

// docStatusResponse model
//
// Response containing details of pending messages for given connection.
//
// swagger:response statusResponse
type DocStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Details of pending messages for given connection.
	//
	// in: body
	Body *StatusResponse `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *DocStatusResponse) Reset() {
	*x = DocStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocStatusResponse) ProtoMessage() {}

func (x *DocStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocStatusResponse.ProtoReflect.Descriptor instead.
func (*DocStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{13}
}

func (x *DocStatusResponse) GetBody() *StatusResponse {
	if x != nil {
		return x.Body
	}
	return nil
}

// docBatchPickupRequest model
//
// For dispatching pending messages for given connection.
//
// swagger:parameters batchPickupRequest
type DocBatchPickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Params for dispatching pending messages for given connection..
	//
	// in: body
	Params *BatchPickupRequest `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *DocBatchPickupRequest) Reset() {
	*x = DocBatchPickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocBatchPickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocBatchPickupRequest) ProtoMessage() {}

func (x *DocBatchPickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocBatchPickupRequest.ProtoReflect.Descriptor instead.
func (*DocBatchPickupRequest) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{14}
}

func (x *DocBatchPickupRequest) GetParams() *BatchPickupRequest {
	if x != nil {
		return x.Params
	}
	return nil
}

// docBatchPickupResponse model
//
// Response from router after pending messages dispatched for given connection.
//
// swagger:response batchPickupResponse
type DocBatchPickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response after dispatching pending messages for given connection...
	//
	// in: body
	Body *BatchPickupResponse `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *DocBatchPickupResponse) Reset() {
	*x = DocBatchPickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocBatchPickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocBatchPickupResponse) ProtoMessage() {}

func (x *DocBatchPickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocBatchPickupResponse.ProtoReflect.Descriptor instead.
func (*DocBatchPickupResponse) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{15}
}

func (x *DocBatchPickupResponse) GetBody() *BatchPickupResponse {
	if x != nil {
		return x.Body
	}
	return nil
}

// RegisterRouteReq model
//
// This is used register router for the agent.
//
// swagger:parameters registerRouteRequest
type RegisterRouteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Params for registering the route
	//
	// in: body
	Params *RegisterRoute `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *RegisterRouteReq) Reset() {
	*x = RegisterRouteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRouteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRouteReq) ProtoMessage() {}

func (x *RegisterRouteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRouteReq.ProtoReflect.Descriptor instead.
func (*RegisterRouteReq) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{16}
}

func (x *RegisterRouteReq) GetParams() *RegisterRoute {
	if x != nil {
		return x.Params
	}
	return nil
}

// RegisterRouteRes model
//
// swagger:response registerRouteRes
type RegisterRouteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterRouteRes) Reset() {
	*x = RegisterRouteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRouteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRouteRes) ProtoMessage() {}

func (x *RegisterRouteRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRouteRes.ProtoReflect.Descriptor instead.
func (*RegisterRouteRes) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{17}
}

// UnregisterRouterReq model
//
// This is used for unregister a router for the agent.
//
// swagger:parameters unregisterRouter
type UnregisterRouterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Params for unregister the router
	//
	// in: body
	Params *RegisterRoute `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UnregisterRouterReq) Reset() {
	*x = UnregisterRouterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterRouterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRouterReq) ProtoMessage() {}

func (x *UnregisterRouterReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterRouterReq.ProtoReflect.Descriptor instead.
func (*UnregisterRouterReq) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{18}
}

func (x *UnregisterRouterReq) GetParams() *RegisterRoute {
	if x != nil {
		return x.Params
	}
	return nil
}

// UnregisterRouteRes model
//
// swagger:response unregisterRouteRes
type UnregisterRouteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterRouteRes) Reset() {
	*x = UnregisterRouteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_mediator_services_mediator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterRouteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRouteRes) ProtoMessage() {}

func (x *UnregisterRouteRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_mediator_services_mediator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterRouteRes.ProtoReflect.Descriptor instead.
func (*UnregisterRouteRes) Descriptor() ([]byte, []int) {
	return file_api_did_mediator_services_mediator_proto_rawDescGZIP(), []int{19}
}

var File_api_did_mediator_services_mediator_proto protoreflect.FileDescriptor

var file_api_did_mediator_services_mediator_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x62, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x34, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x22, 0x37, 0x0a, 0x13, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x60, 0x0a, 0x16, 0x64, 0x6f, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x34, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xac, 0x03, 0x0a, 0x0e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x65, 0x64, 0x12,
	0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6c, 0x61,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x46, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64,
	0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x22, 0x58, 0x0a, 0x12, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x3a, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xae, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x61, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x64, 0x6f, 0x63, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x11, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x40, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x10, 0x64, 0x6f, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x52, 0x0a,
	0x11, 0x64, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x5e, 0x0a, 0x15, 0x64, 0x6f, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x5c, 0x0a, 0x16, 0x64, 0x6f, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22,
	0x54, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x13, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x40, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x32, 0x81, 0x06, 0x0a, 0x12, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x66, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0a, 0x75, 0x6e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69,
	0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x2d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c,
	0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x2c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x61, 0x74, 0x74,
	0x69, 0x2f, 0x47, 0x53, 0x53, 0x49, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_did_mediator_services_mediator_proto_rawDescOnce sync.Once
	file_api_did_mediator_services_mediator_proto_rawDescData = file_api_did_mediator_services_mediator_proto_rawDesc
)

func file_api_did_mediator_services_mediator_proto_rawDescGZIP() []byte {
	file_api_did_mediator_services_mediator_proto_rawDescOnce.Do(func() {
		file_api_did_mediator_services_mediator_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_did_mediator_services_mediator_proto_rawDescData)
	})
	return file_api_did_mediator_services_mediator_proto_rawDescData
}

var file_api_did_mediator_services_mediator_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_did_mediator_services_mediator_proto_goTypes = []interface{}{
	(*RegisterRoute)(nil),            // 0: api.did.mediator.services.RegisterRoute
	(*ConnectionsReq)(nil),           // 1: api.did.mediator.services.ConnectionsReq
	(*ConnectionsResponse)(nil),      // 2: api.did.mediator.services.ConnectionsResponse
	(*DocConnectionsResponse)(nil),   // 3: api.did.mediator.services.docConnectionsResponse
	(*StatusRequest)(nil),            // 4: api.did.mediator.services.StatusRequest
	(*StatusResponse)(nil),           // 5: api.did.mediator.services.StatusResponse
	(*BatchPickupRequest)(nil),       // 6: api.did.mediator.services.BatchPickupRequest
	(*BatchPickupResponse)(nil),      // 7: api.did.mediator.services.BatchPickupResponse
	(*CreateInvitationRequest)(nil),  // 8: api.did.mediator.services.CreateInvitationRequest
	(*CreateInvitationResponse)(nil), // 9: api.did.mediator.services.CreateInvitationResponse
	(*ReconnectRouteReq)(nil),        // 10: api.did.mediator.services.ReconnectRouteReq
	(*ReconnectRouteRes)(nil),        // 11: api.did.mediator.services.ReconnectRouteRes
	(*DocStatusRequest)(nil),         // 12: api.did.mediator.services.docStatusRequest
	(*DocStatusResponse)(nil),        // 13: api.did.mediator.services.docStatusResponse
	(*DocBatchPickupRequest)(nil),    // 14: api.did.mediator.services.docBatchPickupRequest
	(*DocBatchPickupResponse)(nil),   // 15: api.did.mediator.services.docBatchPickupResponse
	(*RegisterRouteReq)(nil),         // 16: api.did.mediator.services.RegisterRouteReq
	(*RegisterRouteRes)(nil),         // 17: api.did.mediator.services.RegisterRouteRes
	(*UnregisterRouterReq)(nil),      // 18: api.did.mediator.services.UnregisterRouterReq
	(*UnregisterRouteRes)(nil),       // 19: api.did.mediator.services.UnregisterRouteRes
	(*timestamppb.Timestamp)(nil),    // 20: google.protobuf.Timestamp
	(*types.Thread)(nil),             // 21: api.did.doc.types.Thread
	(*anypb.Any)(nil),                // 22: google.protobuf.Any
	(*types.Invitation)(nil),         // 23: api.did.doc.types.Invitation
}
var file_api_did_mediator_services_mediator_proto_depIdxs = []int32{
	2,  // 0: api.did.mediator.services.docConnectionsResponse.params:type_name -> api.did.mediator.services.ConnectionsResponse
	20, // 1: api.did.mediator.services.StatusResponse.last_added_time:type_name -> google.protobuf.Timestamp
	20, // 2: api.did.mediator.services.StatusResponse.last_delivered_time:type_name -> google.protobuf.Timestamp
	20, // 3: api.did.mediator.services.StatusResponse.last_removed_time:type_name -> google.protobuf.Timestamp
	21, // 4: api.did.mediator.services.StatusResponse.thread:type_name -> api.did.doc.types.Thread
	22, // 5: api.did.mediator.services.CreateInvitationRequest.service:type_name -> google.protobuf.Any
	23, // 6: api.did.mediator.services.CreateInvitationResponse.invitation:type_name -> api.did.doc.types.Invitation
	0,  // 7: api.did.mediator.services.ReconnectRouteReq.params:type_name -> api.did.mediator.services.RegisterRoute
	4,  // 8: api.did.mediator.services.docStatusRequest.params:type_name -> api.did.mediator.services.StatusRequest
	5,  // 9: api.did.mediator.services.docStatusResponse.body:type_name -> api.did.mediator.services.StatusResponse
	6,  // 10: api.did.mediator.services.docBatchPickupRequest.params:type_name -> api.did.mediator.services.BatchPickupRequest
	7,  // 11: api.did.mediator.services.docBatchPickupResponse.body:type_name -> api.did.mediator.services.BatchPickupResponse
	0,  // 12: api.did.mediator.services.RegisterRouteReq.params:type_name -> api.did.mediator.services.RegisterRoute
	0,  // 13: api.did.mediator.services.UnregisterRouterReq.params:type_name -> api.did.mediator.services.RegisterRoute
	16, // 14: api.did.mediator.services.MediatorController.register:input_type -> api.did.mediator.services.RegisterRouteReq
	18, // 15: api.did.mediator.services.MediatorController.unregister:input_type -> api.did.mediator.services.UnregisterRouterReq
	1,  // 16: api.did.mediator.services.MediatorController.connections:input_type -> api.did.mediator.services.ConnectionsReq
	10, // 17: api.did.mediator.services.MediatorController.reconnect:input_type -> api.did.mediator.services.ReconnectRouteReq
	4,  // 18: api.did.mediator.services.MediatorController.status:input_type -> api.did.mediator.services.StatusRequest
	6,  // 19: api.did.mediator.services.MediatorController.batchPickup:input_type -> api.did.mediator.services.BatchPickupRequest
	10, // 20: api.did.mediator.services.MediatorController.reconnectAll:input_type -> api.did.mediator.services.ReconnectRouteReq
	17, // 21: api.did.mediator.services.MediatorController.register:output_type -> api.did.mediator.services.RegisterRouteRes
	19, // 22: api.did.mediator.services.MediatorController.unregister:output_type -> api.did.mediator.services.UnregisterRouteRes
	2,  // 23: api.did.mediator.services.MediatorController.connections:output_type -> api.did.mediator.services.ConnectionsResponse
	11, // 24: api.did.mediator.services.MediatorController.reconnect:output_type -> api.did.mediator.services.ReconnectRouteRes
	5,  // 25: api.did.mediator.services.MediatorController.status:output_type -> api.did.mediator.services.StatusResponse
	7,  // 26: api.did.mediator.services.MediatorController.batchPickup:output_type -> api.did.mediator.services.BatchPickupResponse
	11, // 27: api.did.mediator.services.MediatorController.reconnectAll:output_type -> api.did.mediator.services.ReconnectRouteRes
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_did_mediator_services_mediator_proto_init() }
func file_api_did_mediator_services_mediator_proto_init() {
	if File_api_did_mediator_services_mediator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_did_mediator_services_mediator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchPickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchPickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconnectRouteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconnectRouteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocBatchPickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocBatchPickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRouteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRouteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterRouterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_mediator_services_mediator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterRouteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_did_mediator_services_mediator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_did_mediator_services_mediator_proto_goTypes,
		DependencyIndexes: file_api_did_mediator_services_mediator_proto_depIdxs,
		MessageInfos:      file_api_did_mediator_services_mediator_proto_msgTypes,
	}.Build()
	File_api_did_mediator_services_mediator_proto = out.File
	file_api_did_mediator_services_mediator_proto_rawDesc = nil
	file_api_did_mediator_services_mediator_proto_goTypes = nil
	file_api_did_mediator_services_mediator_proto_depIdxs = nil
}
