// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: api/did/msg/services/message.proto

package services

import (
	_ "github.com/bhatti/GSSI/api/did/doc/types"
	_ "github.com/bhatti/GSSI/api/did/msg/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RegisterMsgSvcRequest contains parameters for registering a message service to message handler.
type RegisterMsgSvcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the message service
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Acceptance criteria for message service based on message purpose
	// in case of multiple purposes, message will be dispatched if any one of the purpose matches
	// with the purpose of incoming message.
	// Can be provided in conjunction with other acceptance criteria.
	Purpose []string `protobuf:"bytes,2,rep,name=purpose,proto3" json:"purpose,omitempty"`
	// Acceptance criteria for message service based on message message.
	// Can be provided in conjunction with other acceptance criteria.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterMsgSvcRequest) Reset() {
	*x = RegisterMsgSvcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMsgSvcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMsgSvcRequest) ProtoMessage() {}

func (x *RegisterMsgSvcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMsgSvcRequest.ProtoReflect.Descriptor instead.
func (*RegisterMsgSvcRequest) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterMsgSvcRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterMsgSvcRequest) GetPurpose() []string {
	if x != nil {
		return x.Purpose
	}
	return nil
}

func (x *RegisterMsgSvcRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// UnregisterMsgSvcRequest contains parameters for unregistering a message service from message handler.
type UnregisterMsgSvcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the message service to be unregistered
	// required: true
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UnregisterMsgSvcRequest) Reset() {
	*x = UnregisterMsgSvcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterMsgSvcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMsgSvcRequest) ProtoMessage() {}

func (x *UnregisterMsgSvcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMsgSvcRequest.ProtoReflect.Descriptor instead.
func (*UnregisterMsgSvcRequest) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{1}
}

func (x *UnregisterMsgSvcRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// RegisteredServicesResponse is for returning list of registered service names.
type RegisteredServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Registered service names
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *RegisteredServicesResponse) Reset() {
	*x = RegisteredServicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisteredServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisteredServicesResponse) ProtoMessage() {}

func (x *RegisteredServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisteredServicesResponse.ProtoReflect.Descriptor instead.
func (*RegisteredServicesResponse) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{2}
}

func (x *RegisteredServicesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// SendNewMessageRequest contains parameters for sending new message
// with one of three destination options below,
//      1. ConnectionID - ID of the connection between sender and receiver of this message.
//      2. TheirDID - TheirDID of the DID exchange connection record between sender and receiver of this message.
//      3. ServiceEndpoint (With recipient Keys, endpoint and optional routing keys) - To Send message outside connection.
// Note: Precedence logic when multiple destination options are provided are according to above order.
type SendNewMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Connection ID of the message destination
	// This parameter takes precedence over all the other destination parameters.
	Connection_ID string `protobuf:"bytes,1,opt,name=connection_ID,json=connectionID,proto3" json:"connection_ID,omitempty"`
	// DID of the destination.
	// This parameter takes precedence over `ServiceEndpoint` destination parameter.
	TheirDid string `protobuf:"bytes,2,opt,name=their_did,json=theirDid,proto3" json:"their_did,omitempty"`
	// ServiceEndpointDestination service endpoint destination.
	// This param can be used to send messages outside connection.
	ServiceEndpoint *ServiceEndpointDestinationParams `protobuf:"bytes,3,opt,name=service_endpoint,json=serviceEndpoint,proto3" json:"service_endpoint,omitempty"`
	// Message body of the message
	MessageBod []byte `protobuf:"bytes,4,opt,name=message_bod,json=messageBod,proto3" json:"message_bod,omitempty"` // json.RawMessage
	// Await reply from receiver of this message
	// If provided, then send message feature will wait response of this message for same thread
	AwaitReply *AwaitReply `protobuf:"bytes,5,opt,name=await_reply,json=awaitReply,proto3" json:"await_reply,omitempty"`
}

func (x *SendNewMessageRequest) Reset() {
	*x = SendNewMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNewMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNewMessageRequest) ProtoMessage() {}

func (x *SendNewMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNewMessageRequest.ProtoReflect.Descriptor instead.
func (*SendNewMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{3}
}

func (x *SendNewMessageRequest) GetConnection_ID() string {
	if x != nil {
		return x.Connection_ID
	}
	return ""
}

func (x *SendNewMessageRequest) GetTheirDid() string {
	if x != nil {
		return x.TheirDid
	}
	return ""
}

func (x *SendNewMessageRequest) GetServiceEndpoint() *ServiceEndpointDestinationParams {
	if x != nil {
		return x.ServiceEndpoint
	}
	return nil
}

func (x *SendNewMessageRequest) GetMessageBod() []byte {
	if x != nil {
		return x.MessageBod
	}
	return nil
}

func (x *SendNewMessageRequest) GetAwaitReply() *AwaitReply {
	if x != nil {
		return x.AwaitReply
	}
	return nil
}

// ServiceEndpointDestinationParams contains service endpoint params.
type ServiceEndpointDestinationParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Recipient keys of service endpoint
	RecipientKeys []string `protobuf:"bytes,1,rep,name=recipient_keys,json=recipientKeys,proto3" json:"recipient_keys,omitempty"`
	// Service endpoint
	ServiceEndpoint string `protobuf:"bytes,2,opt,name=service_endpoint,json=serviceEndpoint,proto3" json:"service_endpoint,omitempty"`
	// Routing Keys of service endpoint
	RoutingKeys []string `protobuf:"bytes,3,rep,name=routing_keys,json=routingKeys,proto3" json:"routing_keys,omitempty"`
}

func (x *ServiceEndpointDestinationParams) Reset() {
	*x = ServiceEndpointDestinationParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceEndpointDestinationParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEndpointDestinationParams) ProtoMessage() {}

func (x *ServiceEndpointDestinationParams) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEndpointDestinationParams.ProtoReflect.Descriptor instead.
func (*ServiceEndpointDestinationParams) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceEndpointDestinationParams) GetRecipientKeys() []string {
	if x != nil {
		return x.RecipientKeys
	}
	return nil
}

func (x *ServiceEndpointDestinationParams) GetServiceEndpoint() string {
	if x != nil {
		return x.ServiceEndpoint
	}
	return ""
}

func (x *ServiceEndpointDestinationParams) GetRoutingKeys() []string {
	if x != nil {
		return x.RoutingKeys
	}
	return nil
}

// AwaitReply contains await for reply parameters.
type AwaitReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ReplyMessageType message message of incoming reply
	MessageType string `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	// Timeout (in milliseconds) waiting for reply
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *AwaitReply) Reset() {
	*x = AwaitReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwaitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwaitReply) ProtoMessage() {}

func (x *AwaitReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwaitReply.ProtoReflect.Descriptor instead.
func (*AwaitReply) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{5}
}

func (x *AwaitReply) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *AwaitReply) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// SendReplyMessageRequest contains parameters for sending message reply.
type SendReplyMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the message replying to
	Message_ID string `protobuf:"bytes,1,opt,name=message_ID,json=messageID,proto3" json:"message_ID,omitempty"`
	// Message body of the reply message
	MessageBody []byte `protobuf:"bytes,2,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"` // json.RawMessage
	// StartNewThread if provided, replies to message by starting a new thread.
	StartNewThread bool `protobuf:"varint,3,opt,name=start_new_thread,json=startNewThread,proto3" json:"start_new_thread,omitempty"`
	// Await reply from receiver of this message
	// If provided, then reply message feature will wait response of this message for same thread
	AwaitReply *AwaitReply `protobuf:"bytes,4,opt,name=await_reply,json=awaitReply,proto3" json:"await_reply,omitempty"`
}

func (x *SendReplyMessageRequest) Reset() {
	*x = SendReplyMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReplyMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReplyMessageRequest) ProtoMessage() {}

func (x *SendReplyMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReplyMessageRequest.ProtoReflect.Descriptor instead.
func (*SendReplyMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{6}
}

func (x *SendReplyMessageRequest) GetMessage_ID() string {
	if x != nil {
		return x.Message_ID
	}
	return ""
}

func (x *SendReplyMessageRequest) GetMessageBody() []byte {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

func (x *SendReplyMessageRequest) GetStartNewThread() bool {
	if x != nil {
		return x.StartNewThread
	}
	return false
}

func (x *SendReplyMessageRequest) GetAwaitReply() *AwaitReply {
	if x != nil {
		return x.AwaitReply
	}
	return nil
}

// SendMessageResponse is response for send/reply message feature.
type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response will contain raw message reply content if AwaitReply is used in send message request.
	Response []byte `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"` // json.RawMessage
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{7}
}

func (x *SendMessageResponse) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

// RegisterHTTPMsgSvcRequest contains parameters for registering an HTTP over DIDComm message service to message handler.
type RegisterHTTPMsgSvcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the HTTP over DIDComm message service
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Acceptance criteria for http over did comm message service based on message purpose.
	// In case of multiple purposes, operation will follow `A tagging system` purpose field validation from RFC-0351
	// If not provided then all incoming messages of HTTP over DIDComm message will be handled by operation.
	Purpose []string `protobuf:"bytes,2,rep,name=purpose,proto3" json:"purpose,omitempty"`
}

func (x *RegisterHTTPMsgSvcRequest) Reset() {
	*x = RegisterHTTPMsgSvcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_did_msg_services_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterHTTPMsgSvcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterHTTPMsgSvcRequest) ProtoMessage() {}

func (x *RegisterHTTPMsgSvcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_did_msg_services_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterHTTPMsgSvcRequest.ProtoReflect.Descriptor instead.
func (*RegisterHTTPMsgSvcRequest) Descriptor() ([]byte, []int) {
	return file_api_did_msg_services_message_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterHTTPMsgSvcRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterHTTPMsgSvcRequest) GetPurpose() []string {
	if x != nil {
		return x.Purpose
	}
	return nil
}

var File_api_did_msg_services_message_proto protoreflect.FileDescriptor

var file_api_did_msg_services_message_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x69, 0x64, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x69, 0x64, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6f,
	0x75, 0x74, 0x6f, 0x66, 0x62, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f,
	0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x53, 0x76, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2d, 0x0a, 0x17, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x32,
	0x0a, 0x1a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x65, 0x77, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x65, 0x69, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x65, 0x69, 0x72, 0x44, 0x69, 0x64, 0x12, 0x61,
	0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x69, 0x64, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x61, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69,
	0x64, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x77, 0x61, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0a, 0x61, 0x77, 0x61, 0x69, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x97, 0x01, 0x0a, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x22,
	0x64, 0x0a, 0x0a, 0x41, 0x77, 0x61, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x65, 0x77,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4e, 0x65, 0x77, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x41, 0x0a,
	0x0b, 0x61, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x64, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x77, 0x61, 0x69, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x0a, 0x61, 0x77, 0x61, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x31, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48,
	0x54, 0x54, 0x50, 0x4d, 0x73, 0x67, 0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x2d,
	0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x61,
	0x74, 0x74, 0x69, 0x2f, 0x47, 0x53, 0x53, 0x49, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x64,
	0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_did_msg_services_message_proto_rawDescOnce sync.Once
	file_api_did_msg_services_message_proto_rawDescData = file_api_did_msg_services_message_proto_rawDesc
)

func file_api_did_msg_services_message_proto_rawDescGZIP() []byte {
	file_api_did_msg_services_message_proto_rawDescOnce.Do(func() {
		file_api_did_msg_services_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_did_msg_services_message_proto_rawDescData)
	})
	return file_api_did_msg_services_message_proto_rawDescData
}

var file_api_did_msg_services_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_did_msg_services_message_proto_goTypes = []interface{}{
	(*RegisterMsgSvcRequest)(nil),            // 0: api.did.msg.services.RegisterMsgSvcRequest
	(*UnregisterMsgSvcRequest)(nil),          // 1: api.did.msg.services.UnregisterMsgSvcRequest
	(*RegisteredServicesResponse)(nil),       // 2: api.did.msg.services.RegisteredServicesResponse
	(*SendNewMessageRequest)(nil),            // 3: api.did.msg.services.SendNewMessageRequest
	(*ServiceEndpointDestinationParams)(nil), // 4: api.did.msg.services.ServiceEndpointDestinationParams
	(*AwaitReply)(nil),                       // 5: api.did.msg.services.AwaitReply
	(*SendReplyMessageRequest)(nil),          // 6: api.did.msg.services.SendReplyMessageRequest
	(*SendMessageResponse)(nil),              // 7: api.did.msg.services.SendMessageResponse
	(*RegisterHTTPMsgSvcRequest)(nil),        // 8: api.did.msg.services.RegisterHTTPMsgSvcRequest
	(*durationpb.Duration)(nil),              // 9: google.protobuf.Duration
}
var file_api_did_msg_services_message_proto_depIdxs = []int32{
	4, // 0: api.did.msg.services.SendNewMessageRequest.service_endpoint:type_name -> api.did.msg.services.ServiceEndpointDestinationParams
	5, // 1: api.did.msg.services.SendNewMessageRequest.await_reply:type_name -> api.did.msg.services.AwaitReply
	9, // 2: api.did.msg.services.AwaitReply.timeout:type_name -> google.protobuf.Duration
	5, // 3: api.did.msg.services.SendReplyMessageRequest.await_reply:type_name -> api.did.msg.services.AwaitReply
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_did_msg_services_message_proto_init() }
func file_api_did_msg_services_message_proto_init() {
	if File_api_did_msg_services_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_did_msg_services_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMsgSvcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_msg_services_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterMsgSvcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_msg_services_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisteredServicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_msg_services_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNewMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_msg_services_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceEndpointDestinationParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_msg_services_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwaitReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_msg_services_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReplyMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_msg_services_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_did_msg_services_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterHTTPMsgSvcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_did_msg_services_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_did_msg_services_message_proto_goTypes,
		DependencyIndexes: file_api_did_msg_services_message_proto_depIdxs,
		MessageInfos:      file_api_did_msg_services_message_proto_msgTypes,
	}.Build()
	File_api_did_msg_services_message_proto = out.File
	file_api_did_msg_services_message_proto_rawDesc = nil
	file_api_did_msg_services_message_proto_goTypes = nil
	file_api_did_msg_services_message_proto_depIdxs = nil
}
