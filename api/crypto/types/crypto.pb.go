// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: api/crypto/types/crypto.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DefKeySize is the default key size for crypto primitives.
type DefKey int32

const (
	DefKey_iota DefKey = 0
	DefKey_size DefKey = 32
)

// Enum value maps for DefKey.
var (
	DefKey_name = map[int32]string{
		0:  "iota",
		32: "size",
	}
	DefKey_value = map[string]int32{
		"iota": 0,
		"size": 32,
	}
)

func (x DefKey) Enum() *DefKey {
	p := new(DefKey)
	*p = x
	return p
}

func (x DefKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DefKey) Descriptor() protoreflect.EnumDescriptor {
	return file_api_crypto_types_crypto_proto_enumTypes[0].Descriptor()
}

func (DefKey) Type() protoreflect.EnumType {
	return &file_api_crypto_types_crypto_proto_enumTypes[0]
}

func (x DefKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DefKey.Descriptor instead.
func (DefKey) EnumDescriptor() ([]byte, []int) {
	return file_api_crypto_types_crypto_proto_rawDescGZIP(), []int{0}
}

// RecipientWrappedKey contains recipient key material required to unwrap CEK.
type RecipientWrappedKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kid          string     `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	Encryptedcek []byte     `protobuf:"bytes,2,opt,name=encryptedcek,proto3" json:"encryptedcek,omitempty"`
	Epk          *PublicKey `protobuf:"bytes,3,opt,name=epk,proto3" json:"epk,omitempty"`
	Alg          string     `protobuf:"bytes,4,opt,name=alg,proto3" json:"alg,omitempty"`
	Apu          []byte     `protobuf:"bytes,5,opt,name=apu,proto3" json:"apu,omitempty"`
	Apv          []byte     `protobuf:"bytes,6,opt,name=apv,proto3" json:"apv,omitempty"`
}

func (x *RecipientWrappedKey) Reset() {
	*x = RecipientWrappedKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_crypto_types_crypto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipientWrappedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipientWrappedKey) ProtoMessage() {}

func (x *RecipientWrappedKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_crypto_types_crypto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipientWrappedKey.ProtoReflect.Descriptor instead.
func (*RecipientWrappedKey) Descriptor() ([]byte, []int) {
	return file_api_crypto_types_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *RecipientWrappedKey) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *RecipientWrappedKey) GetEncryptedcek() []byte {
	if x != nil {
		return x.Encryptedcek
	}
	return nil
}

func (x *RecipientWrappedKey) GetEpk() *PublicKey {
	if x != nil {
		return x.Epk
	}
	return nil
}

func (x *RecipientWrappedKey) GetAlg() string {
	if x != nil {
		return x.Alg
	}
	return ""
}

func (x *RecipientWrappedKey) GetApu() []byte {
	if x != nil {
		return x.Apu
	}
	return nil
}

func (x *RecipientWrappedKey) GetApv() []byte {
	if x != nil {
		return x.Apv
	}
	return nil
}

// PublicKey mainly to exchange EPK in RecipientWrappedKey.
type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kid   string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	X     []byte `protobuf:"bytes,2,opt,name=x,proto3" json:"x,omitempty"`
	Y     []byte `protobuf:"bytes,3,opt,name=y,proto3" json:"y,omitempty"`
	Curve string `protobuf:"bytes,4,opt,name=curve,proto3" json:"curve,omitempty"`
	Type  string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_crypto_types_crypto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_crypto_types_crypto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_api_crypto_types_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *PublicKey) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *PublicKey) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *PublicKey) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *PublicKey) GetCurve() string {
	if x != nil {
		return x.Curve
	}
	return ""
}

func (x *PublicKey) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// PrivateKey mainly used to exchange ephemeral private key in JWE encrypter.
type PrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey *PublicKey `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	D      []byte     `protobuf:"bytes,2,opt,name=d,proto3" json:"d,omitempty"`
}

func (x *PrivateKey) Reset() {
	*x = PrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_crypto_types_crypto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey) ProtoMessage() {}

func (x *PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_crypto_types_crypto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey.ProtoReflect.Descriptor instead.
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return file_api_crypto_types_crypto_proto_rawDescGZIP(), []int{2}
}

func (x *PrivateKey) GetPubKey() *PublicKey {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *PrivateKey) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

var File_api_crypto_types_crypto_proto protoreflect.FileDescriptor

var file_api_crypto_types_crypto_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x63, 0x65, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x63, 0x65, 0x6b, 0x12,
	0x2d, 0x0a, 0x03, 0x65, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x65, 0x70, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x6c, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x61,
	0x70, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x61, 0x70, 0x76, 0x22, 0x63, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x75, 0x72, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x0a, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x0c, 0x0a, 0x01,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x64, 0x2a, 0x1c, 0x0a, 0x06, 0x44, 0x65,
	0x66, 0x4b, 0x65, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x69, 0x6f, 0x74, 0x61, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x10, 0x20, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x61, 0x74, 0x74, 0x69, 0x2f, 0x47, 0x53,
	0x53, 0x49, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_crypto_types_crypto_proto_rawDescOnce sync.Once
	file_api_crypto_types_crypto_proto_rawDescData = file_api_crypto_types_crypto_proto_rawDesc
)

func file_api_crypto_types_crypto_proto_rawDescGZIP() []byte {
	file_api_crypto_types_crypto_proto_rawDescOnce.Do(func() {
		file_api_crypto_types_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_crypto_types_crypto_proto_rawDescData)
	})
	return file_api_crypto_types_crypto_proto_rawDescData
}

var file_api_crypto_types_crypto_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_crypto_types_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_crypto_types_crypto_proto_goTypes = []interface{}{
	(DefKey)(0),                 // 0: api.crypto.types.DefKey
	(*RecipientWrappedKey)(nil), // 1: api.crypto.types.RecipientWrappedKey
	(*PublicKey)(nil),           // 2: api.crypto.types.PublicKey
	(*PrivateKey)(nil),          // 3: api.crypto.types.PrivateKey
}
var file_api_crypto_types_crypto_proto_depIdxs = []int32{
	2, // 0: api.crypto.types.RecipientWrappedKey.epk:type_name -> api.crypto.types.PublicKey
	2, // 1: api.crypto.types.PrivateKey.pubKey:type_name -> api.crypto.types.PublicKey
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_crypto_types_crypto_proto_init() }
func file_api_crypto_types_crypto_proto_init() {
	if File_api_crypto_types_crypto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_crypto_types_crypto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipientWrappedKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_crypto_types_crypto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_crypto_types_crypto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_crypto_types_crypto_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_crypto_types_crypto_proto_goTypes,
		DependencyIndexes: file_api_crypto_types_crypto_proto_depIdxs,
		EnumInfos:         file_api_crypto_types_crypto_proto_enumTypes,
		MessageInfos:      file_api_crypto_types_crypto_proto_msgTypes,
	}.Build()
	File_api_crypto_types_crypto_proto = out.File
	file_api_crypto_types_crypto_proto_rawDesc = nil
	file_api_crypto_types_crypto_proto_goTypes = nil
	file_api_crypto_types_crypto_proto_depIdxs = nil
}
